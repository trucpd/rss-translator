{
  "last_updated": "2025-10-25T12:46:19.299546",
  "entries": [
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "Does Crossplane Replace Terraform? Part I: the Theory",
      "link": "https://blog.container-solutions.com/does-crossplane-replace-terraform",
      "published": "Wed, 05 Jun 2024 10:27:40 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/does-crossplane-replace-terraform\" title=\"\"> <img alt=\"Does Crossplane Replace Terraform? Part I: the Theory\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/Screenshot%202024-06-05%20at%2011.26.11.png\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<h2>What is Crossplane?</h2> \n<p>If you don't already know,&nbsp;<span>Crossplane is billed as an:</span></p>",
      "timestamp": 1761396309.5296133,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "CI Shootout: Getting started with Jenkins, Concourse, Tekton and Argo Workflows",
      "link": "https://blog.container-solutions.com/ci-shootout-getting-started-with-jenkins-concourse-tekton-and-argo-workflows",
      "published": "Wed, 04 Oct 2023 11:05:39 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/ci-shootout-getting-started-with-jenkins-concourse-tekton-and-argo-workflows\" title=\"\"> <img alt=\"CI Shootout: Getting started with Jenkins, Concourse, Tekton and Argo Workflows\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/gunfight-CI-CD.jpeg\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>At EngineerBetter we’ve evaluated four self-hosted CI systems in order to compare them against each other:<span>&nbsp;</span><a href=\"https://www.jenkins.io/\">Jenkins</a>,<span>&nbsp;</span><a href=\"https://concourse-ci.org/\">Concourse</a>,<span>&nbsp;</span><a href=\"https://tekton.dev/\">Tekton</a><span>&nbsp;</span>and<span>&nbsp;</span><a href=\"https://argoproj.github.io/workflows/\">Argo Workflows</a>. For each CI system we’ve created some pipelines that:</p>",
      "timestamp": 1761396309.5296175,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "Debugging Kubernetes Networking",
      "link": "https://blog.container-solutions.com/debugging-kubernetes-networking",
      "published": "Wed, 04 Oct 2023 10:48:26 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/debugging-kubernetes-networking\" title=\"\"> <img alt=\"Debugging Kubernetes Networking\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/down-the-rabbit-hole-kubernetes.jpeg\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>At EngineerBetter, we’re going through the formality of ensuring that we’ve got the Certified Kubernetes Administrator qualification box ticked. Kelsey Hightower’s<span>&nbsp;</span><a href=\"https://github.com/kelseyhightower/kubernetes-the-hard-way\">Kubernetes The Hard Way</a><span>&nbsp;</span>is a valuable guide to setting up a Kubes cluster ‘by hand’, and so I set about running through it.</p>",
      "timestamp": 1761396309.5296214,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "External Secrets Operator Accepted into the CNCF Sandbox",
      "link": "https://blog.container-solutions.com/external-secrets-operator-accepted-into-the-cncf-sandbox",
      "published": "Tue, 16 Aug 2022 08:01:51 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/external-secrets-operator-accepted-into-the-cncf-sandbox\" title=\"\"> <img alt=\"External Secrets Operator Accepted into the CNCF Sandbox\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/ezgif-3-327b6b672e.gif\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>The Cloud Native Computing Foundation (CNCF) has <a href=\"https://www.cncf.io/projects/external-secrets/\">announced</a> that External Secrets Operator (ESO), an open-source solution for synchronising secrets from external APIs into Kubernetes, can begin incubating as an early stage project in the CNCF Sandbox.</p>",
      "timestamp": 1761396309.5296245,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "Enforcing Policies with Gatekeeper in Kubernetes",
      "link": "https://blog.container-solutions.com/enforcing-policies-with-gatekeeper-in-kubernetes",
      "published": "Thu, 30 Jun 2022 13:34:38 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/enforcing-policies-with-gatekeeper-in-kubernetes\" title=\"\"> <img alt=\"Enforcing Policies with Gatekeeper in Kubernetes\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/blog%20hero%20images/Enforcing%20policies%20with%20Gatekeeper%20social-100-2.jpg\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>When managing Kubernetes clusters, cluster administrators need to ensure the overall stability of the system. To accomplish this it is necessary to avoid disruptions to the control plane, and also avoid any risks of users being able to escalate their privileges thus causing further problems. With this in mind, protecting the <code>kube-system</code> namespace and enforcing pod security policies to run payloads with just the necessary access is a must.</p>",
      "timestamp": 1761396309.5296278,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "Using Kubernetes Monitoring Mixins",
      "link": "https://blog.container-solutions.com/using-kubernetes-monitoring-mixins",
      "published": "Mon, 14 Mar 2022 12:25:02 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/using-kubernetes-monitoring-mixins\" title=\"\"> <img alt=\"Using Kubernetes Monitoring Mixins\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/Using%20K8s%20Monitoring%20Mixins%20Social.png\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>The term <code>Kubernetes monitoring mixins</code> appears in many Kubernetes related projects involving Prometheus and Grafana. Despite its broad usage, the details about it cannot be easily found. There are many cases where mixins are used without notably mentioning them (for example in <a href=\"https://github.com/prometheus-operator/prometheus-operator/tree/master/jsonnet/mixin\">prometheus-operator</a>). In this article, we are going to explore what it is and also how you can use it in your Kubernetes cluster.</p>",
      "timestamp": 1761396309.5296319,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "A Beginner's Guide to Using the Prometheus Operator",
      "link": "https://blog.container-solutions.com/prometheus-operator-beginners-guide",
      "published": "Tue, 25 Jan 2022 16:58:03 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/prometheus-operator-beginners-guide\" title=\"\"> <img alt=\"A Beginners Guide to Using the Prometheus Operator\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/prometheus.png\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>Prometheus is a simple and effective open-source monitoring system. In the years after we published the article <a href=\"https://blog.container-solutions.com/microservice-monitoring-with-prometheus\">Monitoring Microservices with Prometheus</a>, the system has graduated from the Cloud Native Computing Foundation (CNCF) and became the preferred monitoring tool for distributed systems. One of the reasons for this, as mentioned in our previous article, is its intuitive simplicity. It doesn’t try to do anything fancy. It provides a data store, data scrapers, an alerting mechanism and a very simple user interface.</p>",
      "timestamp": 1761396309.5296352,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "Windows Container on K8s Clusters",
      "link": "https://blog.container-solutions.com/windows-container-k8s-cluster",
      "published": "Fri, 03 Dec 2021 09:27:27 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/windows-container-k8s-cluster\" title=\"\"> <img alt=\"Windows Container on K8s Clusters\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/Artboard%2054%20copy.png\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>I recently came across a fun and interesting challenge. In the latest project I joined, a team wanted to do a \"lift &amp; shift to the cloud\". As a Cloud Native engineer I've seen this pattern fairly often, although it never means quite the same thing.</p>",
      "timestamp": 1761396309.529638,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "The Birth of the External Secrets Community",
      "link": "https://blog.container-solutions.com/the-birth-of-the-external-secrets-community",
      "published": "Thu, 06 May 2021 07:12:38 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/the-birth-of-the-external-secrets-community\" title=\"\"> <img alt=\"The Birth of the External Secrets Community\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/externaloperator.png\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p><span style=\"color: #000000;\">Managing secrets in Kubernetes can be a cumbersome job. In a multi-service multi-environment setup, you can end up with hundreds of secrets without even noticing. It is hard to keep track of everything and at the same time manage secret rotation, onboard new services, and onboard new people with correct access permissions.</span></p>",
      "timestamp": 1761396309.5296414,
      "translated": false
    },
    {
      "feed_name": "Container Solutions - Kubernetes",
      "source_language": "en",
      "title": "We Built a .NET Operator SDK (So You Don’t Have To)",
      "link": "https://blog.container-solutions.com/we-built-a-.net-operator-sdk",
      "published": "Tue, 16 Mar 2021 15:16:12 GMT",
      "summary": "<div class=\"hs-featured-image-wrapper\"> \n <a class=\"hs-featured-image-link\" href=\"https://blog.container-solutions.com/we-built-a-.net-operator-sdk\" title=\"\"> <img alt=\"Net_operator.jpeg\" class=\"hs-featured-image\" src=\"https://blog.container-solutions.com/hubfs/Net_operator.jpg\" style=\"width: auto !important; float: left; margin: 0 15px 15px 0;\" /> </a> \n</div> \n<p>We built a <a href=\"https://github.com/containersolutions/dotnet-operator-sdk\"><span>.NET Operator SDK</span></a>, in C#, so you can build your own Kubernetes Operators in C# or any .NET language. There's of course the <a href=\"https://sdk.operatorframework.io/\">Go Operator SDK</a>, and there's our <a href=\"https://javaoperatorsdk.io/\">Java Operator SDK</a>, so why not having something for the .NET community?</p>",
      "timestamp": 1761396309.5296447,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "7 Common Kubernetes Pitfalls (and How I Learned to Avoid Them)",
      "link": "https://kubernetes.io/blog/2025/10/20/seven-kubernetes-pitfalls-and-how-to-avoid/",
      "published": "Mon, 20 Oct 2025 08:30:00 -0700",
      "summary": "<p>It’s no secret that Kubernetes can be both powerful and frustrating at times. When I first started dabbling with container orchestration, I made more than my fair share of mistakes enough to compile a whole list of pitfalls. In this post, I want to walk through seven big gotchas I’ve encountered (or seen others run into) and share some tips on how to avoid them. Whether you’re just kicking the tires on Kubernetes or already managing production clusters, I hope these insights help you steer clear of a little extra stress.</p>\n<h2 id=\"1-skipping-resource-requests-and-limits\">1. Skipping resource requests and limits</h2>\n<p><strong>The pitfall</strong>: Not specifying CPU and memory requirements in Pod specifications. This typically happens because Kubernetes does not require these fields, and workloads can often start and run without them—making the omission easy to overlook in early configurations or during rapid deployment cycles.</p>\n<p><strong>Context</strong>:\nIn Kubernetes, resource requests and limits are critical for efficient cluster management. Resource requests ensure that the scheduler reserves the appropriate amount of CPU and memory for each pod, guaranteeing that it has the necessary resources to operate. Resource limits cap the amount of CPU and memory a pod can use, preventing any single pod from consuming excessive resources and potentially starving other pods.\nWhen resource requests and limits are not set:</p>\n<ol>\n<li>Resource Starvation: Pods may get insufficient resources, leading to degraded performance or failures. This is because Kubernetes schedules pods based on these requests. Without them, the scheduler might place too many pods on a single node, leading to resource contention and performance bottlenecks.</li>\n<li>Resource Hoarding: Conversely, without limits, a pod might consume more than its fair share of resources, impacting the performance and stability of other pods on the same node. This can lead to issues such as other pods getting evicted or killed by the Out-Of-Memory (OOM) killer due to lack of available memory.</li>\n</ol>\n<h3 id=\"how-to-avoid-it\">How to avoid it:</h3>\n<ul>\n<li>Start with modest <code>requests</code> (for example <code>100m</code> CPU, <code>128Mi</code> memory) and see how your app behaves.</li>\n<li>Monitor real-world usage and refine your values; the <a href=\"https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/\">HorizontalPodAutoscaler</a> can help automate scaling based on metrics.</li>\n<li>Keep an eye on <code>kubectl top pods</code> or your logging/monitoring tool to confirm you’re not over- or under-provisioning.</li>\n</ul>\n<p><strong>My reality check</strong>: Early on, I never thought about memory limits. Things seemed fine on my local cluster. Then, on a larger environment, Pods got <em>OOMKilled</em> left and right. Lesson learned.\nFor detailed instructions on configuring resource requests and limits for your containers, please refer to <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/\">Assign Memory Resources to Containers and Pods</a>\n(part of the official Kubernetes documentation).</p>\n<h2 id=\"2-underestimating-liveness-and-readiness-probes\">2. Underestimating liveness and readiness probes</h2>\n<p><strong>The pitfall</strong>: Deploying containers without explicitly defining how Kubernetes should check their health or readiness. This tends to happen because Kubernetes will consider a container “running” as long as the process inside hasn’t exited. Without additional signals, Kubernetes assumes the workload is functioning—even if the application inside is unresponsive, initializing, or stuck.</p>\n<p><strong>Context</strong>:<br />\nLiveness, readiness, and startup probes are mechanisms Kubernetes uses to monitor container health and availability.</p>\n<ul>\n<li><strong>Liveness probes</strong> determine if the application is still alive. If a liveness check fails, the container is restarted.</li>\n<li><strong>Readiness probes</strong> control whether a container is ready to serve traffic. Until the readiness probe passes, the container is removed from Service endpoints.</li>\n<li><strong>Startup probes</strong> help distinguish between long startup times and actual failures.</li>\n</ul>\n<h3 id=\"how-to-avoid-it-1\">How to avoid it:</h3>\n<ul>\n<li>Add a simple HTTP <code>livenessProbe</code> to check a health endpoint (for example <code>/healthz</code>) so Kubernetes can restart a hung container.</li>\n<li>Use a <code>readinessProbe</code> to ensure traffic doesn’t reach your app until it’s warmed up.</li>\n<li>Keep probes simple. Overly complex checks can create false alarms and unnecessary restarts.</li>\n</ul>\n<p><strong>My reality check</strong>: I once forgot a readiness probe for a web service that took a while to load. Users hit it prematurely, got weird timeouts, and I spent hours scratching my head. A 3-line readiness probe would have saved the day.</p>\n<p>For comprehensive instructions on configuring liveness, readiness, and startup probes for containers, please refer to <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\">Configure Liveness, Readiness and Startup Probes</a>\nin the official Kubernetes documentation.</p>\n<h2 id=\"3-we-ll-just-look-at-container-logs-famous-last-words\">3. “We’ll just look at container logs” (famous last words)</h2>\n<p><strong>The pitfall</strong>: Relying solely on container logs retrieved via <code>kubectl logs</code>. This often happens because the command is quick and convenient, and in many setups, logs appear accessible during development or early troubleshooting. However, <code>kubectl logs</code> only retrieves logs from currently running or recently terminated containers, and those logs are stored on the node’s local disk. As soon as the container is deleted, evicted, or the node is restarted, the log files may be rotated out or permanently lost.</p>\n<h3 id=\"how-to-avoid-it-2\">How to avoid it:</h3>\n<ul>\n<li><strong>Centralize logs</strong> using CNCF tools like <a href=\"https://kubernetes.io/docs/concepts/cluster-administration/logging/#sidecar-container-with-a-logging-agent\">Fluentd</a> or <a href=\"https://fluentbit.io/\">Fluent Bit</a> to aggregate output from all Pods.</li>\n<li><strong>Adopt OpenTelemetry</strong> for a unified view of logs, metrics, and (if needed) traces. This lets you spot correlations between infrastructure events and app-level behavior.</li>\n<li><strong>Pair logs with Prometheus metrics</strong> to track cluster-level data alongside application logs. If you need distributed tracing, consider CNCF projects like <a href=\"https://www.jaegertracing.io/\">Jaeger</a>.</li>\n</ul>\n<p><strong>My reality check</strong>: The first time I lost Pod logs to a quick restart, I realized how flimsy “kubectl logs” can be on its own. Since then, I’ve set up a proper pipeline for every cluster to avoid missing vital clues.</p>\n<h2 id=\"4-treating-dev-and-prod-exactly-the-same\">4. Treating dev and prod exactly the same</h2>\n<p><strong>The pitfall</strong>: Deploying the same Kubernetes manifests with identical settings across development, staging, and production environments. This often occurs when teams aim for consistency and reuse, but overlook that environment-specific factors—such as traffic patterns, resource availability, scaling needs, or access control—can differ significantly. Without customization, configurations optimized for one environment may cause instability, poor performance, or security gaps in another.</p>\n<h3 id=\"how-to-avoid-it-3\">How to avoid it:</h3>\n<ul>\n<li>Use environment overlays or <a href=\"https://kustomize.io/\">kustomize</a> to maintain a shared base while customizing resource requests, replicas, or config for each environment.</li>\n<li>Extract environment-specific configuration into ConfigMaps and / or Secrets. You can use a specialized tool such as <a href=\"https://github.com/bitnami-labs/sealed-secrets\">Sealed Secrets</a> to manage confidential data.</li>\n<li>Plan for scale in production. Your dev cluster can probably get away with minimal CPU/memory, but prod might need significantly more.</li>\n</ul>\n<p><strong>My reality check</strong>: One time, I scaled up <code>replicaCount</code> from 2 to 10 in a tiny dev environment just to “test.” I promptly ran out of resources and spent half a day cleaning up the aftermath. Oops.</p>\n<h2 id=\"5-leaving-old-stuff-floating-around\">5. Leaving old stuff floating around</h2>\n<p><strong>The pitfall</strong>: Leaving unused or outdated resources—such as Deployments, Services, ConfigMaps, or PersistentVolumeClaims—running in the cluster. This often happens because Kubernetes does not automatically remove resources unless explicitly instructed, and there is no built-in mechanism to track ownership or expiration. Over time, these forgotten objects can accumulate, consuming cluster resources, increasing cloud costs, and creating operational confusion, especially when stale Services or LoadBalancers continue to route traffic.</p>\n<h3 id=\"how-to-avoid-it-4\">How to avoid it:</h3>\n<ul>\n<li><strong>Label everything</strong> with a purpose or owner label. That way, you can easily query resources you no longer need.</li>\n<li><strong>Regularly audit</strong> your cluster: run <code>kubectl get all -n &lt;namespace&gt;</code> to see what’s actually running, and confirm it’s all legit.</li>\n<li><strong>Adopt Kubernetes’ Garbage Collection</strong>: <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/\">K8s docs</a> show how to remove dependent objects automatically.</li>\n<li><strong>Leverage policy automation</strong>: Tools like <a href=\"https://kyverno.io/\">Kyverno</a> can automatically delete or block stale resources after a certain period, or enforce lifecycle policies so you don’t have to remember every single cleanup step.</li>\n</ul>\n<p><strong>My reality check</strong>: After a hackathon, I forgot to tear down a “test-svc” pinned to an external load balancer. Three weeks later, I realized I’d been paying for that load balancer the entire time. Facepalm.</p>\n<h2 id=\"6-diving-too-deep-into-networking-too-soon\">6. Diving too deep into networking too soon</h2>\n<p><strong>The pitfall</strong>: Introducing advanced networking solutions—such as service meshes, custom CNI plugins, or multi-cluster communication—before fully understanding Kubernetes' native networking primitives. This commonly occurs when teams implement features like traffic routing, observability, or mTLS using external tools without first mastering how core Kubernetes networking works: including Pod-to-Pod communication, ClusterIP Services, DNS resolution, and basic ingress traffic handling. As a result, network-related issues become harder to troubleshoot, especially when overlays introduce additional abstractions and failure points.</p>\n<h3 id=\"how-to-avoid-it-5\">How to avoid it:</h3>\n<ul>\n<li>Start small: a Deployment, a Service, and a basic ingress controller such as one based on NGINX (e.g., Ingress-NGINX).</li>\n<li>Make sure you understand how traffic flows within the cluster, how service discovery works, and how DNS is configured.</li>\n<li>Only move to a full-blown mesh or advanced CNI features when you actually need them, complex networking adds overhead.</li>\n</ul>\n<p><strong>My reality check</strong>: I tried Istio on a small internal app once, then spent more time debugging Istio itself than the actual app. Eventually, I stepped back, removed Istio, and everything worked fine.</p>\n<h2 id=\"7-going-too-light-on-security-and-rbac\">7. Going too light on security and RBAC</h2>\n<p><strong>The pitfall</strong>: Deploying workloads with insecure configurations, such as running containers as the root user, using the <code>latest</code> image tag, disabling security contexts, or assigning overly broad RBAC roles like <code>cluster-admin</code>. These practices persist because Kubernetes does not enforce strict security defaults out of the box, and the platform is designed to be flexible rather than opinionated. Without explicit security policies in place, clusters can remain exposed to risks like container escape, unauthorized privilege escalation, or accidental production changes due to unpinned images.</p>\n<h3 id=\"how-to-avoid-it-6\">How to avoid it:</h3>\n<ul>\n<li>Use <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\">RBAC</a> to define roles and permissions within Kubernetes. While RBAC is the default and most widely supported authorization mechanism, Kubernetes also allows the use of alternative authorizers. For more advanced or external policy needs, consider solutions like <a href=\"https://open-policy-agent.github.io/gatekeeper/\">OPA Gatekeeper</a> (based on Rego), <a href=\"https://kyverno.io/\">Kyverno</a>, or custom webhooks using policy languages such as CEL or <a href=\"https://cedarpolicy.com/\">Cedar</a>.</li>\n<li>Pin images to specific versions (no more <code>:latest</code>!). This helps you know what’s actually deployed.</li>\n<li>Look into <a href=\"https://kubernetes.io/docs/concepts/security/pod-security-admission/\">Pod Security Admission</a> (or other solutions like Kyverno) to enforce non-root containers, read-only filesystems, etc.</li>\n</ul>\n<p><strong>My reality check</strong>: I never had a huge security breach, but I’ve heard plenty of cautionary tales. If you don’t tighten things up, it’s only a matter of time before something goes wrong.</p>\n<h2 id=\"final-thoughts\">Final thoughts</h2>\n<p>Kubernetes is amazing, but it’s not psychic, it won’t magically do the right thing if you don’t tell it what you need. By keeping these pitfalls in mind, you’ll avoid a lot of headaches and wasted time. Mistakes happen (trust me, I’ve made my share), but each one is a chance to learn more about how Kubernetes truly works under the hood.\nIf you’re curious to dive deeper, the <a href=\"https://kubernetes.io/docs/home/\">official docs</a> and the <a href=\"http://slack.kubernetes.io/\">community Slack</a> are excellent next steps. And of course, feel free to share your own horror stories or success tips, because at the end of the day, we’re all in this cloud native adventure together.</p>\n<p><strong>Happy Shipping!</strong></p>",
      "timestamp": 1761396310.1126537,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Spotlight on Policy Working Group",
      "link": "https://kubernetes.io/blog/2025/10/18/wg-policy-spotlight-2025/",
      "published": "Sat, 18 Oct 2025 00:00:00 +0000",
      "summary": "<p><em>(Note: The Policy Working Group has completed its mission and is no longer active. This article reflects its work, accomplishments, and insights into how a working group operates.)</em></p>\n<p>In the complex world of Kubernetes, policies play a crucial role in managing and securing clusters. But have you ever wondered how these policies are developed, implemented, and standardized across the Kubernetes ecosystem? To answer that, let's take a look back at the work of the Policy Working Group.</p>\n<p>The Policy Working Group was dedicated to a critical mission: providing an overall architecture that encompasses both current policy-related implementations and future policy proposals in Kubernetes. Their goal was both ambitious and essential: to develop a universal policy architecture that benefits developers and end-users alike.</p>\n<p>Through collaborative methods, this working group strove to bring clarity and consistency to the often complex world of Kubernetes policies. By focusing on both existing implementations and future proposals, they ensured that the policy landscape in Kubernetes remains coherent and accessible as the technology evolves.</p>\n<p>This blog post dives deeper into the work of the Policy Working Group, guided by insights from its former co-chairs:</p>\n<ul>\n<li><a href=\"https://twitter.com/JimBugwadia\">Jim Bugwadia</a></li>\n<li><a href=\"https://twitter.com/poonam_lamba\">Poonam Lamba</a></li>\n<li><a href=\"https://twitter.com/sudermanjr\">Andy Suderman</a></li>\n</ul>\n<p><em>Interviewed by <a href=\"https://twitter.com/arujjval\">Arujjwal Negi</a>.</em></p>\n<p>These co-chairs explained what the Policy Working Group was all about.</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p><strong>Hello, thank you for the time! Let’s start with some introductions, could you tell us a bit about yourself, your role, and how you got involved in Kubernetes?</strong></p>\n<p><strong>Jim Bugwadia</strong>: My name is Jim Bugwadia, and I am a co-founder and the CEO at Nirmata which provides solutions that automate security and compliance for cloud-native workloads. At Nirmata, we have been working with Kubernetes since it started in 2014. We initially built a Kubernetes policy engine in our commercial platform and later donated it to CNCF as the Kyverno project. I joined the CNCF Kubernetes Policy Working Group to help build and standardize various aspects of policy management for Kubernetes and later became a co-chair.</p>\n<p><strong>Andy Suderman</strong>: My name is Andy Suderman and I am the CTO of Fairwinds, a managed Kubernetes-as-a-Service provider. I began working with Kubernetes in 2016 building a web conferencing platform. I am an author and/or maintainer of several Kubernetes-related open-source projects such as Goldilocks, Pluto, and Polaris. Polaris is a JSON-schema-based policy engine, which started Fairwinds' journey into the policy space and my involvement in the Policy Working Group.</p>\n<p><strong>Poonam Lamba</strong>: My name is Poonam Lamba, and I currently work as a Product Manager for Google Kubernetes Engine (GKE) at Google. My journey with Kubernetes began back in 2017 when I was building an SRE platform for a large enterprise, using a private cloud built on Kubernetes. Intrigued by its potential to revolutionize the way we deployed and managed applications at the time, I dove headfirst into learning everything I could about it. Since then, I've had the opportunity to build the policy and compliance products for GKE. I lead and contribute to GKE CIS benchmarks. I am involved with the Gatekeeper project as well as I have contributed to Policy-WG for over 2 years and served as a co-chair for the group.</p>\n<p><em>Responses to the following questions represent an amalgamation of insights from the former co-chairs.</em></p>\n<h2 id=\"about-working-groups\">About Working Groups</h2>\n<p><strong>One thing even I am not aware of is the difference between a working group and a SIG. Can you help us understand what a working group is and how it is different from a SIG?</strong></p>\n<p>Unlike SIGs, working groups are temporary and focused on tackling specific, cross-cutting issues or projects that may involve multiple SIGs. Their lifespan is defined, and they disband once they've achieved their objective. Generally, working groups don't own code or have long-term responsibility for managing a particular area of the Kubernetes project.</p>\n<p>(To know more about SIGs, visit the <a href=\"https://github.com/kubernetes/community/blob/master/sig-list.md\">list of Special Interest Groups</a>)</p>\n<p><strong>You mentioned that Working Groups involve multiple SIGS. What SIGS was the Policy WG closely involved with, and how did you coordinate with them?</strong></p>\n<p>The group collaborated closely with Kubernetes SIG Auth throughout our existence, and more recently, the group also worked with SIG Security since its formation. Our collaboration occurred in a few ways. We provided periodic updates during the SIG meetings to keep them informed of our progress and activities. Additionally, we utilize other community forums to maintain open lines of communication and ensured our work aligned with the broader Kubernetes ecosystem. This collaborative approach helped the group stay coordinated with related efforts across the Kubernetes community.</p>\n<h2 id=\"policy-wg\">Policy WG</h2>\n<p><strong>Why was the Policy Working Group created?</strong></p>\n<p>To enable a broad set of use cases, we recognize that Kubernetes is powered by a highly declarative, fine-grained, and extensible configuration management system. We've observed that a Kubernetes configuration manifest may have different portions that are important to various stakeholders. For example, some parts may be crucial for developers, while others might be of particular interest to security teams or address operational concerns. Given this complexity, we believe that policies governing the usage of these intricate configurations are essential for success with Kubernetes.</p>\n<p>Our Policy Working Group was created specifically to research the standardization of policy definitions and related artifacts. We saw a need to bring consistency and clarity to how policies are defined and implemented across the Kubernetes ecosystem, given the diverse requirements and stakeholders involved in Kubernetes deployments.</p>\n<p><strong>Can you give me an idea of the work you did in the group?</strong></p>\n<p>We worked on several Kubernetes policy-related projects. Our initiatives included:</p>\n<ul>\n<li>We worked on a Kubernetes Enhancement Proposal (KEP) for the Kubernetes Policy Reports API. This aims to standardize how policy reports are generated and consumed within the Kubernetes ecosystem.</li>\n<li>We conducted a CNCF survey to better understand policy usage in the Kubernetes space. This helped gauge the practices and needs across the community at the time.</li>\n<li>We wrote a paper that will guide users in achieving PCI-DSS compliance for containers. This is intended to help organizations meet important security standards in their Kubernetes environments.</li>\n<li>We also worked on a paper highlighting how shifting security down can benefit organizations. This focuses on the advantages of implementing security measures earlier in the development and deployment process.</li>\n</ul>\n<p><strong>Can you tell us what were the main objectives of the Policy Working Group and some of your key accomplishments?</strong></p>\n<p>The charter of the Policy WG was to help standardize policy management for Kubernetes and educate the community on best practices.</p>\n<p>To accomplish this we updated the Kubernetes documentation (<a href=\"https://kubernetes.io/docs/concepts/policy\">Policies | Kubernetes</a>), produced several whitepapers (<a href=\"https://github.com/kubernetes/sig-security/blob/main/sig-security-docs/papers/policy/CNCF_Kubernetes_Policy_Management_WhitePaper_v1.pdf\">Kubernetes Policy Management</a>, <a href=\"https://github.com/kubernetes/sig-security/blob/main/sig-security-docs/papers/policy_grc/Kubernetes_Policy_WG_Paper_v1_101123.pdf\">Kubernetes GRC</a>), and created the Policy Reports API (<a href=\"https://github.com/kubernetes-retired/wg-policy-prototypes/blob/master/policy-report/docs/api-docs.md\">API reference</a>) which standardizes reporting across various tools. Several popular tools such as Falco, Trivy, Kyverno, kube-bench, and others support the Policy Report API. A major milestone for the Policy WG was promoting the Policy Reports API to a SIG-level API or finding it a stable home.</p>\n<p>Beyond that, as <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/\">ValidatingAdmissionPolicy</a> and <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/mutating-admission-policy/\">MutatingAdmissionPolicy</a> approached GA in Kubernetes, a key goal of the WG was to guide and educate the community on the tradeoffs and appropriate usage patterns for these built-in API objects and other CNCF policy management solutions like OPA/Gatekeeper and Kyverno.</p>\n<h2 id=\"challenges\">Challenges</h2>\n<p><strong>What were some of the major challenges that the Policy Working Group worked on?</strong></p>\n<p>During our work in the Policy Working Group, we encountered several challenges:</p>\n<ul>\n<li>\n<p>One of the main issues we faced was finding time to consistently contribute. Given that many of us have other professional commitments, it can be difficult to dedicate regular time to the working group's initiatives.</p>\n</li>\n<li>\n<p>Another challenge we experienced was related to our consensus-driven model. While this approach ensures that all voices are heard, it can sometimes lead to slower decision-making processes. We valued thorough discussion and agreement, but this can occasionally delay progress on our projects.</p>\n</li>\n<li>\n<p>We've also encountered occasional differences of opinion among group members. These situations require careful navigation to ensure that we maintain a collaborative and productive environment while addressing diverse viewpoints.</p>\n</li>\n<li>\n<p>Lastly, we've noticed that newcomers to the group may find it difficult to contribute effectively without consistent attendance at our meetings. The complex nature of our work often requires ongoing context, which can be challenging for those who aren't able to participate regularly.</p>\n</li>\n</ul>\n<p><strong>Can you tell me more about those challenges? How did you discover each one? What has the impact been? What were some strategies you used to address them?</strong></p>\n<p>There are no easy answers, but having more contributors and maintainers greatly helps! Overall the CNCF community is great to work with and is very welcoming to beginners. So, if folks out there are hesitating to get involved, I highly encourage them to attend a WG or SIG meeting and just listen in.</p>\n<p>It often takes a few meetings to fully understand the discussions, so don't feel discouraged if you don't grasp everything right away. We made a point to emphasize this and encouraged new members to review documentation as a starting point for getting involved.</p>\n<p>Additionally, differences of opinion were valued and encouraged within the Policy-WG. We adhered to the CNCF core values and resolve disagreements by maintaining respect for one another. We also strove to timebox our decisions and assign clear responsibilities to keep things moving forward.</p>\n<hr />\n<p>This is where our discussion about the Policy Working Group ends. The working group, and especially the people who took part in this article, hope this gave you some insights into the group's aims and workings. You can get more info about Working Groups <a href=\"https://github.com/kubernetes/community/blob/master/committee-steering/governance/wg-governance.md\">here</a>.</p>",
      "timestamp": 1761396310.1126585,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Introducing Headlamp Plugin for Karpenter - Scaling and Visibility",
      "link": "https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/",
      "published": "Mon, 06 Oct 2025 00:00:00 +0000",
      "summary": "<p>Headlamp is an open‑source, extensible Kubernetes SIG UI project designed to let you explore, manage, and debug cluster resources.</p>\n<p>Karpenter is a Kubernetes Autoscaling SIG node provisioning project that helps clusters scale quickly and efficiently. It launches new nodes in seconds, selects appropriate instance types for workloads, and manages the full node lifecycle, including scale-down.</p>\n<p>The new Headlamp Karpenter Plugin adds real-time visibility into Karpenter’s activity directly from the Headlamp UI. It shows how Karpenter resources relate to Kubernetes objects, displays live metrics, and surfaces scaling events as they happen. You can inspect pending pods during provisioning, review scaling decisions, and edit Karpenter-managed resources with built-in validation. The Karpenter plugin was made as part of a LFX mentor project.</p>\n<p>The Karpenter plugin for Headlamp aims to make it easier for Kubernetes users and operators to understand, debug, and fine-tune autoscaling behavior in their clusters. Now we will give a brief tour of the Headlamp plugin.</p>\n<h2 id=\"map-view-of-karpenter-resources-and-how-they-relate-to-kubernetes-resources\">Map view of Karpenter Resources and how they relate to Kubernetes resources</h2>\n<p>Easily see how Karpenter Resources like NodeClasses, NodePool and NodeClaims connect with core Kubernetes resources like Pods, Nodes etc.</p>\n<p><img alt=\"Map view showing relationships between resources\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/mini-map-view.png\" /></p>\n<h2 id=\"visualization-of-karpenter-metrics\">Visualization of Karpenter Metrics</h2>\n<p>Get instant insights of Resource Usage v/s Limits, Allowed disruptions, Pending Pods, Provisioning Latency and many more .</p>\n<p><img alt=\"NodePool default metrics shown with controls to see different frequencies\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/chart-1.png\" /></p>\n<p><img alt=\"NodeClaim default metrics shown with controls to see different frequencies\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/chart-2.png\" /></p>\n<h2 id=\"scaling-decisions\">Scaling decisions</h2>\n<p>Shows which instances are being provisioned for your workloads and understand the reason behind why Karpenter made those choices. Helpful while debugging.</p>\n<p><img alt=\"Pod Placement Decisions data including reason, from, pod, message, and age\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/pod-decisions.png\" /></p>\n<p><img alt=\"Node decision data including Type, Reason, Node, From, Message\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/node-decisions.png\" /></p>\n<h2 id=\"config-editor-with-validation-support\">Config editor with validation support</h2>\n<p>Make live edits to Karpenter configurations. The editor includes diff previews and resource validation for safer adjustments.<br />\n<img alt=\"Config editor with validation support\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/config-editor.png\" /></p>\n<h2 id=\"real-time-view-of-karpenter-resources\">Real time view of Karpenter resources</h2>\n<p>View and track Karpenter specific resources in real time such as “NodeClaims” as your cluster scales up and down.</p>\n<p><img alt=\"Node claims data including Name, Status, Instance Type, CPU, Zone, Age, and Actions\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/node-claims.png\" /></p>\n<p><img alt=\"Node Pools data including Name, NodeClass, CPU, Memory, Nodes, Status, Age, Actions\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/nodepools.png\" /></p>\n<p><img alt=\"EC2 Node Classes data including Name, Cluster, Instance Profile, Status, IAM Role, Age, and Actions\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/nodeclass.png\" /></p>\n<h2 id=\"dashboard-for-pending-pods\">Dashboard for Pending Pods</h2>\n<p>View all pending pods with unmet scheduling requirements/Failed Scheduling highlighting why they couldn't be scheduled.</p>\n<p><img alt=\"Pending Pods data including Name, Namespace, Type, Reason, From, and Message\" src=\"https://kubernetes.io/blog/2025/10/06/introducing-headlamp-plugin-for-karpenter/pending-pods.png\" /></p>\n<h3 id=\"karpenter-providers\"><strong>Karpenter Providers</strong></h3>\n<p>This plugin should work with most Karpenter providers, but has only so far been tested on the ones listed in the table. Additionally, each provider gives some extra information, and the ones in the table below are displayed by the plugin.</p>\n<table>\n<thead>\n<tr>\n<th>Provider Name</th>\n<th>Tested</th>\n<th>Extra provider specific info supported</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/aws/karpenter-provider-aws\">AWS</a></td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/Azure/karpenter-provider-azure\">Azure</a></td>\n<td>✅</td>\n<td>✅</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/cloudpilot-ai/karpenter-provider-alibabacloud\">AlibabaCloud</a></td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/bizflycloud/karpenter-provider-bizflycloud\">Bizfly Cloud</a></td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/kubernetes-sigs/karpenter-provider-cluster-api\">Cluster API</a></td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/cloudpilot-ai/karpenter-provider-gcp\">GCP</a></td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/sergelogvinov/karpenter-provider-proxmox\">Proxmox</a></td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/zoom/karpenter-oci\">Oracle Cloud Infrastructure (OCI)</a></td>\n<td>❌</td>\n<td>❌</td>\n</tr>\n</tbody>\n</table>\n<p>Please <a href=\"https://github.com/headlamp-k8s/plugins/issues\">submit an issue</a> if you test one of the untested providers or if you want support for this provider (PRs also gladly accepted).</p>\n<h2 id=\"how-to-use\">How to use</h2>\n<p>Please see the <a href=\"https://github.com/headlamp-k8s/plugins/tree/main/karpenter\">plugins/karpenter/README.md</a> for instructions on how to use.</p>\n<h2 id=\"feedback-and-questions\">Feedback and Questions</h2>\n<p>Please <a href=\"https://github.com/headlamp-k8s/plugins/issues\">submit an issue</a> if you use Karpenter and have any other ideas or feedback. Or come to the <a href=\"https://kubernetes.slack.com/?redir=%2Fmessages%2Fheadlamp\">Kubernetes slack headlamp channel</a> for a chat.</p>",
      "timestamp": 1761396310.112662,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Announcing Changed Block Tracking API support (alpha)",
      "link": "https://kubernetes.io/blog/2025/09/25/csi-changed-block-tracking/",
      "published": "Thu, 25 Sep 2025 05:00:00 -0800",
      "summary": "<p>We're excited to announce the alpha support for a <em>changed block tracking</em> mechanism. This enhances\nthe Kubernetes storage ecosystem by providing an efficient way for\n<a href=\"https://kubernetes.io/docs/concepts/storage/volumes/#csi\">CSI</a> storage drivers to identify changed\nblocks in PersistentVolume snapshots. With a driver that can use the feature, you could benefit\nfrom faster and more resource-efficient backup operations.</p>\n<p>If you're eager to try this feature, you can <a href=\"https://kubernetes.io/feed.xml#getting-started\">skip to the Getting Started section</a>.</p>\n<h2 id=\"what-is-changed-block-tracking\">What is changed block tracking?</h2>\n<p>Changed block tracking enables storage systems to identify and track modifications at the block level\nbetween snapshots, eliminating the need to scan entire volumes during backup operations. The\nimprovement is a change to the Container Storage Interface (CSI), and also to the storage support\nin Kubernetes itself.\nWith the alpha feature enabled, your cluster can:</p>\n<ul>\n<li>Identify allocated blocks within a CSI volume snapshot</li>\n<li>Determine changed blocks between two snapshots of the same volume</li>\n<li>Streamline backup operations by focusing only on changed data blocks</li>\n</ul>\n<p>For Kubernetes users managing large datasets, this API enables significantly more efficient\nbackup processes. Backup applications can now focus only on the blocks that have changed,\nrather than processing entire volumes.</p>\n<div class=\"alert alert-info\"><h4 class=\"alert-heading\">Note:</h4>As of now, the Changed Block Tracking API is supported only for block volumes and not for\nfile volumes. CSI drivers that manage file-based storage systems will not be able to\nimplement this capability.</div>\n<h2 id=\"benefits-of-changed-block-tracking-support-in-kubernetes\">Benefits of changed block tracking support in Kubernetes</h2>\n<p>As Kubernetes adoption grows for stateful workloads managing critical data, the need for efficient\nbackup solutions becomes increasingly important. Traditional full backup approaches face challenges with:</p>\n<ul>\n<li><em>Long backup windows</em>: Full volume backups can take hours for large datasets, making it difficult\nto complete within maintenance windows.</li>\n<li><em>High resource utilization</em>: Backup operations consume substantial network bandwidth and I/O\nresources, especially for large data volumes and data-intensive applications.</li>\n<li><em>Increased storage costs</em>: Repetitive full backups store redundant data, causing storage\nrequirements to grow linearly even when only a small percentage of data actually changes between\nbackups.</li>\n</ul>\n<p>The Changed Block Tracking API addresses these challenges by providing native Kubernetes support for\nincremental backup capabilities through the CSI interface.</p>\n<h2 id=\"key-components\">Key components</h2>\n<p>The implementation consists of three primary components:</p>\n<ol>\n<li><em>CSI SnapshotMetadata Service API</em>: An API, offered by gRPC, that provides volume\nsnapshot and changed block data.</li>\n<li><em>SnapshotMetadataService API</em>: A Kubernetes CustomResourceDefinition (CRD) that\nadvertises CSI driver metadata service availability and connection details to\ncluster clients.</li>\n<li><em>External Snapshot Metadata Sidecar</em>: An intermediary component that connects CSI\ndrivers to backup applications via a standardized gRPC interface.</li>\n</ol>\n<h2 id=\"implementation-requirements\">Implementation requirements</h2>\n<h3 id=\"storage-provider-responsibilities\">Storage provider responsibilities</h3>\n<p>If you're an author of a storage integration with Kubernetes and want to support the changed block tracking feature, you must implement specific requirements:</p>\n<ol>\n<li>\n<p><em>Implement CSI RPCs</em>: Storage providers need to implement the <code>SnapshotMetadata</code> service as defined in the <a href=\"https://github.com/container-storage-interface/spec/blob/master/csi.proto\">CSI specifications protobuf</a>. This service requires server-side streaming implementations for the following RPCs:</p>\n<ul>\n<li><code>GetMetadataAllocated</code>: For identifying allocated blocks in a snapshot</li>\n<li><code>GetMetadataDelta</code>: For determining changed blocks between two snapshots</li>\n</ul>\n</li>\n<li>\n<p><em>Storage backend capabilities</em>: Ensure the storage backend has the capability to track and report block-level changes.</p>\n</li>\n<li>\n<p><em>Deploy external components</em>: Integrate with the <code>external-snapshot-metadata</code> sidecar to expose the snapshot metadata service.</p>\n</li>\n<li>\n<p><em>Register custom resource</em>: Register the <code>SnapshotMetadataService</code> resource using a CustomResourceDefinition and create a <code>SnapshotMetadataService</code> custom resource that advertises the availability of the metadata service and provides connection details.</p>\n</li>\n<li>\n<p><em>Support error handling</em>: Implement proper error handling for these RPCs according to the CSI specification requirements.</p>\n</li>\n</ol>\n<h3 id=\"backup-solution-responsibilities\">Backup solution responsibilities</h3>\n<p>A backup solution looking to leverage this feature must:</p>\n<ol>\n<li>\n<p><em>Set up authentication</em>: The backup application must provide a Kubernetes ServiceAccount token when using the\n<a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/3314-csi-changed-block-tracking#the-kubernetes-snapshotmetadata-service-api\">Kubernetes SnapshotMetadataService API</a>.\nAppropriate access grants, such as RBAC RoleBindings, must be established to authorize the backup application\nServiceAccount to obtain such tokens.</p>\n</li>\n<li>\n<p><em>Implement streaming client-side code</em>: Develop clients that implement the streaming gRPC APIs defined in the\n<a href=\"https://github.com/kubernetes-csi/external-snapshot-metadata/blob/main/proto/schema.proto\">schema.proto</a> file.\nSpecifically:</p>\n<ul>\n<li>Implement streaming client code for <code>GetMetadataAllocated</code> and <code>GetMetadataDelta</code> methods</li>\n<li>Handle server-side streaming responses efficiently as the metadata comes in chunks</li>\n<li>Process the <code>SnapshotMetadataResponse</code> message format with proper error handling</li>\n</ul>\n<p>The <code>external-snapshot-metadata</code> GitHub repository provides a convenient\n<a href=\"https://github.com/kubernetes-csi/external-snapshot-metadata/tree/master/pkg/iterator\">iterator</a>\nsupport package to simplify client implementation.</p>\n</li>\n<li>\n<p><em>Handle large dataset streaming</em>: Design clients to efficiently handle large streams of block metadata that\ncould be returned for volumes with significant changes.</p>\n</li>\n<li>\n<p><em>Optimize backup processes</em>: Modify backup workflows to use the changed block metadata to identify and only\ntransfer changed blocks to make backups more efficient, reducing both backup duration and resource consumption.</p>\n</li>\n</ol>\n<h2 id=\"getting-started\">Getting started</h2>\n<p>To use changed block tracking in your cluster:</p>\n<ol>\n<li>Ensure your CSI driver supports volume snapshots and implements the snapshot metadata capabilities with the required <code>external-snapshot-metadata</code> sidecar</li>\n<li>Make sure the SnapshotMetadataService custom resource is registered using CRD</li>\n<li>Verify the presence of a SnapshotMetadataService custom resource for your CSI driver</li>\n<li>Create clients that can access the API using appropriate authentication (via Kubernetes ServiceAccount tokens)</li>\n</ol>\n<p>The API provides two main functions:</p>\n<ul>\n<li><code>GetMetadataAllocated</code>: Lists blocks allocated in a single snapshot</li>\n<li><code>GetMetadataDelta</code>: Lists blocks changed between two snapshots</li>\n</ul>\n<h2 id=\"what-s-next\">What’s next?</h2>\n<p>Depending on feedback and adoption, the Kubernetes developers hope to push the CSI Snapshot Metadata implementation to Beta in the future releases.</p>\n<h2 id=\"where-can-i-learn-more\">Where can I learn more?</h2>\n<p>For those interested in trying out this new feature:</p>\n<ul>\n<li>Official Kubernetes CSI Developer <a href=\"https://kubernetes-csi.github.io/docs/external-snapshot-metadata.html\">Documentation</a></li>\n<li>The <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/3314-csi-changed-block-tracking\">enhancement proposal</a> for the snapshot metadata feature.</li>\n<li><a href=\"https://github.com/kubernetes-csi/external-snapshot-metadata\">GitHub repository</a> for implementation and release status of <code>external-snapshot-metadata</code></li>\n<li>Complete gRPC protocol definitions for snapshot metadata API: <a href=\"https://github.com/kubernetes-csi/external-snapshot-metadata/blob/main/proto/schema.proto\">schema.proto</a></li>\n<li>Example snapshot metadata client implementation: <a href=\"https://github.com/kubernetes-csi/external-snapshot-metadata/tree/main/examples/snapshot-metadata-lister\">snapshot-metadata-lister</a></li>\n<li>End-to-end example with csi-hostpath-driver: <a href=\"https://github.com/kubernetes-csi/csi-driver-host-path/blob/master/docs/example-ephemeral.md\">example documentation</a></li>\n</ul>\n<h2 id=\"how-do-i-get-involved\">How do I get involved?</h2>\n<p>This project, like all of Kubernetes, is the result of hard work by many contributors from diverse backgrounds working together.\nOn behalf of SIG Storage, I would like to offer a huge thank you to the contributors who helped review the design and implementation of the project, including but not limited to the following:</p>\n<ul>\n<li>Ben Swartzlander (<a href=\"https://github.com/bswartz\">bswartz</a>)</li>\n<li>Carl Braganza (<a href=\"https://github.com/carlbraganza\">carlbraganza</a>)</li>\n<li>Daniil Fedotov (<a href=\"https://github.com/hairyhum\">hairyhum</a>)</li>\n<li>Ivan Sim (<a href=\"https://github.com/ihcsim\">ihcsim</a>)</li>\n<li>Nikhil Ladha (<a href=\"https://github.com/Nikhil-Ladha\">Nikhil-Ladha</a>)</li>\n<li>Prasad Ghangal (<a href=\"https://github.com/PrasadG193\">PrasadG193</a>)</li>\n<li>Praveen M (<a href=\"https://github.com/iPraveenParihar\">iPraveenParihar</a>)</li>\n<li>Rakshith R (<a href=\"https://github.com/Rakshith-R\">Rakshith-R</a>)</li>\n<li>Xing Yang (<a href=\"https://github.com/xing-yang\">xing-yang</a>)</li>\n</ul>\n<p>Thank also to everyone who has contributed to the project, including others who helped review the\n<a href=\"https://github.com/kubernetes/enhancements/pull/4082\">KEP</a> and the\n<a href=\"https://github.com/container-storage-interface/spec/pull/551\">CSI spec PR</a></p>\n<p>For those interested in getting involved with the design and development of CSI or any part of the Kubernetes Storage system,\njoin the <a href=\"https://github.com/kubernetes/community/tree/master/sig-storage\">Kubernetes Storage Special Interest Group</a> (SIG).\nWe always welcome new contributors.</p>\n<p>The SIG also holds regular <a href=\"https://docs.google.com/document/d/15tLCV3csvjHbKb16DVk-mfUmFry_Rlwo-2uG6KNGsfw/edit\">Data Protection Working Group meetings</a>.\nNew attendees are welcome to join our discussions.</p>",
      "timestamp": 1761396310.1126654,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Kubernetes v1.34: Pod Level Resources Graduated to Beta",
      "link": "https://kubernetes.io/blog/2025/09/22/kubernetes-v1-34-pod-level-resources/",
      "published": "Mon, 22 Sep 2025 10:30:00 -0800",
      "summary": "<p>On behalf of the Kubernetes community, I am thrilled to announce that the Pod Level Resources feature has graduated to Beta in the Kubernetes v1.34 release and is enabled by default! This significant milestone introduces a new layer of flexibility for defining and managing resource allocation for your Pods. This flexibility stems from the ability to specify CPU and memory resources for the Pod as a whole. Pod level resources can be combined with the container-level specifications to express the exact resource requirements and limits your application needs.</p>\n<h2 id=\"pod-level-specification-for-resources\">Pod-level specification for resources</h2>\n<p>Until recently, resource specifications that applied to Pods were primarily defined\nat the individual container level. While effective, this approach sometimes required\nduplicating or meticulously calculating resource needs across multiple containers\nwithin a single Pod. As a beta feature, Kubernetes allows you to specify the CPU,\nmemory and hugepages resources at the Pod-level. This means you can now define\nresource requests and limits for an entire Pod, enabling easier resource sharing\nwithout requiring granular, per-container management of these resources where\nit's not needed.</p>\n<h2 id=\"why-does-pod-level-specification-matter\">Why does Pod-level specification matter?</h2>\n<p>This feature enhances resource management in Kubernetes by offering <em>flexible resource management</em> at both the Pod and container levels.</p>\n<ul>\n<li>\n<p>It provides a consolidated approach to resource declaration, reducing the need for\nmeticulous, per-container management, especially for Pods with multiple\ncontainers.</p>\n</li>\n<li>\n<p>Pod-level resources enable containers within a pod to share unused resoures\namongst themselves, promoting efficient utilization within the pod. For example,\nit prevents sidecar containers from becoming performance bottlenecks. Previously,\na sidecar (e.g., a logging agent or service mesh proxy) hitting its individual CPU\nlimit could be throttled and slow down the entire Pod, even if the main\napplication container had plenty of spare CPU. With pod-level resources, the\nsidecar and the main container can share Pod's resource budget, ensuring smooth\noperation during traffic spikes - either the whole Pod is throttled or all\ncontainers work.</p>\n</li>\n<li>\n<p>When both pod-level and container-level resources are specified, pod-level\nrequests and limits take precedence. This gives you – and cluster administrators -\na powerful way to enforce overall resource boundaries for your Pods.</p>\n<p>For scheduling, if a pod-level request is explicitly defined, the scheduler uses\nthat specific value to find a suitable node, insteaf of the aggregated requests of\nthe individual containers. At runtime, the pod-level limit acts as a hard ceiling\nfor the combined resource usage of all containers. Crucially, this pod-level limit\nis the absolute enforcer; even if the sum of the individual container limits is\nhigher, the total resource consumption can never exceed the pod-level limit.</p>\n</li>\n<li>\n<p>Pod-level resources are <strong>prioritized</strong> in influencing the Quality of Service (QoS) class of the Pod.</p>\n</li>\n<li>\n<p>For Pods running on Linux nodes, the Out-Of-Memory (OOM) score adjustment\ncalculation considers both pod-level and container-level resources requests.</p>\n</li>\n<li>\n<p>Pod-level resources are <strong>designed to be compatible with existing Kubernetes functionalities</strong>, ensuring a smooth integration into your workflows.</p>\n</li>\n</ul>\n<h2 id=\"how-to-specify-resources-for-an-entire-pod\">How to specify resources for an entire Pod</h2>\n<p>Using <code>PodLevelResources</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature\ngate</a> requires\nKubernetes v1.34 or newer for all cluster components, including the control plane\nand every node. This feature gate is in beta and enabled by default in v1.34.</p>\n<h3 id=\"example-manifest\">Example manifest</h3>\n<p>You can specify CPU, memory and hugepages resources directly in the Pod spec manifest at the <code>resources</code> field for the entire Pod.</p>\n<p>Here’s an example demonstrating a Pod with both CPU and memory requests and limits\ndefined at the Pod level:</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">apiVersion</span>:<span style=\"color: #bbb;\"> </span>v1<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">kind</span>:<span style=\"color: #bbb;\"> </span>Pod<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">metadata</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>pod-resources-demo<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">namespace</span>:<span style=\"color: #bbb;\"> </span>pod-resources-example<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">spec</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># The 'resources' field at the Pod specification level defines the overall</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># resource budget for all containers within this Pod combined.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">resources</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># Pod-level resources</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># 'limits' specifies the maximum amount of resources the Pod is allowed to use.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># The sum of the limits of all containers in the Pod cannot exceed these values.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">limits</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">cpu</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"1\"</span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># The entire Pod cannot use more than 1 CPU core.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"200Mi\"</span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># The entire Pod cannot use more than 200 MiB of memory.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># 'requests' specifies the minimum amount of resources guaranteed to the Pod.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># This value is used by the Kubernetes scheduler to find a node with enough capacity.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">cpu</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"1\"</span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># The Pod is guaranteed 1 CPU core when scheduled.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"100Mi\"</span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># The Pod is guaranteed 100 MiB of memory when scheduled.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">containers</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>main-app-container<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">image</span>:<span style=\"color: #bbb;\"> </span>nginx<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>...<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># This container has no resource requests or limits specified.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>auxiliary-container<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">image</span>:<span style=\"color: #bbb;\"> </span>fedora<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">command</span>:<span style=\"color: #bbb;\"> </span>[<span style=\"color: #b44;\">\"sleep\"</span>,<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"inf\"</span>]<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>...<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># This container has no resource requests or limits specified.</span><span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><p>In this example, the <code>pod-resources-demo</code> Pod as a whole requests 1 CPU and 100 MiB of memory, and is limited to 1 CPU and 200 MiB of memory. The containers within will operate under these overall Pod-level constraints, as explained in the next section.</p>\n<h3 id=\"interaction-with-container-level-resource-requests-or-limits\">Interaction with container-level resource requests or limits</h3>\n<p>When both pod-level and container-level resources are specified, <strong>pod-level requests and limits take precedence</strong>. This means the node allocates resources based on the pod-level specifications.</p>\n<p>Consider a Pod with two containers where pod-level CPU and memory requests and\nlimits are defined, and only one container has its own explicit resource\ndefinitions:</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">apiVersion</span>:<span style=\"color: #bbb;\"> </span>v1<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">kind</span>:<span style=\"color: #bbb;\"> </span>Pod<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">metadata</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>pod-resources-demo<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">namespace</span>:<span style=\"color: #bbb;\"> </span>pod-resources-example<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">spec</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">resources</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">limits</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">cpu</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"1\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"200Mi\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">cpu</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"1\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"100Mi\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">containers</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>main-app-container<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">image</span>:<span style=\"color: #bbb;\"> </span>nginx<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">resources</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">cpu</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"0.5\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"50Mi\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>auxiliary-container<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">image</span>:<span style=\"color: #bbb;\"> </span>fedora<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">command</span>:<span style=\"color: #bbb;\"> </span>[<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"sleep\"</span>,<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"inf\"</span>]<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># This container has no resource requests or limits specified.</span><span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><ul>\n<li>\n<p>Pod-Level Limits: The pod-level limits (cpu: &quot;1&quot;, memory: &quot;200Mi&quot;) establish an absolute boundary for the entire Pod. The sum of resources consumed by all its containers is enforced at this ceiling and cannot be surpassed.</p>\n</li>\n<li>\n<p>Resource Sharing and Bursting: Containers can dynamically borrow any unused capacity, allowing them to burst as needed, so long as the Pod's aggregate usage stays within the overall limit.</p>\n</li>\n<li>\n<p>Pod-Level Requests: The pod-level requests (cpu: &quot;1&quot;, memory: &quot;100Mi&quot;) serve as the foundational resource guarantee for the entire Pod. This value informs the scheduler's placement decision and represents the minimum resources the Pod can rely on during node-level contention.</p>\n</li>\n<li>\n<p>Container-Level Requests: Container-level requests create a priority system within\nthe Pod's guaranteed budget. Because main-app-container has an explicit request\n(cpu: &quot;0.5&quot;, memory: &quot;50Mi&quot;), it is given precedence for its share of resources\nunder resource pressure over the auxiliary-container, which has no\nsuch explicit claim.</p>\n</li>\n</ul>\n<h2 id=\"limitations\">Limitations</h2>\n<ul>\n<li>\n<p>First of all, <a href=\"https://kubernetes.io/docs/concepts/workloads/pods/#pod-update-and-replacement\">in-place\nresize</a> of pod-level\nresources is <strong>not supported</strong> for Kubernetes v1.34 (or earlier). Attempting to\nmodify the <em>pod-level</em> resource limits or requests on a running Pod results in an\nerror: the resize is rejected. The v1.34 implementation of Pod level resources\nfocuses on allowing initial declaration of an overall resource envelope, that\napplies to the <strong>entire Pod</strong>. That is distinct from in-place pod resize, which\n(despite what the name might suggest) allows you\nto make dynamic adjustments to <em>container</em> resource\nrequests and limits, within a <em>running</em> Pod,\nand potentially without a container restart. In-place resizing is also not yet a\nstable feature; it graduated to Beta in the v1.33 release.</p>\n</li>\n<li>\n<p>Only CPU, memory, and hugepages resources can be specified at pod-level.</p>\n</li>\n<li>\n<p>Pod-level resources are not supported for Windows pods. If the Pod specification\nexplicitly targets Windows (e.g., by setting spec.os.name: &quot;windows&quot;), the API\nserver will reject the Pod during the validation step. If the Pod is not explicitly\nmarked for Windows but is scheduled to a Windows node (e.g., via a nodeSelector),\nthe Kubelet on that Windows node will reject the Pod during its admission process.</p>\n</li>\n<li>\n<p>The Topology Manager, Memory Manager and CPU Manager do not\nalign pods and containers based on pod-level resources as these resource managers\ndon't currently support pod-level resources.</p>\n</li>\n</ul>\n<h4 id=\"getting-started-and-providing-feedback\">Getting started and providing feedback</h4>\n<p>Ready to explore <em>Pod Level Resources</em> feature? You'll need a Kubernetes cluster running version 1.34 or later. Remember to enable the <code>PodLevelResources</code> <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a> across your control plane and all nodes.</p>\n<p>As this feature moves through Beta, your feedback is invaluable. Please report any issues or share your experiences via the standard Kubernetes communication channels:</p>\n<ul>\n<li>Slack: <a href=\"https://kubernetes.slack.com/messages/sig-node\">#sig-node</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/kubernetes-sig-node\">Mailing list</a></li>\n<li><a href=\"https://github.com/kubernetes/community/labels/sig%2Fnode\">Open Community Issues/PRs</a></li>\n</ul>",
      "timestamp": 1761396310.112669,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Kubernetes v1.34: Recovery From Volume Expansion Failure (GA)",
      "link": "https://kubernetes.io/blog/2025/09/19/kubernetes-v1-34-recover-expansion-failure/",
      "published": "Fri, 19 Sep 2025 10:30:00 -0800",
      "summary": "<p>Have you ever made a typo when expanding your persistent volumes in Kubernetes? Meant to specify <code>2TB</code>\nbut specified <code>20TiB</code>? This seemingly innocuous problem was kinda hard to fix - and took the project almost 5 years to fix.\n<a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#recovering-from-failure-when-expanding-volumes\">Automated recovery from storage expansion</a> has been around for a while in beta; however, with the v1.34 release, we have graduated this to\n<strong>general availability</strong>.</p>\n<p>While it was always possible to recover from failing volume expansions manually, it usually required cluster-admin access and was tedious to do (See aformentioned link for more information).</p>\n<p>What if you make a mistake and then realize immediately?\nWith Kubernetes v1.34, you should be able to reduce the requested size of the PersistentVolumeClaim (PVC) and, as long as the expansion to previously requested\nsize hadn't finished, you can amend the size requested. Kubernetes will\nautomatically work to correct it. Any quota consumed by failed expansion will be returned to the user and the associated PersistentVolume should be resized to the\nlatest size you specified.</p>\n<p>I'll walk through an example of how all of this works.</p>\n<h2 id=\"reducing-pvc-size-to-recover-from-failed-expansion\">Reducing PVC size to recover from failed expansion</h2>\n<p>Imagine that you are running out of disk space for one of your database servers, and you want to expand the PVC from previously\nspecified <code>10TB</code> to <code>100TB</code> - but you make a typo and specify <code>1000TB</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">kind</span>:<span style=\"color: #bbb;\"> </span>PersistentVolumeClaim<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">apiVersion</span>:<span style=\"color: #bbb;\"> </span>v1<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">metadata</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>myclaim<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">spec</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">accessModes</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- ReadWriteOnce<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">resources</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">storage</span>:<span style=\"color: #bbb;\"> </span>1000TB<span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># newly specified size - but incorrect!</span><span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><p>Now, you may be out of disk space on your disk array or simply ran out of allocated quota on your cloud-provider. But, assume that expansion to <code>1000TB</code> is never going to succeed.</p>\n<p>In Kubernetes v1.34, you can simply correct your mistake and request a new PVC size,\nthat is smaller than the mistake, provided it is still larger than the original size\nof the actual PersistentVolume.</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">kind</span>:<span style=\"color: #bbb;\"> </span>PersistentVolumeClaim<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">apiVersion</span>:<span style=\"color: #bbb;\"> </span>v1<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">metadata</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>myclaim<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">spec</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">accessModes</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- ReadWriteOnce<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">resources</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">storage</span>:<span style=\"color: #bbb;\"> </span>100TB<span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># Corrected size; has to be greater than 10TB.</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># You cannot shrink the volume below its actual size.</span><span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><p>This requires no admin intervention. Even better, any surplus Kubernetes quota that you temporarily consumed will be automatically returned.</p>\n<p>This fault recovery mechanism does have a caveat: whatever new size you specify for the PVC, it <strong>must</strong> be still higher than the original size in <code>.status.capacity</code>.\nSince Kubernetes doesn't support shrinking your PV objects, you can never go below the size that was originally allocated for your PVC request.</p>\n<h2 id=\"improved-error-handling-and-observability-of-volume-expansion\">Improved error handling and observability of volume expansion</h2>\n<p>Implementing what might look like a relatively minor change also required us to almost\nfully redo how volume expansion works under the hood in Kubernetes.\nThere are new API fields available in PVC objects which you can monitor to observe progress of volume expansion.</p>\n<h3 id=\"improved-observability-of-in-progress-expansion\">Improved observability of in-progress expansion</h3>\n<p>You can query <code>.status.allocatedResourceStatus['storage']</code> of a PVC to monitor progress of a volume expansion operation.\nFor a typical block volume, this should transition between <code>ControllerResizeInProgress</code>, <code>NodeResizePending</code> and <code>NodeResizeInProgress</code> and become nil/empty when volume expansion has finished.</p>\n<p>If for some reason, volume expansion to requested size is not feasible it should accordingly be in states like - <code>ControllerResizeInfeasible</code> or <code>NodeResizeInfeasible</code>.</p>\n<p>You can also observe size towards which Kubernetes is working by watching <code>pvc.status.allocatedResources</code>.</p>\n<h3 id=\"improved-error-handling-and-reporting\">Improved error handling and reporting</h3>\n<p>Kubernetes should now retry your failed volume expansions at slower rate, it should make fewer requests to both storage system and Kubernetes apiserver.</p>\n<p>Errors observerd during volume expansion are now reported as condition on PVC objects and should persist unlike events. Kubernetes will now populate <code>pvc.status.conditions</code> with error keys <code>ControllerResizeError</code> or <code>NodeResizeError</code> when volume expansion fails.</p>\n<h3 id=\"fixes-long-standing-bugs-in-resizing-workflows\">Fixes long standing bugs in resizing workflows</h3>\n<p>This feature also has allowed us to fix long standing bugs in resizing workflow such as <a href=\"https://github.com/kubernetes/kubernetes/issues/115294\">Kubernetes issue #115294</a>.\nIf you observe anything broken, please report your bugs to <a href=\"https://github.com/kubernetes/kubernetes/issues/new/choose\">https://github.com/kubernetes/kubernetes/issues</a>, along with details about how to reproduce the problem.</p>\n<p>Working on this feature through its lifecycle was challenging and it wouldn't have been possible to reach GA\nwithout feedback from <a href=\"https://github.com/msau42\">@msau42</a>, <a href=\"https://github.com/jsafrane\">@jsafrane</a> and <a href=\"https://github.com/xing-yang\">@xing-yang</a>.</p>\n<p>All of the contributors who worked on this also appreciate the input provided by <a href=\"https://github.com/thockin\">@thockin</a> and <a href=\"https://github.comliggitt\">@liggitt</a> at various Kubernetes contributor summits.</p>",
      "timestamp": 1761396310.1126726,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Kubernetes v1.34: DRA Consumable Capacity",
      "link": "https://kubernetes.io/blog/2025/09/18/kubernetes-v1-34-dra-consumable-capacity/",
      "published": "Thu, 18 Sep 2025 10:30:00 -0800",
      "summary": "<p>Dynamic Resource Allocation (DRA) is a Kubernetes API for managing scarce resources across Pods and containers.\nIt enables flexible resource requests, going beyond simply allocating <em>N</em> number of devices to support more granular usage scenarios.\nWith DRA, users can request specific types of devices based on their attributes, define custom configurations tailored to their workloads, and even share the same resource among multiple containers or Pods.</p>\n<p>In this blog, we focus on the device sharing feature and dive into a new capability introduced in Kubernetes 1.34: <em>DRA consumable capacity</em>,\nwhich extends DRA to support finer-grained device sharing.</p>\n<h2 id=\"background-device-sharing-via-resourceclaims\">Background: device sharing via ResourceClaims</h2>\n<p>From the beginning, DRA introduced the ability for multiple Pods to share a device by referencing the same ResourceClaim.\nThis design decouples resource allocation from specific hardware, allowing for more dynamic and reusable provisioning of devices.</p>\n<p>In Kubernetes 1.33, the new support for <em>partitionable devices</em> allowed resource drivers to advertise slices of a device that are available, rather than exposing the entire device as an all-or-nothing resource.\nThis enabled Kubernetes to model shareable hardware more accurately.</p>\n<p>But there was still a missing piece: it didn't yet support scenarios\nwhere the device driver manages fine-grained, dynamic portions of a device resource — like network bandwidth — based on user demand,\nor to share those resources independently of ResourceClaims, which are restricted by their spec and namespace.</p>\n<p>That’s where <em>consumable capacity</em> for DRA comes in.</p>\n<h2 id=\"benefits-of-dra-consumable-capacity-support\">Benefits of DRA consumable capacity support</h2>\n<p>Here's a taste of what you get in a cluster with the <code>DRAConsumableCapacity</code>\n<a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a> enabled.</p>\n<h3 id=\"device-sharing-across-multiple-resourceclaims-or-devicerequests\">Device sharing across multiple ResourceClaims or DeviceRequests</h3>\n<p>Resource drivers can now support sharing the same device — or even a slice of a device — across multiple ResourceClaims or across multiple DeviceRequests.</p>\n<p>This means that Pods from different namespaces can simultaneously share the same device,\nif permitted and supported by the specific DRA driver.</p>\n<h3 id=\"device-resource-allocation\">Device resource allocation</h3>\n<p>Kubernetes extends the allocation algorithm in the scheduler to support allocating a portion of a device's resources, as defined in the <code>capacity</code> field.\nThe scheduler ensures that the total allocated capacity across all consumers never exceeds the device’s total capacity, even when shared across multiple ResourceClaims or DeviceRequests.\nThis is very similar to the way the scheduler allows Pods and containers to share allocatable resources on Nodes;\nin this case, it allows them to share allocatable (consumable) resources on Devices.</p>\n<p>This feature expands support for scenarios where the device driver is able to manage resources <strong>within</strong> a device and on a per-process basis — for example,\nallocating a specific amount of memory (e.g., 8 GiB) from a virtual GPU,\nor setting bandwidth limits on virtual network interfaces allocated to specific Pods. This aims to provide safe and efficient resource sharing.</p>\n<h3 id=\"distinctattribute-constraint\">DistinctAttribute constraint</h3>\n<p>This feature also introduces a new constraint: <code>DistinctAttribute</code>, which is the complement of the existing <code>MatchAttribute</code> constraint.</p>\n<p>The primary goal of <code>DistinctAttribute</code> is to prevent the same underlying device from being allocated multiple times within a single ResourceClaim, which could happen since we are allocating shares (or subsets) of devices.\nThis constraint ensures that each allocation refers to a distinct resource, even if they belong to the same device class.</p>\n<p>It is useful for use cases such as allocating network devices connecting to different subnets to expand coverage or provide redundancy across failure domains.</p>\n<h2 id=\"how-to-use-consumable-capacity\">How to use consumable capacity?</h2>\n<p><code>DRAConsumableCapacity</code> is introduced as an alpha feature in Kubernetes 1.34. The <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/\">feature gate</a> <code>DRAConsumableCapacity</code> must be enabled in kubelet, kube-apiserver, kube-scheduler and kube-controller-manager.</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-bash\"><span style=\"display: flex;\"><span>--feature-gates<span style=\"color: #666;\">=</span>...,DRAConsumableCapacity<span style=\"color: #666;\">=</span><span style=\"color: #a2f;\">true</span>\n</span></span></code></pre></div><h3 id=\"as-a-dra-driver-developer\">As a DRA driver developer</h3>\n<p>As a DRA driver developer writing in Golang, you can make a device within a ResourceSlice allocatable to multiple ResourceClaims (or <code>devices.requests</code>) by setting <code>AllowMultipleAllocations</code> to <code>true</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-go\"><span style=\"display: flex;\"><span>Device {\n</span></span><span style=\"display: flex;\"><span> <span style=\"color: #666;\">...</span>\n</span></span><span style=\"display: flex;\"><span> AllowMultipleAllocations: ptr.<span style=\"color: #00a000;\">To</span>(<span style=\"color: #a2f; font-weight: bold;\">true</span>),\n</span></span><span style=\"display: flex;\"><span> <span style=\"color: #666;\">...</span>\n</span></span><span style=\"display: flex;\"><span>}\n</span></span></code></pre></div><p>Additionally, you can define a policy to restrict how each device's <code>Capacity</code> should be consumed by each <code>DeviceRequest</code> by defining <code>RequestPolicy</code> field in the <code>DeviceCapacity</code>.\nThe example below shows how to define a policy that requires a GPU with 40 GiB of memory to allocate at least 5 GiB per request, with each allocation in multiples of 5 GiB.</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-go\"><span style=\"display: flex;\"><span>DeviceCapacity{\n</span></span><span style=\"display: flex;\"><span> Value: resource.<span style=\"color: #00a000;\">MustParse</span>(<span style=\"color: #b44;\">\"40Gi\"</span>),\n</span></span><span style=\"display: flex;\"><span> RequestPolicy: <span style=\"color: #666;\">&amp;</span>CapacityRequestPolicy{\n</span></span><span style=\"display: flex;\"><span> Default: ptr.<span style=\"color: #00a000;\">To</span>(resource.<span style=\"color: #00a000;\">MustParse</span>(<span style=\"color: #b44;\">\"5Gi\"</span>)),\n</span></span><span style=\"display: flex;\"><span> ValidRange: <span style=\"color: #666;\">&amp;</span>CapacityRequestPolicyRange {\n</span></span><span style=\"display: flex;\"><span> Min: ptr.<span style=\"color: #00a000;\">To</span>(resource.<span style=\"color: #00a000;\">MustParse</span>(<span style=\"color: #b44;\">\"5Gi\"</span>)),\n</span></span><span style=\"display: flex;\"><span> Step: ptr.<span style=\"color: #00a000;\">To</span>(resource.<span style=\"color: #00a000;\">MustParse</span>(<span style=\"color: #b44;\">\"5Gi\"</span>)),\n</span></span><span style=\"display: flex;\"><span> }\n</span></span><span style=\"display: flex;\"><span> }\n</span></span><span style=\"display: flex;\"><span>}\n</span></span></code></pre></div><p>This will be published to the ResourceSlice, as partially shown below:</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">apiVersion</span>:<span style=\"color: #bbb;\"> </span>resource.k8s.io/v1<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">kind</span>:<span style=\"color: #bbb;\"> </span>ResourceSlice<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #00f; font-weight: bold;\">...</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">spec</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">devices</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>gpu0<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">allowMultipleAllocations</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #a2f; font-weight: bold;\">true</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">capacity</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">value</span>:<span style=\"color: #bbb;\"> </span>40Gi<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requestPolicy</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">default</span>:<span style=\"color: #bbb;\"> </span>5Gi<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">validRange</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">min</span>:<span style=\"color: #bbb;\"> </span>5Gi<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">step</span>:<span style=\"color: #bbb;\"> </span>5Gi<span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><p>An allocated device with a specified portion of consumed capacity will have a <code>ShareID</code> field set in the allocation status.</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-go\"><span style=\"display: flex;\"><span>claim.Status.Allocation.Devices.Results[i].ShareID\n</span></span></code></pre></div><p>This <code>ShareID</code> allows the driver to distinguish between different allocations that refer to the <strong>same device or same statically-partitioned slice</strong> but come from <strong>different <code>ResourceClaim</code> requests</strong>.<br />\nIt acts as a unique identifier for each shared slice, enabling the driver to manage and enforce resource limits independently across multiple consumers.</p>\n<h3 id=\"as-a-consumer\">As a consumer</h3>\n<p>As a consumer (or user), the device resource can be requested with a ResourceClaim like this:</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">apiVersion</span>:<span style=\"color: #bbb;\"> </span>resource.k8s.io/v1<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">kind</span>:<span style=\"color: #bbb;\"> </span>ResourceClaim<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #00f; font-weight: bold;\">...</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"></span><span style=\"color: #008000; font-weight: bold;\">spec</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">devices</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># for devices</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>req0<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">exactly</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">deviceClassName</span>:<span style=\"color: #bbb;\"> </span>resource.example.com<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">capacity</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">requests</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># for resources which must be provided by those devices</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">memory</span>:<span style=\"color: #bbb;\"> </span>10Gi<span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><p>This configuration ensures that the requested device can provide at least 10GiB of <code>memory</code>.</p>\n<p>Notably that <strong>any</strong> <code>resource.example.com</code> device that has at least 10GiB of memory can be allocated.\nIf a device that does not support multiple allocations is chosen, the allocation would consume the entire device.\nTo filter only devices that support multiple allocations, you can define a selector like this:</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">selectors</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">cel</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">expression</span>:<span style=\"color: #bbb;\"> </span>|-<span style=\"color: #b44; font-style: italic;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #b44; font-style: italic;\"> device.allowMultipleAllocations == true</span><span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><h2 id=\"integration-with-dra-device-status\">Integration with DRA device status</h2>\n<p>In device sharing, general device information is provided through the resource slice.\nHowever, some details are set dynamically after allocation.\nThese can be conveyed using the <a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/dynamic-resource-allocation/#resourceclaim-device-status\"><code>.status.devices</code></a> field of a ResourceClaim.\nThat field is only published in clusters where the <code>DRAResourceClaimDeviceStatus</code>\nfeature gate is enabled.</p>\n<p>If you do have <em>device status</em> support available, a driver can expose additional device-specific information beyond the <code>ShareID</code>.\nOne particularly useful use case is for virtual networks, where a driver can include the assigned IP address(es) in the status.\nThis is valuable for both network service operations and troubleshooting.</p>\n<p>You can find more information by watching our recording at: <a href=\"https://sched.co/1x71v\">KubeCon Japan 2025 - Reimagining Cloud Native Networks: The Critical Role of DRA</a>.</p>\n<h2 id=\"what-can-you-do-next\">What can you do next?</h2>\n<ul>\n<li>\n<p><strong>Check out the <a href=\"https://github.com/kubernetes-sigs/cni-dra-driver\">CNI DRA Driver project</a></strong> for an example of DRA integration in Kubernetes networking. Try integrating with network resources like <code>macvlan</code>, <code>ipvlan</code>, or smart NICs.</p>\n</li>\n<li>\n<p>Start enabling the <code>DRAConsumableCapacity</code> feature gate and experimenting with virtualized or partitionable devices. Specify your workloads with <em>consumable capacity</em> (for example: fractional bandwidth or memory).</p>\n</li>\n<li>\n<p>Let us know your feedback:</p>\n<ul>\n<li>✅ What worked well?</li>\n<li>⚠️ What didn’t?</li>\n</ul>\n<p>If you encountered issues to fix or opportunities to enhance,\nplease <a href=\"https://github.com/kubernetes/enhancements/issues\">file a new issue</a>\nand reference <a href=\"https://github.com/kubernetes/enhancements/issues/5075\">KEP-5075</a> there,\nor reach out via <a href=\"https://kubernetes.slack.com/archives/C0409NGC1TK\">Slack (#wg-device-management)</a>.</p>\n</li>\n</ul>\n<h3 id=\"conclusion\">Conclusion</h3>\n<p>Consumable capacity support enhances the device sharing capability of DRA by allowing effective device sharing across namespaces, across claims, and tailored to each Pod’s actual needs.\nIt also empowers drivers to enforce capacity limits, improves scheduling accuracy, and unlocks new use cases like bandwidth-aware networking and multi-tenant device sharing.</p>\n<p>Try it out, experiment with consumable resources, and help shape the future of dynamic resource allocation in Kubernetes!</p>\n<h3 id=\"further-reading\">Further Reading</h3>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/dynamic-resource-allocation/\">DRA in the Kubernetes documentation</a></li>\n<li><a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/4815-dra-partitionable-devices\">KEP for DRA Partitionable Devices</a></li>\n<li><a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/4817-resource-claim-device-status\">KEP for DRA Device Status</a></li>\n<li><a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/5075-dra-consumable-capacity\">KEP for DRA Consumable Capacity</a></li>\n<li><a href=\"https://www.kubernetes.dev/resources/release/#kubernetes-v134\">Kubernetes 1.34 Release Notes</a></li>\n</ul>",
      "timestamp": 1761396310.112676,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Kubernetes v1.34: Pods Report DRA Resource Health",
      "link": "https://kubernetes.io/blog/2025/09/17/kubernetes-v1-34-pods-report-dra-resource-health/",
      "published": "Wed, 17 Sep 2025 10:30:00 -0800",
      "summary": "<p>The rise of AI/ML and other high-performance workloads has made specialized hardware like GPUs, TPUs, and FPGAs a critical component of many Kubernetes clusters. However, as discussed in a <a href=\"https://kubernetes.io/blog/2025/07/03/navigating-failures-in-pods-with-devices/\">previous blog post about navigating failures in Pods with devices</a>, when this hardware fails, it can be difficult to diagnose, leading to significant downtime. With the release of Kubernetes v1.34, we are excited to announce a new alpha feature that brings much-needed visibility into the health of these devices.</p>\n<p>This work extends the functionality of <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/4680-add-resource-health-to-pod-status\">KEP-4680</a>, which first introduced a mechanism for reporting the health of devices managed by Device Plugins. Now, this capability is being extended to <em>Dynamic Resource Allocation (DRA)</em>. Controlled by the <code>ResourceHealthStatus</code> feature gate, this enhancement allows DRA drivers to report device health directly into a Pod's <code>.status</code> field, providing crucial insights for operators and developers.</p>\n<h2 id=\"why-expose-device-health-in-pod-status\">Why expose device health in Pod status?</h2>\n<p>For stateful applications or long-running jobs, a device failure can be disruptive and costly. By exposing device health in the <code>.status</code> field for a Pod, Kubernetes provides a standardized way for users and automation tools to quickly diagnose issues. If a Pod is failing, you can now check its status to see if an unhealthy device is the root cause, saving valuable time that might otherwise be spent debugging application code.</p>\n<h2 id=\"how-it-works\">How it works</h2>\n<p>This feature introduces a new, optional communication channel between the Kubelet and DRA drivers, built on three core components.</p>\n<h3 id=\"a-new-grpc-health-service\">A new gRPC health service</h3>\n<p>A new gRPC service, <code>DRAResourceHealth</code>, is defined in the <code>dra-health/v1alpha1</code> API group. DRA drivers can implement this service to stream device health updates to the Kubelet. The service includes a <code>NodeWatchResources</code> server-streaming RPC that sends the health status (<code>Healthy</code>, <code>Unhealthy</code>, or <code>Unknown</code>) for the devices it manages.</p>\n<h3 id=\"kubelet-integration\">Kubelet integration</h3>\n<p>The Kubelet’s <code>DRAPluginManager</code> discovers which drivers implement the health service. For each compatible driver, it starts a long-lived <code>NodeWatchResources</code> stream to receive health updates. The DRA Manager then consumes these updates and stores them in a persistent <code>healthInfoCache</code> that can survive Kubelet restarts.</p>\n<h3 id=\"populating-the-pod-status\">Populating the Pod status</h3>\n<p>When a device's health changes, the DRA manager identifies all Pods affected by the change and triggers a Pod status update. A new field, <code>allocatedResourcesStatus</code>, is now part of the <code>v1.ContainerStatus</code> API object. The Kubelet populates this field with the current health of each device allocated to the container.</p>\n<h2 id=\"a-practical-example\">A practical example</h2>\n<p>If a Pod is in a <code>CrashLoopBackOff</code> state, you can use <code>kubectl describe pod &lt;pod-name&gt;</code> to inspect its status. If an allocated device has failed, the output will now include the <code>allocatedResourcesStatus</code> field, clearly indicating the problem:</p>\n<div class=\"highlight\"><pre tabindex=\"0\"><code class=\"language-yaml\"><span style=\"display: flex;\"><span><span style=\"color: #008000; font-weight: bold;\">status</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">containerStatuses</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span>my-gpu-intensive-container<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #080; font-style: italic;\"># ... other container statuses</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">allocatedResourcesStatus</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">name</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"claim:my-gpu-claim\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">resources</span>:<span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span>- <span style=\"color: #008000; font-weight: bold;\">resourceID</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"example.com/gpu-a1b2-c3d4\"</span><span style=\"color: #bbb;\">\n</span></span></span><span style=\"display: flex;\"><span><span style=\"color: #bbb;\"> </span><span style=\"color: #008000; font-weight: bold;\">health</span>:<span style=\"color: #bbb;\"> </span><span style=\"color: #b44;\">\"Unhealthy\"</span><span style=\"color: #bbb;\">\n</span></span></span></code></pre></div><p>This explicit status makes it clear that the issue is with the underlying hardware, not the application.</p>\n<p>Now you can improve the failure detection logic to react on the unhealthy devices associated with the Pod by de-scheduling a Pod.</p>\n<h2 id=\"how-to-use-this-feature\">How to use this feature</h2>\n<p>As this is an alpha feature in Kubernetes v1.34, you must take the following steps to use it:</p>\n<ol>\n<li>Enable the <code>ResourceHealthStatus</code> feature gate on your kube-apiserver and kubelets.</li>\n<li>Ensure you are using a DRA driver that implements the <code>v1alpha1 DRAResourceHealth</code> gRPC service.</li>\n</ol>\n<h2 id=\"dra-drivers\">DRA drivers</h2>\n<p>If you are developing a DRA driver, make sure to think about device failure detection strategy and ensure that your driver is integrated with this feature. This way, your driver will improve the user experience and simplify debuggability of hardware issues.</p>\n<h2 id=\"what-s-next\">What's next?</h2>\n<p>This is the first step in a broader effort to improve how Kubernetes handles device failures. As we gather feedback on this alpha feature, the community is planning several key enhancements before graduating to Beta:</p>\n<ul>\n<li><em>Detailed health messages:</em> To improve the troubleshooting experience, we plan to add a human-readable message field to the gRPC API. This will allow DRA drivers to provide specific context for a health status, such as &quot;GPU temperature exceeds threshold&quot; or &quot;NVLink connection lost&quot;.</li>\n<li><em>Configurable health timeouts:</em> The timeout for marking a device's health as &quot;Unknown&quot; is currently hardcoded. We plan to make this configurable, likely on a per-driver basis, to better accommodate the different health-reporting characteristics of various hardware.</li>\n<li><em>Improved post-mortem troubleshooting:</em> We will address a known limitation where health updates may not be applied to pods that have already terminated. This fix will ensure that the health status of a device at the time of failure is preserved, which is crucial for troubleshooting batch jobs and other &quot;run-to-completion&quot; workloads.</li>\n</ul>\n<p>This feature was developed as part of <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/4680-add-resource-health-to-pod-status\">KEP-4680</a>, and community feedback is crucial as we work toward graduating it to Beta. We have more improvements of device failure handling in k8s and encourage you to try it out and share your experiences with the SIG Node community!</p>",
      "timestamp": 1761396310.1126792,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Kubernetes v1.34: Moving Volume Group Snapshots to v1beta2",
      "link": "https://kubernetes.io/blog/2025/09/16/kubernetes-v1-34-volume-group-snapshot-beta-2/",
      "published": "Tue, 16 Sep 2025 10:30:00 -0800",
      "summary": "<p>Volume group snapshots were <a href=\"https://kubernetes.io/blog/2023/05/08/kubernetes-1-27-volume-group-snapshot-alpha/\">introduced</a>\nas an Alpha feature with the Kubernetes 1.27 release and moved to <a href=\"https://kubernetes.io/blog/2024/12/18/kubernetes-1-32-volume-group-snapshot-beta/\">Beta</a> in the Kubernetes 1.32 release.\nThe recent release of Kubernetes v1.34 moved that support to a second beta.\nThe support for volume group snapshots relies on a set of\n<a href=\"https://kubernetes-csi.github.io/docs/group-snapshot-restore-feature.html#volume-group-snapshot-apis\">extension APIs for group snapshots</a>.\nThese APIs allow users to take crash consistent snapshots for a set of volumes.\nBehind the scenes, Kubernetes uses a label selector to group multiple PersistentVolumeClaims\nfor snapshotting.\nA key aim is to allow you restore that set of snapshots to new volumes and\nrecover your workload based on a crash consistent recovery point.</p>\n<p>This new feature is only supported for <a href=\"https://kubernetes-csi.github.io/docs/\">CSI</a> volume drivers.</p>\n<h2 id=\"what-s-new-in-beta-2\">What's new in Beta 2?</h2>\n<p>While testing the beta version, we encountered an <a href=\"https://github.com/kubernetes-csi/external-snapshotter/issues/1271\">issue</a> where the <code>restoreSize</code> field is not set for individual VolumeSnapshotContents and VolumeSnapshots if CSI driver does not implement the ListSnapshots RPC call.\nWe evaluated various options <a href=\"https://docs.google.com/document/d/1LLBSHcnlLTaP6ZKjugtSGQHH2LGZPndyfnNqR1YvzS4/edit?tab=t.0\">here</a> and decided to make this change releasing a new beta for the API.</p>\n<p>Specifically, a VolumeSnapshotInfo struct is added in v1beta2, it contains information for an individual volume snapshot that is a member of a volume group snapshot.\nVolumeSnapshotInfoList, a list of VolumeSnapshotInfo, is added to VolumeGroupSnapshotContentStatus, replacing VolumeSnapshotHandlePairList.\nVolumeSnapshotInfoList is a list of snapshot information returned by the CSI driver to identify snapshots on the storage system.\nVolumeSnapshotInfoList is populated by the csi-snapshotter sidecar based on the CSI CreateVolumeGroupSnapshotResponse returned by the CSI driver's CreateVolumeGroupSnapshot call.</p>\n<p>The existing v1beta1 API objects will be converted to the new v1beta2 API objects by a conversion webhook.</p>\n<h2 id=\"what-s-next\">What’s next?</h2>\n<p>Depending on feedback and adoption, the Kubernetes project plans to push the volume\ngroup snapshot implementation to general availability (GA) in a future release.</p>\n<h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<ul>\n<li>The <a href=\"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/3476-volume-group-snapshot\">design spec</a>\nfor the volume group snapshot feature.</li>\n<li>The <a href=\"https://github.com/kubernetes-csi/external-snapshotter\">code repository</a> for volume group\nsnapshot APIs and controller.</li>\n<li>CSI <a href=\"https://kubernetes-csi.github.io/docs/\">documentation</a> on the group snapshot feature.</li>\n</ul>\n<h2 id=\"how-do-i-get-involved\">How do I get involved?</h2>\n<p>This project, like all of Kubernetes, is the result of hard work by many contributors\nfrom diverse backgrounds working together. On behalf of SIG Storage, I would like to\noffer a huge thank you to the contributors who stepped up these last few quarters\nto help the project reach beta:</p>\n<ul>\n<li>Ben Swartzlander (<a href=\"https://github.com/bswartz\">bswartz</a>)</li>\n<li>Hemant Kumar (<a href=\"https://github.com/gnufied\">gnufied</a>)</li>\n<li>Jan Šafránek (<a href=\"https://github.com/jsafrane\">jsafrane</a>)</li>\n<li>Madhu Rajanna (<a href=\"https://github.com/Madhu-1\">Madhu-1</a>)</li>\n<li>Michelle Au (<a href=\"https://github.com/msau42\">msau42</a>)</li>\n<li>Niels de Vos (<a href=\"https://github.com/nixpanic\">nixpanic</a>)</li>\n<li>Leonardo Cecchi (<a href=\"https://github.com/leonardoce\">leonardoce</a>)</li>\n<li>Saad Ali (<a href=\"https://github.com/saad-ali\">saad-ali</a>)</li>\n<li>Xing Yang (<a href=\"https://github.com/xing-yang\">xing-yang</a>)</li>\n<li>Yati Padia (<a href=\"https://github.com/yati1998\">yati1998</a>)</li>\n</ul>\n<p>For those interested in getting involved with the design and development of CSI or\nany part of the Kubernetes Storage system, join the\n<a href=\"https://github.com/kubernetes/community/tree/master/sig-storage\">Kubernetes Storage Special Interest Group</a> (SIG).\nWe always welcome new contributors.</p>\n<p>We also hold regular <a href=\"https://github.com/kubernetes/community/tree/master/wg-data-protection\">Data Protection Working Group meetings</a>.\nNew attendees are welcome to join our discussions.</p>",
      "timestamp": 1761396310.1126828,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Official Blog",
      "source_language": "en",
      "title": "Kubernetes v1.34: Decoupled Taint Manager Is Now Stable",
      "link": "https://kubernetes.io/blog/2025/09/15/kubernetes-v1-34-decoupled-taint-manager-is-now-stable/",
      "published": "Mon, 15 Sep 2025 10:30:00 -0800",
      "summary": "<p>This enhancement separates the responsibility of managing node lifecycle and pod eviction into two distinct components.\nPreviously, the node lifecycle controller handled both marking nodes as unhealthy with NoExecute taints and evicting pods from them.\nNow, a dedicated taint eviction controller manages the eviction process, while the node lifecycle controller focuses solely on applying taints.\nThis separation not only improves code organization but also makes it easier to improve taint eviction controller or build custom implementations of the taint based eviction.</p>\n<h2 id=\"what-s-new\">What's new?</h2>\n<p>The feature gate <code>SeparateTaintEvictionController</code> has been promoted to GA in this release.\nUsers can optionally disable taint-based eviction by setting <code>--controllers=-taint-eviction-controller</code>\nin kube-controller-manager.</p>\n<h2 id=\"how-can-i-learn-more\">How can I learn more?</h2>\n<p>For more details, refer to the <a href=\"http://kep.k8s.io/3902\">KEP</a> and to the beta announcement article: <a href=\"https://kubernetes.io/blog/2023/12/19/kubernetes-1-29-taint-eviction-controller/\">Kubernetes 1.29: Decoupling taint manager from node lifecycle controller</a>.</p>\n<h2 id=\"how-to-get-involved\">How to get involved?</h2>\n<p>We offer a huge thank you to all the contributors who helped with design,\nimplementation, and review of this feature and helped move it from beta to stable:</p>\n<ul>\n<li>Ed Bartosh (@bart0sh)</li>\n<li>Yuan Chen (@yuanchen8911)</li>\n<li>Aldo Culquicondor (@alculquicondor)</li>\n<li>Baofa Fan (@carlory)</li>\n<li>Sergey Kanzhelev (@SergeyKanzhelev)</li>\n<li>Tim Bannister (@lmktfy)</li>\n<li>Maciej Skoczeń (@macsko)</li>\n<li>Maciej Szulik (@soltysh)</li>\n<li>Wojciech Tyczynski (@wojtek-t)</li>\n</ul>",
      "timestamp": 1761396310.1126862,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "IBM’s Mellea Tackles Open Source AI’s Hidden Weakness",
      "link": "https://thenewstack.io/ibms-mellea-tackles-open-source-ais-hidden-weakness/",
      "published": "Fri, 24 Oct 2025 22:00:36 +0000",
      "summary": "<img alt=\"\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"683\" src=\"https://cdn.thenewstack.io/media/2025/10/c89a52fb-omar-ramadan-9jb4u2omx0g-unsplash-1-1024x683.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>RALEIGH, N.C. &#8212; Nathan Fulton remembers the moment he realized open source AI had an infrastructure problem. Senior engineers kept</p>\n<p>The post <a href=\"https://thenewstack.io/ibms-mellea-tackles-open-source-ais-hidden-weakness/\">IBM&#8217;s Mellea Tackles Open Source AI&#8217;s Hidden Weakness</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.799657,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "2 Fixes Vastly Cut TiKV Write Stalls From SST File Ingestion",
      "link": "https://thenewstack.io/2-fixes-vastly-cut-tikv-write-stalls-from-sst-file-ingestion/",
      "published": "Fri, 24 Oct 2025 18:00:13 +0000",
      "summary": "<img alt=\"Two robot repairmen\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"576\" src=\"https://cdn.thenewstack.io/media/2025/10/97f425d8-fix-1024x576.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>TiKV is an open source, distributed and transactional key-value database. Growing applications demand consistent performance, and unexpected write latency spikes,</p>\n<p>The post <a href=\"https://thenewstack.io/2-fixes-vastly-cut-tikv-write-stalls-from-sst-file-ingestion/\">2 Fixes Vastly Cut TiKV Write Stalls From SST File Ingestion</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.7996614,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "How TARmageddon Compromises Rust Security: A Developer’s Guide",
      "link": "https://thenewstack.io/how-tarmageddon-compromises-rust-security-a-developers-guide/",
      "published": "Fri, 24 Oct 2025 17:00:00 +0000",
      "summary": "<img alt=\"\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"584\" src=\"https://cdn.thenewstack.io/media/2025/04/6d6504ec-rust-programming-image-1-1024x584.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>, the security company focused on hardened container runtime security for Kubernetes and AI workloads, has uncovered a new, nasty</p>\n<p>The post <a href=\"https://thenewstack.io/how-tarmageddon-compromises-rust-security-a-developers-guide/\">How TARmageddon Compromises Rust Security: A Developer&#8217;s Guide</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.799665,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "How To Build Resilient IT Operations in 4 Steps",
      "link": "https://thenewstack.io/how-to-build-resilient-it-operations-in-4-steps/",
      "published": "Fri, 24 Oct 2025 16:00:02 +0000",
      "summary": "<img alt=\"Automation\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"570\" src=\"https://cdn.thenewstack.io/media/2025/10/14144ef6-automation-1024x570.png\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>If the past few months have taught us anything, it&#8217;s that managing digital incidents has become a part of IT&#8217;s</p>\n<p>The post <a href=\"https://thenewstack.io/how-to-build-resilient-it-operations-in-4-steps/\">How To Build Resilient IT Operations in 4 Steps</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.7996683,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "How MIT’s Project NANDA Aims To Decentralize AI Agents",
      "link": "https://thenewstack.io/how-mits-project-nanda-aims-to-decentralize-ai-agents/",
      "published": "Fri, 24 Oct 2025 15:00:24 +0000",
      "summary": "<img alt=\"puppies under a quilt\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"576\" src=\"https://cdn.thenewstack.io/media/2025/10/9be57535-sophia-kunkel-cxlcuypqabs-unsplashb-1024x576.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>2025 has been the year of AI agents, and most of the developer attention so far has been on the</p>\n<p>The post <a href=\"https://thenewstack.io/how-mits-project-nanda-aims-to-decentralize-ai-agents/\">How MIT’s Project NANDA Aims To Decentralize AI Agents</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.7996716,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "Beyond Basic Scaling: Advanced Kubernetes Resource Strategies",
      "link": "https://thenewstack.io/beyond-basic-scaling-advanced-kubernetes-resource-strategies/",
      "published": "Fri, 24 Oct 2025 14:30:49 +0000",
      "summary": "<img alt=\"Screen grab from &quot;Automating K8s Resource Management To Reduce Developer Burden&quot; showing Andrew Hillier and Chris Pirillo\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"576\" src=\"https://cdn.thenewstack.io/media/2025/09/ae7abb37-densify-webinar-1024x576.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>This was originally published on Sept. 30, 2025, and has been updated with additional information. Trying to set resource requests</p>\n<p>The post <a href=\"https://thenewstack.io/beyond-basic-scaling-advanced-kubernetes-resource-strategies/\">Beyond Basic Scaling: Advanced Kubernetes Resource Strategies</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.7996752,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "Multipass: Fast, Scriptable Ubuntu VMs for Modern DevOps",
      "link": "https://thenewstack.io/multipass-fast-scriptable-ubuntu-vms-for-modern-devops/",
      "published": "Fri, 24 Oct 2025 14:00:14 +0000",
      "summary": "<img alt=\"\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"768\" src=\"https://cdn.thenewstack.io/media/2025/10/280a1e37-canonical-multipass-1024x768.png\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>Canonical&#8217;s Multipass is a versatile tool for launching and managing lightweight Ubuntu virtual machines (VMs) across platforms, including macOS, Windows</p>\n<p>The post <a href=\"https://thenewstack.io/multipass-fast-scriptable-ubuntu-vms-for-modern-devops/\">Multipass: Fast, Scriptable Ubuntu VMs for Modern DevOps</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.7996786,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "When To Use Synthetic Monitoring vs. Real User Monitoring",
      "link": "https://thenewstack.io/when-to-use-synthetic-monitoring-vs-real-user-monitoring/",
      "published": "Fri, 24 Oct 2025 13:00:05 +0000",
      "summary": "<img alt=\"Monitoring contol room\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"576\" src=\"https://cdn.thenewstack.io/media/2025/10/b1bd89a1-monitoring-1024x576.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>Most web teams start their performance journey with synthetic monitoring. You spin up a Lighthouse test or an uptime checker,</p>\n<p>The post <a href=\"https://thenewstack.io/when-to-use-synthetic-monitoring-vs-real-user-monitoring/\">When To Use Synthetic Monitoring vs. Real User Monitoring</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.799682,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "Securing the Vibe: Reducing the Risk of AI-Generated Code",
      "link": "https://thenewstack.io/securing-the-vibe-reducing-the-risk-of-ai-generated-code/",
      "published": "Fri, 24 Oct 2025 12:24:37 +0000",
      "summary": "<img alt=\"\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"683\" src=\"https://cdn.thenewstack.io/media/2025/10/0401acab-daria-nepriakhina-i5iihhsatp4-unsplash-1024x683.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>Vibe coding helps people bring ideas to life quickly. It gives them the courage to create when inspiration strikes, especially</p>\n<p>The post <a href=\"https://thenewstack.io/securing-the-vibe-reducing-the-risk-of-ai-generated-code/\">Securing the Vibe: Reducing the Risk of AI-Generated Code</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.799685,
      "translated": false
    },
    {
      "feed_name": "The New Stack Kubernetes",
      "source_language": "en",
      "title": "Unblock DevEx by Getting Observability Tools Out of Their Way",
      "link": "https://thenewstack.io/unblock-devex-by-getting-observability-tools-out-of-their-way/",
      "published": "Thu, 23 Oct 2025 22:00:23 +0000",
      "summary": "<img alt=\"&quot;DevEx: Getting Observability Tools Out of the Way&quot; featured image. Keyboard with &quot;unblock&quot; on a red key\" class=\"webfeedsFeaturedVisual wp-post-image wp-stateless-item\" height=\"576\" src=\"https://cdn.thenewstack.io/media/2025/10/669cf0c1-observability-tools-blocking-devs-1024x576.jpg\" style=\"display: block; margin: auto; margin-bottom: 20px;\" width=\"1024\" /><p>Software developers&#8217; relationship with their tools is, to say the least, complicated. When tools work well, they fade into the</p>\n<p>The post <a href=\"https://thenewstack.io/unblock-devex-by-getting-observability-tools-out-of-their-way/\">Unblock DevEx by Getting Observability Tools Out of Their Way</a> appeared first on <a href=\"https://thenewstack.io\">The New Stack</a>.</p>",
      "timestamp": 1761396310.7996883,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #434: This isn’t goodbye… it’s just the beginning of something even better!",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-434-this-isnt-goodbye-its-just-the-beginning-of-something-even-better/",
      "published": "Fri, 30 May 2025 14:00:00 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines Hey KubeWeekly...",
      "timestamp": 1761396311.305281,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #433",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-433/",
      "published": "Fri, 23 May 2025 14:00:00 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines The CNCF...",
      "timestamp": 1761396311.3052855,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #432",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-432/",
      "published": "Fri, 16 May 2025 16:16:14 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines 🚨 Co-located...",
      "timestamp": 1761396311.3052888,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #431",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-431/",
      "published": "Fri, 09 May 2025 14:00:00 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines Share Your...",
      "timestamp": 1761396311.3052924,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #430",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-430/",
      "published": "Fri, 02 May 2025 16:12:36 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines Open Observability...",
      "timestamp": 1761396311.3052957,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #429",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-429/",
      "published": "Fri, 25 Apr 2025 14:37:38 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines Say hello...",
      "timestamp": 1761396311.305299,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #428",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-428/",
      "published": "Fri, 18 Apr 2025 14:00:00 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines Missed KubeCon...",
      "timestamp": 1761396311.3053024,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #427",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-427/",
      "published": "Fri, 11 Apr 2025 18:14:36 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines KubeCon +...",
      "timestamp": 1761396311.3053055,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #426",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-426/",
      "published": "Fri, 28 Mar 2025 16:49:04 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines KubeCon +...",
      "timestamp": 1761396311.3053086,
      "translated": false
    },
    {
      "feed_name": "KubeWeekly by CNCF",
      "source_language": "en",
      "title": "KubeWeekly #425",
      "link": "https://www.cncf.io/kubeweekly/kubeweekly-425/",
      "published": "Fri, 21 Mar 2025 14:00:00 +0000",
      "summary": "Table of Contents KubeWeekly—the newsletter for all things Kubernetes and beyond Find out more about the KubeWeekly newsletter and join the list to receive an email each time a new issue is available. Headlines The wait...",
      "timestamp": 1761396311.305312,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Red Hat Performance and Scale Engineering",
      "link": "https://www.redhat.com/en/blog/red-hat-performance-and-scale-engineering",
      "published": "Fri, 24 Oct 2025 00:00:00 +0000",
      "summary": "Red Hat's most recent posts about Performance, Scale, Chaos and more.LATEST BLOGSKrkn-AI: A feedback-driven approach to chaos engineeringOctober 21, 2025 Rahul Shetty, Naga Ravi Chaitanya ElluriChaos engineering is the practice of deliberately introducing controlled failures into a system to uncover weaknesses before they affect end users. By continuously running chaos experiments, teams can build greater confidence in their systems and identify real performance bottlenecks. However, applying chaos in real-world environments can be challenging due to the complex, dynamic nature of application",
      "timestamp": 1761396311.3628876,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Sovereign AI in action",
      "link": "https://www.redhat.com/en/blog/indias-sovereign-ai-vision-nxtgen-and-red-hat",
      "published": "Fri, 24 Oct 2025 00:00:00 +0000",
      "summary": "The recent Open Source Summit Hyderabad offered a platform to discuss a significant shift in the global AI landscape: the move toward a distributed, trusted, and self-reliant AI model. For too long, the narrative around AI has been dominated by a few centralized players and proprietary platforms. That era is quickly ending. India is now part of this movement with its unique, development-centered approach to AI. I had the pleasure of presenting with Rajgopal A S, MD and CEO at NxtGen Cloud Technologies. Our joint presentation, \"Sovereign AI in Action,\" showcased how this vision is being realize",
      "timestamp": 1761396311.3628917,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "10 essential articles to guide your hybrid cloud modernization playbook",
      "link": "https://www.redhat.com/en/blog/guiding-your-red-hat-modernization-playbook-ai-gitops-and-more",
      "published": "Fri, 24 Oct 2025 00:00:00 +0000",
      "summary": "The technology roundup is being redefined by a confluence of critical priorities: Securing the software supply chain, finding a definitive playbook for virtualization, and making the strategic leap into enterprise AI governance. This roundup highlights the articles that have proven most essential for executing these priorities. We’ve collected the most strategically relevant insights covering everything from new AI assistant features in Red Hat Enterprise Linux (RHEL) and Red Hat Ansible Automation Platform to the governance models needed for GitOps and infrastructure modernization. Use this",
      "timestamp": 1761396311.3628953,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Friday Five — October 24, 2025",
      "link": "https://www.redhat.com/en/blog/friday-five-october-24-2025-red-hat",
      "published": "Fri, 24 Oct 2025 00:00:00 +0000",
      "summary": "SiliconANGLE - Red Hat aims new Developer Lightspeed AI features at application migrationThis week Red Hat launched Developer Lightspeed, a new generative AI tool, and MTA 8. The combined solution integrates AI-generated refactoring and automated replatforming to accelerate developers' migration of applications to the Red Hat OpenShift platform. Learn more  The open source engine driving AI from experiment to production and why inference is everythingIn this blog, Red Hat addresses the challenge of scaling AI to production by focusing on efficient inference. Learn more  Automation unlocks 5G'",
      "timestamp": 1761396311.3628986,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Migration toolkit for applications 8: Bringing modernized applications to market faster",
      "link": "https://www.redhat.com/en/blog/migration-toolkit-applications-8-bringing-modernized-applications-market-faster",
      "published": "Thu, 23 Oct 2025 00:00:00 +0000",
      "summary": "Application modernization is a continuous journey for enterprises, driven by the need for greater business agility, enhanced security, and cost optimization. While the benefits are clear, large-scale modernization projects can be complex, time-consuming, and require significant upfront investment.With the introduction of migration toolkit for applications 8 (MTA 8), Red Hat is helping organizations overcome these challenges by automating key parts of the modernization journey. The migration toolkit for applications has long provided tools for containerization readiness, source-code analysis, a",
      "timestamp": 1761396311.362902,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "The Path to Digital Sovereignty: Why an Open Ecosystem is the Key for Europe",
      "link": "https://www.redhat.com/en/blog/path-digital-sovereignty-why-open-ecosystem-key-europe",
      "published": "Wed, 22 Oct 2025 00:00:00 +0000",
      "summary": "In an increasingly complex technology landscape, digital sovereignty has moved from a theoretical concept to an urgent strategic imperative for European organizations and governments. Recent global events—from supply chain disruptions to geopolitical conflicts—have underscored the critical need for greater control over their technology. Digital sovereignty is a strategic effort for organizations to build greater resilience, choice and confidence into IT environments. This isn’t a move towards isolation, with true sovereignty requiring more than just local data centers. Businesses are re-",
      "timestamp": 1761396311.3629053,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "From tokens to caches: How llm-d improves LLM observability in Red Hat OpenShift AI 3.0",
      "link": "https://www.redhat.com/en/blog/tokens-caches-how-llm-d-improves-llm-observability-red-hat-openshift-ai-3.0",
      "published": "Wed, 22 Oct 2025 00:00:00 +0000",
      "summary": "As enterprises scale large language models (LLMs) into production, site reliability engineers (SREs) and platform operators face a new set of challenges. Traditional application metrics—CPU usage, request throughput, memory consumption—are no longer enough. With LLMs, reliability and efficacy are defined by entirely new dynamics—token-level performance, cache efficiency, and inference pipeline latency.This article explores how llm-d, an open source project co-developed with the leading AI vendors (Red Hat, Google, IBM, etc.) and integrated into Red Hat OpenShift AI 3.0, redefines observa",
      "timestamp": 1761396311.3629084,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Modernize: Migrate from SUSE Rancher RKE1 to Red Hat OpenShift",
      "link": "https://www.redhat.com/en/blog/migrate-suse-rancher-rke1-red-hat-openshift",
      "published": "Wed, 22 Oct 2025 00:00:00 +0000",
      "summary": "SUSE Rancher RKE1 reached its end-of-life (EOL) on July 31, 2025. As with any EOL software, continuing to use it could leave your production workloads vulnerable to security risks, without vendor support, and facing compatibility challenges.If you’re considering a change, Red Hat OpenShift offers an enterprise-grade application platform that can support your Kubernetes container strategy today and scale for the future. Why Red Hat OpenShift is the right choice for your businessRed Hat OpenShift is a complete, enterprise-focused container application platform built on a hardened, consistent R",
      "timestamp": 1761396311.3629117,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Overcoming the cost and complexity of AI inference at scale",
      "link": "https://www.redhat.com/en/blog/overcoming-cost-and-complexity-ai-inference-scale",
      "published": "Tue, 21 Oct 2025 00:00:00 +0000",
      "summary": "Operationalizing AI models at scale is a critical challenge for IT leaders. While the initial cost of training a large language model (LLM) can be significant, the real and often underestimated expense is tied to inference.AI inference—the process of using a trained model to generate an output—is the most resource-intensive and costly part of an AI application, especially because it happens constantly during production. Inefficient inference can compromise an AI project's potential return on investment (ROI) and negatively impact customer experience due to high latency.The full-stack appro",
      "timestamp": 1761396311.362915,
      "translated": false
    },
    {
      "feed_name": "Red Hat Kubernetes Blog",
      "source_language": "en",
      "title": "Learn Red Hat OpenShift Virtualization concepts from a VMware Admin background with this learning path",
      "link": "https://www.redhat.com/en/blog/learn-red-hat-openshift-virtualization-vmware-admin",
      "published": "Tue, 21 Oct 2025 00:00:00 +0000",
      "summary": "If you’re a virtual machine (VM) administrator who’s spent years managing VMs in vSphere and are now considering how Red Hat OpenShift Virtualization might fit into your operational world, we’ve built something just for you.The high-level guide to Red Hat OpenShift Virtualization as a VMware admin learning path is designed to bridge the learning gap many face when moving from traditional virtualization solutions to Kubernetes workflows. This blog provides a glimpse into what's included in the path so you can take on OpenShift Virtualization with confidence.Benefits of the VMware OpenShif",
      "timestamp": 1761396311.3629186,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kubernetes GPU Resource Management Best Practices: Complete Technical Guide for 2025",
      "link": "https://collabnix.com/kubernetes-gpu-resource-management-best-practices-complete-technical-guide-for-2025/",
      "published": "Sun, 07 Sep 2025 05:25:14 +0000",
      "summary": "As artificial intelligence and machine learning workloads continue to dominate modern computing infrastructure, efficiently managing GPU resources in Kubernetes clusters has become critical for organizations looking to maximize performance while controlling costs. With GPU acceleration providing 10-100x performance improvements over CPU-only processing and 48% of organizations now using Kubernetes for AI/ML workloads, implementing proper GPU [&#8230;]",
      "timestamp": 1761396313.1386244,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "GPU Allocation in Kubernetes: A Comprehensive Guide",
      "link": "https://collabnix.com/how-gpu-allocation-to-kubernetes-works-deep-dive-into-the-mechanism/",
      "published": "Fri, 05 Sep 2025 09:02:45 +0000",
      "summary": "Understanding GPU Allocation in Kubernetes Understanding how Kubernetes allocates GPUs to workloads is crucial for anyone working with AI/ML applications or high-performance computing. This comprehensive guide explores the intricate mechanisms behind GPU allocation in Kubernetes, from the device plugin framework to the complete allocation process. Overview: The GPU Allocation Challenge Traditional Kubernetes was designed for [&#8230;]",
      "timestamp": 1761396313.138629,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kubernetes and GPU: The Complete 2025 Guide to AI/ML Acceleration",
      "link": "https://collabnix.com/kubernetes-and-gpu-the-complete-2025-guide-to-ai-ml-acceleration/",
      "published": "Fri, 05 Sep 2025 08:56:35 +0000",
      "summary": "As we advance through 2025, the convergence of Kubernetes and GPU acceleration has become the cornerstone of modern AI/ML infrastructure. With &#8220;Kubernetes AI&#8221; emerging as the most searched term (experiencing a 300% increase in search volume), organizations are rapidly adopting GPU-enabled Kubernetes clusters to power their machine learning workloads. This comprehensive guide explores the trending [&#8230;]",
      "timestamp": 1761396313.1386323,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kubernetes and GPU: The Complete Guide to AI/ML Acceleration in 2025",
      "link": "https://collabnix.com/kubernetes-and-gpu-the-complete-guide-to-ai-ml-acceleration-in-2025/",
      "published": "Sun, 24 Aug 2025 13:47:03 +0000",
      "summary": "As AI and machine learning workloads become increasingly central to modern applications, the need for GPU acceleration in Kubernetes has exploded. Whether you&#8217;re training deep learning models, running inference workloads, or processing massive datasets, understanding how to effectively leverage GPUs in Kubernetes is essential for any DevOps engineer or ML practitioner. This comprehensive guide covers [&#8230;]",
      "timestamp": 1761396313.1386359,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Top Kubernetes Tools for DevOps in 2025",
      "link": "https://collabnix.com/top-20-kubernetes-tools-every-devops-engineer-must-know-in-2025/",
      "published": "Sun, 24 Aug 2025 13:25:56 +0000",
      "summary": "Top Kubernetes Tools for DevOps in 2025 Kubernetes has revolutionized container orchestration, but managing K8s clusters effectively requires the right set of tools. Whether you&#8217;re scaling microservices, implementing GitOps, or securing containerized workloads, having the essential Kubernetes tools in your DevOps arsenal can make the difference between smooth operations and constant troubleshooting. In this comprehensive [&#8230;]",
      "timestamp": 1761396313.1386397,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kubernetes AI: The Most Searched Term Transforming Cloud Computing in 2025",
      "link": "https://collabnix.com/kubernetes-ai-the-most-searched-term-transforming-cloud-computing-in-2025/",
      "published": "Sat, 09 Aug 2025 11:35:58 +0000",
      "summary": "Introduction: Why &#8220;Kubernetes AI&#8221; Dominates 2025 Search Rankings If you&#8217;ve been following cloud computing trends in 2025, you&#8217;ve probably noticed one term consistently topping search results: Kubernetes AI. This isn&#8217;t just a passing fad—it represents the most significant shift in container orchestration since Kubernetes itself revolutionized cloud-native development. According to multiple industry reports and trend [&#8230;]",
      "timestamp": 1761396313.1386433,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Getting Started with Ollama on Kubernetes",
      "link": "https://collabnix.com/getting-started-with-ollama-on-kubernetes/",
      "published": "Sat, 02 Aug 2025 08:57:54 +0000",
      "summary": "Ollama has emerged as one of the most popular tools for running large language models (LLMs) locally, providing developers and organizations with a simple way to deploy and interact with models like Llama, Mistral, and CodeLlama without relying on external APIs. By packaging these powerful AI models into an easy-to-use interface, Ollama democratizes access to [&#8230;]",
      "timestamp": 1761396313.1386466,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kubernetes Cost Optimization: 12 Proven Strategies to Cut Your Cloud Bill by 60% in 2025",
      "link": "https://collabnix.com/kubernetes-cost-optimization-12-proven-strategies-to-cut-your-cloud-bill-by-60-in-2025/",
      "published": "Sat, 02 Aug 2025 08:20:09 +0000",
      "summary": "Discover 12 actionable Kubernetes cost optimization strategies that leading companies use to reduce cloud spending by up to 60%. Includes real-world examples and implementation guides",
      "timestamp": 1761396313.13865,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kagents: Revolutionizing Kubernetes Agent Management for Modern Container Orchestration",
      "link": "https://collabnix.com/kagents-revolutionizing-kubernetes-agent-management-for-modern-container-orchestration/",
      "published": "Sun, 27 Jul 2025 02:57:53 +0000",
      "summary": "Kubernetes has become the backbone of modern container orchestration, powering everything from microservices architectures to enterprise-scale applications. However, managing agents across distributed Kubernetes clusters remains a complex challenge that many DevOps teams struggle with daily. Enter Kagents – a revolutionary approach to Kubernetes agent management that’s transforming how organizations deploy, monitor, and maintain their containerized [&#8230;]",
      "timestamp": 1761396313.1386533,
      "translated": false
    },
    {
      "feed_name": "Collabnix Blog",
      "source_language": "en",
      "title": "Kubernetes Pod Optimization: Advanced Best Practices and Performance Tuning for Production Workloads",
      "link": "https://collabnix.com/kubernetes-pod-optimization-advanced-best-practices-and-performance-tuning-for-production-workloads/",
      "published": "Mon, 21 Jul 2025 18:40:36 +0000",
      "summary": "Learn how to optimize Kubernetes pods for maximum performance, security, and reliability in production environments with detailed code examples and proven strategies.",
      "timestamp": 1761396313.1386566,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Kubernetes Incident Response: Detect, investigate, and contain in under 10 minutes",
      "link": "https://www.sysdig.com/blog/kubernetes-incident-response-detect-investigate-and-contain-in-under-10-minutes",
      "published": "Thu, 23 Oct 2025 00:00:00 GMT",
      "summary": "In modern Kubernetes environments, detecting threats is only half the battle. What truly matters is how quickly and effectively you can respond, should a threat be detected. With workloads spinning up and down in seconds, and containers often leaving behind little trace, the window for meaningful action is narrow.",
      "timestamp": 1761396313.7037547,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Sysdig recognized as a Cloud Security Leader in Latio Tech Cloud Security Market Report",
      "link": "https://www.sysdig.com/blog/sysdig-recognized-as-a-cloud-security-leader-in-latio-tech-cloud-security-market-report",
      "published": "Thu, 16 Oct 2025 00:00:00 GMT",
      "summary": "Sysdig has been recognized as a Cloud Security Leader in the 2025 Latio Tech Cloud Security Market Report for pioneering a new standard in cloud defense. As threats accelerate with automation and AI, Sysdig stands out with a runtime-first, AI-guided approach that focuses on real risk, not noise. Built on open innovation and deep runtime visibility, Sysdig empowers teams to act in real time, strengthen collaboration, and protect hybrid environments with clarity and confidence.",
      "timestamp": 1761396313.7037597,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "AI echolocation of cloud risks using Sysdig & Snyk MCP servers",
      "link": "https://www.sysdig.com/blog/ai-echolocation-of-cloud-risks-using-sysdig-and-snyk-mcp-servers",
      "published": "Wed, 15 Oct 2025 00:00:00 GMT",
      "summary": "Modern security teams face a constant race against evolving threats, but context is the key to staying ahead. By combining the analytical depth of Snyk’s static code insights with Sysdig’s real-time cloud intelligence through Model Context Protocol (MCP) and AI, defenders can move from reactive patching to proactive understanding. This “AI echolocation” approach bridges the gap between code and cloud, allowing vulnerabilities to be viewed in their true runtime context. The result is a powerful shift in focus—from managing endless lists of theoretical risks to identifying and mitigating the threats that truly matter.",
      "timestamp": 1761396313.703763,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Sysdig MCP Server: Bridging AI and cloud security insights",
      "link": "https://www.sysdig.com/blog/sysdig-mcp-server-bridging-ai-and-cloud-security-insights",
      "published": "Wed, 15 Oct 2025 00:00:00 GMT",
      "summary": "Discover how the Sysdig MCP Server bridges AI and cloud security, empowering large language models like ChatGPT to interact with Sysdig APIs. Explore real-world examples of intelligent automation, dynamic reporting, and autonomous threat response powered by the Model Context Protocol (MCP).",
      "timestamp": 1761396313.7037663,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Understanding CVE-2025-49844: “RediShell” Critical Remote Code Execution in Redis",
      "link": "https://www.sysdig.com/blog/cve-2025-49844-redishell",
      "published": "Tue, 07 Oct 2025 00:00:00 GMT",
      "summary": "On October 3, 2025, CVE-2025-49844 was released, describing a critical remote code execution vulnerability in the widely used open-source in-memory data store, Redis. With a CVSS score of 10.0, this issue is very severe and should be addressed quickly.",
      "timestamp": 1761396313.7037697,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "How Sysdig secures your containers and Kubernetes",
      "link": "https://www.sysdig.com/blog/how-sysdig-secures-your-containers-and-kubernetes",
      "published": "Tue, 07 Oct 2025 00:00:00 GMT",
      "summary": "Most security tools weren’t designed for cloud-native environments. They miss container-specific risks, overwhelm teams with alerts, or force organizations to stitch together multiple tools. Sysdig takes a different approach.",
      "timestamp": 1761396313.7037735,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Sysdig Security Briefing: October 2025",
      "link": "https://www.sysdig.com/blog/sysdig-security-briefing-october-2025",
      "published": "Mon, 06 Oct 2025 00:00:00 GMT",
      "summary": "Last month, the NPM ecosystem was ablaze with hundreds of NPM packages compromised. After the first half of the month, every security researcher seemed to be hunting for issues in the NPM ecosystem, trying to find the next viral story.",
      "timestamp": 1761396313.7037768,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Cloud security, the right way: The 3 pillars of real-time defense",
      "link": "https://www.sysdig.com/blog/cloud-security-the-right-way-the-3-pillars-of-real-time-defense",
      "published": "Mon, 06 Oct 2025 00:00:00 GMT",
      "summary": "At Sysdig, cloud security, the right way, is built on three pillars: agentic AI, open innovation, and runtime insights. Together, these pillars deliver real-time defense that accelerates the innovation in the cloud.",
      "timestamp": 1761396313.7037802,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Open Source Spotlight: Bringing web application security to Falco with Falcoya's Nginx plugin",
      "link": "https://www.sysdig.com/blog/bringing-web-application-security-to-falco-with-falcoyas-nginx-plugin",
      "published": "Thu, 02 Oct 2025 00:00:00 GMT",
      "summary": "Many organizations rely on Falco as their primary solution for runtime cloud security across Linux hosts, containers, and Kubernetes environments. However, these same teams have historically been unable to use Falco for their web application security.",
      "timestamp": 1761396313.7037835,
      "translated": false
    },
    {
      "feed_name": "Sysdig Kubernetes Blog",
      "source_language": "en",
      "title": "Malicious NPM packages: Are you exposed?",
      "link": "https://www.sysdig.com/blog/malicious-npm-packages-are-you-exposed",
      "published": "Thu, 25 Sep 2025 00:00:00 GMT",
      "summary": "Earlier this week, a widespread NPM supply chain attack was discovered, leveraging a novel worm known as Shai-Hulud that rapidly infected hundreds of packages. The Sysdig Threat Research Team (TRT) has been monitoring the worm’s progress to ensure customers can quickly understand their exposure and respond with confidence.",
      "timestamp": 1761396313.7037868,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Modernize Java applications quickly with GitLab Duo with Amazon Q",
      "link": "https://about.gitlab.com/blog/modernize-java-applications-quickly-with-gitlab-duo-with-amazon-q/",
      "published": "2025-10-22T00:00:00.000Z",
      "summary": "<p>Upgrading applications to newer, supported versions of Java has traditionally been a tedious and time-consuming process. Development teams must spend countless hours learning about deprecated APIs, updated libraries, and new language features. In many cases, significant code rewrites are necessary, turning what should be a straightforward upgrade into a multi-week project that diverts resources from building new features.</p>\n<p><a href=\"https://about.gitlab.com/gitlab-duo/duo-amazon-q/\">GitLab Duo with Amazon Q</a> changes this paradigm entirely with AI-powered automation. What once took weeks can now be accomplished in minutes, with full traceability and ready-to-review merge requests that maintain your application's functionality while leveraging modern Java features.</p>\n<h2>How it works: Upgrade your Java application</h2>\n<p>Let's walk through how you can modernize a Java 8 application to Java 17.</p>\n<p><strong>Start with an issue</strong></p>\n<p>First, create an issue in your GitLab project describing your modernization goal. You don't need to specify version details - GitLab Duo with Amazon Q is able to detect that your application is currently built with Java 8 and needs to be upgraded. Simply describe that you want to refactor your code to Java 17 in the issue title and description.</p>\n<p><strong>Trigger the transformation</strong></p>\n<p>Once your issue is created, invoke GitLab Duo with Amazon Q using the <code>/q transform</code> command in a comment on the issue. This simple command sets in motion an automated process that will analyze your entire codebase, create a comprehensive upgrade plan, and generate all necessary code changes.</p>\n<p><strong>Automated analysis and implementation</strong></p>\n<p>Behind the scenes, Amazon Q analyzes your Java 8 codebase to understand your application's structure, dependencies, and implementation patterns. It identifies deprecated features, determines which Java 17 constructs can replace existing code, and creates a merge request with all the necessary updates. The transformation updates not just your source code files — including CLI, GUI, and model classes — but also your build configuration files like <code>pom.xml</code> with Java 17 settings and dependencies.</p>\n<p><strong>Review and verification</strong></p>\n<p>The generated merge request provides a complete view of all changes. You can review how your code has been modernized with Java 17 language features and verify that all tests still pass. The beauty of this approach is that all functionality is preserved and your application works exactly the same way, just with improved, more modern code.</p>\n<h2>Why use GitLab Duo with Amazon Q</h2>\n<p>Leveraging GitLab Duo with Amazon Q for application modernization has a number of advantages for development teams:</p>\n<p><strong>Time reduction</strong>: What traditionally takes weeks of developer effort is reduced to hours or minutes, freeing your team to focus on building new features rather than managing technical debt.</p>\n<p><strong>Minimized risk</strong>: The automated analysis and transformation process reduces the risk of human error that often accompanies manual code migrations. Every change is traceable and reviewable through GitLab's merge request workflow.</p>\n<p><strong>Complete audit trail</strong>: Every transformation is documented through GitLab's version control, providing a clear record of what changed and why, which is essential for compliance and troubleshooting.</p>\n<p><strong>Enterprise-grade security</strong>: The integration leverages GitLab's end-to-end security features and AWS's robust cloud infrastructure, helping to ensure your code and data remain protected throughout the modernization process.</p>\n<p>Are you ready to see GitLab Duo with Amazon Q in action? Watch our complete walkthrough video demonstrating the Java modernization process from start to finish:</p>\n<p>&lt;!-- blank line --&gt;\n&lt;figure class=&quot;video_container&quot;&gt;\n&lt;iframe src=&quot;https://www.youtube.com/embed/qGyzG9wTsEo?si=47JnSb6flOgZAJcR&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;\n&lt;/figure&gt;\n&lt;!-- blank line --&gt;</p>\n<blockquote>\n<p>To learn more about GitLab Duo with Amazon Q visit our <a href=\"https://about.gitlab.com/gitlab-duo/duo-amazon-q/\">web site</a> or reach out to your GitLab representative.</p>\n</blockquote>\n<h2>Read more</h2>\n<ul>\n<li><a href=\"https://about.gitlab.com/blog/agentic-ai-guides-and-resources/\">Agentic AI guides and resources</a></li>\n<li><a href=\"https://about.gitlab.com/blog/gitlab-duo-with-amazon-q-devsecops-meets-agentic-ai/\">GitLab Duo with Amazon Q: DevSecOps meets agentic AI</a></li>\n<li><a href=\"https://about.gitlab.com/blog/agentic-ai-guides-and-resources/#gitlab-duo-with-amazon-q-tutorials\">More GitLab Duo with Amazon Q tutorials</a></li>\n</ul>",
      "timestamp": 1761396314.241738,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Delivering faster and smarter scans with Advanced SAST",
      "link": "https://about.gitlab.com/blog/delivering-faster-and-smarter-scans-with-advanced-sast/",
      "published": "2025-10-21T00:00:00.000Z",
      "summary": "<p>Static application security testing (SAST) is critical to building secure software, helping teams identify vulnerabilities in code before they can be exploited. Last year, with GitLab 17.4, we <a href=\"https://about.gitlab.com/blog/gitlab-advanced-sast-is-now-generally-available/\">launched Advanced SAST</a> to deliver higher-quality scan results directly in developer workflows. Since then, Advanced SAST has powered millions of scans across over a hundred thousand codebases, reducing risk and helping customers build more secure applications from the start.</p>\n<p>We’re building on that foundation with a set of performance enhancements designed to improve accuracy and speed, so developers get results they can trust, without losing their flow. <a href=\"https://about.gitlab.com/blog/gitlab-18-5-intelligence-that-moves-software-development-forward/\">New capabilities</a> include better out-of-the-box precision, the ability to add custom detection rules, and a trio of improvements to accelerate scan times through multi-core scanning, algorithmic optimizations, and diff-based scanning. Together, these improvements make <a href=\"https://docs.gitlab.com/user/application_security/sast/gitlab_advanced_sast/\">Advanced SAST</a> smarter and faster, delivering security that’s developer-friendly by design.</p>\n<h2>SAST adoption hinges on both accuracy and speed</h2>\n<p>Most SAST programs rarely fail due to inaccurate vulnerability detection; they fail because developers don’t adopt security tooling. Too often, AppSec solutions like SAST deliver accuracy at the expense of the developer experience, or developer experience at the expense of accuracy. In reality, both are necessary. Without accuracy, developers don’t trust the results; without speed and usability, adoption lags.</p>\n<p>When both come together, security fits naturally into the development process — and that’s the only way security teams successfully drive SAST adoption at scale. This philosophy guides the GitLab roadmap for Advanced SAST.</p>\n<h2>Add custom detection rules for greater accuracy</h2>\n<p>The built-in Advanced SAST rules are informed by our in-house security research team, designed to maximize accuracy out of the box. Until now, you could <a href=\"https://docs.gitlab.com/user/application_security/sast/customize_rulesets/\">disable rules</a> or adjust their name, description, or severity, but you couldn’t add new detection logic. With GitLab 18.5, teams can now define their own custom, pattern-based rules to catch organization-specific issues — like flagging banned function calls — while still using GitLab’s curated ruleset as the baseline. Any violations of custom rules are reported in the same place as built-in GitLab rules, so developers can glean information from a single dashboard.</p>\n<p>Custom rules are effective at catching straightforward issues that matter to your organization, but they don’t influence the taint analysis that Advanced SAST uses to catch injections and similar flaws. Customizations are managed through simple TOML files, just like other SAST ruleset configurations. The result is higher-quality scan results tuned to your context, giving security teams more control and developers clearer, more actionable findings.</p>\n<h2>Faster scans to get developers in the flow</h2>\n<p>Speed matters. If a SAST scan takes too long, developers often switch to another task, so adoption suffers.</p>\n<p>That’s why we’ve invested in several performance-based enhancements to dramatically reduce scan times without compromising on accuracy, including:</p>\n<ul>\n<li><strong>Multi-core scanning</strong>: Leverages multiple CPU cores on GitLab Runners</li>\n<li><strong>Diff-based scanning</strong>: Scans only the changed code in a merge request</li>\n<li><strong>Ongoing optimizations</strong>: Smarter algorithms and engine enhancements</li>\n</ul>\n<p>These improvements build on each other, delivering faster scans with significant impact:</p>\n<ul>\n<li>Multi-core scanning typically reduces scan runtime by up to <strong>50%.</strong></li>\n<li>Diff-based scanning helps the most in large repositories, where less code is modified in each change. It’s specifically designed to give faster feedback in the code review process by delivering faster scans in merge requests. In our testing, many large repositories now take less than <strong>10 minutes to return results in MRs, where previously scans took more than 20 minutes.</strong></li>\n<li>In recent internal testing, algorithmic optimizations <strong>cut scan times by up to 71%</strong> on large open-source codebases, with Apache Lucene (Java) showing the biggest improvement. Other projects, including Django (Python), Kafka, and Zulip, also saw <strong>performance boosts of over 50% in single-core mode</strong>. You can see the results for yourself below.</li>\n</ul>\n<p>For developers, these improvements mean quicker feedback in merge requests, less waiting on security results, and a smoother path to adoption. And with multi-core scanning and diff-based analysis layered on top, the gains will be even greater.</p>\n<p><img alt=\"chart showing Python scan times\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760714805/rxl2zzo58j7y0k2ldxeq.png\" />\n&lt;p&gt;&lt;/p&gt;</p>\n<p><img alt=\"chart showing Java scan times\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760714805/hz9bsrir6nrqthkjddvi.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<blockquote>\n<p>These performance gains reflect GitLab’s broader focus on improving the developer experience across our platform. For example, one of our customers recently transitioned to GitLab’s <a href=\"https://docs.gitlab.com/user/application_security/policies/pipeline_execution_policies/\">Pipeline Execution Policies</a> (PEP) to gain greater control and flexibility over how security scans run within their pipelines. By standardizing templates, adding caching, and optimizing pipeline logic, their teams cut dependency scan runtimes from <strong>15–60 minutes down to just 1–2 minutes per job — saving roughly 100,000 compute minutes every day across 15,000 scans</strong>. It’s a clear example of how more customizable and efficient pipeline execution policies lead to faster feedback loops, higher productivity, and broader adoption.</p>\n</blockquote>\n<p>With these latest enhancements, Advanced SAST gives security and development teams the accuracy, speed, and flexibility they need to keep up with modern software development. By reducing false positives, enabling custom detection, and accelerating scan times, we’re making security an enabler — not a blocker — for developers.</p>\n<p>Like all of <a href=\"https://about.gitlab.com/solutions/application-security-testing/\">GitLab’s application security capabilities</a>, Advanced SAST is built directly into our DevSecOps platform, making security a natural part of how developers build, test, deploy, and secure software.</p>\n<p>The result: faster adoption, fewer bottlenecks, and more secure applications delivered from the start.</p>\n<blockquote>\n<p>Get started with Advanced SAST today! Sign up for a <a href=\"https://about.gitlab.com/free-trial/\">free trial of GitLab Ultimate</a>.</p>\n</blockquote>\n<h2>Learn more</h2>\n<ul>\n<li><a href=\"https://about.gitlab.com/blog/gitlab-advanced-sast-is-now-generally-available/\">GitLab Advanced SAST is now generally available</a></li>\n<li><a href=\"https://about.gitlab.com/blog/comprehensive-guide-to-gitlab-dast/\">A comprehensive guide to GitLab DAST</a></li>\n<li><a href=\"https://about.gitlab.com/solutions/application-security-testing/\">GitLab Security Testing solutions</a></li>\n</ul>",
      "timestamp": 1761396314.2417424,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "GitLab 18.5: Intelligence that moves software development forward",
      "link": "https://about.gitlab.com/blog/gitlab-18-5-intelligence-that-moves-software-development-forward/",
      "published": "2025-10-21T00:00:00.000Z",
      "summary": "<p>Software development teams are drowning in noise. Thousands of vulnerabilities flood security dashboards, but only a fraction pose real risk. Developers context-switch between planning backlogs, triaging security findings, reviewing code, and responding to CI/CD failures — losing hours to manual work. <a href=\"https://about.gitlab.com/releases/2025/10/16/gitlab-18-5-released/\">GitLab 18.5</a> calms this chaos.</p>\n<p>At the heart of this release is a valuable improvement in overall usability of GitLab and how AI integrates into your user experience. A new panel-based UI makes it easier to see data in context, and allows GitLab Duo Chat to be persistently visible across the platform, wherever it is needed. Purpose-built agents tackle vulnerability triage and backlog management, and popular AI tools integrate with agentic workflows even more seamlessly than before. We’ve also extended our market-leading security capabilities to help you better identify exploitable vulnerabilities versus theoretical ones, distinguish active credentials from expired ones, and scan only changed code to keep developers in flow.</p>\n<h2>What’s new in 18.5</h2>\n<p>18.5 represents our biggest release so far this year — watch our introduction to the release, and read more details below.\n&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/1128975773?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;GitLab_18.5 Release_101925_MP_v2&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&gt;&lt;/script&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<h3>Modern user experience with quick access to GitLab Duo everywhere</h3>\n<p>GitLab 18.5 delivers a modernized user experience with a more intuitive interface driven by a new panel-based layout.</p>\n<p>With panels, key information appears side by side so that you can work contextually, without losing your place. For example, when you click on an issue in the issues list, its details automatically open in a side panel. You can also launch the GitLab Duo panel on the right, bringing Duo wherever you are in GitLab. This lets you ask contextual questions or give instructions, right alongside your work.</p>\n<p>Several usability improvements make navigation easier. The global search box now appears at the top center for improved accessibility. Global navigation elements, including Issues, Merge Requests, To-Dos, and your avatar have moved to the top right. Additionally, the left sidebar is now collapsible and expandable, giving you more control over your workspace.</p>\n<p>Teams using experimental and GitLab Duo beta features will be the first to receive the new interface, followed by all GitLab.com users who will be able to turn this experience on using the toggle located under your user icon. To learn more about this feature, reference our documentation <a href=\"https://docs.gitlab.com/user/interface_redesign/#turn-new-navigation-on-or-off\">here</a>. Please share your feedback or report any issues <a href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/577554\">here</a>, you're helping us shape a better GitLab!</p>\n<h3>Updates to GitLab Duo Agent Platform</h3>\n<p><strong>Security Analyst Agent: Transform manual vulnerability triage into intelligent automation</strong></p>\n<p>GitLab Duo <a href=\"https://docs.gitlab.com/user/duo_agent_platform/agents/foundational_agents/security_analyst_agent/\">Security Analyst Agent</a> automates vulnerability management workflows through AI-powered analysis, helping transform hours of manual triage into intelligent automation. Building on the Vulnerability Management Tools available through GitLab Duo Agentic Chat, Security Analyst Agent orchestrates multiple tools, applying security policies, and creating custom flows for recurring workflows automatically.</p>\n<p>Security teams can access enriched vulnerability data, including CVE details, static reachability analysis, and code flow information, while executing operations like dismissing false positives, confirming threats, adjusting severity levels, and creating linked issues for remediation — all through conversational AI. The agent reduces repetitive clicking through vulnerability dashboards and replaces custom scripts with simple natural language commands.</p>\n<p>For example, when a security scan reveals dozens of vulnerabilities, simply prompt: &quot;Dismiss vulnerabilities with reachable=FALSE and create issues for critical findings.&quot; Security Analyst Agent analyzes reachability data, applies security policies, and completes bulk operations in moments — helping decrease work that would otherwise take hours.</p>\n<p>While individual Vulnerability Management Tools can be accessed directly through Agentic Chat for specific tasks, Security Analyst Agent orchestrates these tools intelligently and automates complex multi-step workflows. Note that Vulnerability Management Tools are available through Agentic Chat on GitLab Self-managed and GitLab.com instances, and Security Analyst Agent is available on GitLab.com only for 18.5, while availability in Self-managed and Dedicated environments will come with our next release.\nWatch this demo:</p>\n<p>&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/1128975984?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;18.5 Security Demo&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&gt;&lt;/script&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p><strong>GitLab Duo Planner: Turn backlog chaos into strategic clarity</strong></p>\n<p>Managing complex software delivery requires constant context-switching between planning tasks. <a href=\"https://docs.gitlab.com/user/duo_agent_platform/agents/foundational_agents/planner/\">GitLab Duo Planner</a> addresses the real-world planning challenges we see teams face every day. Duo Planner acts as your teammate with awareness of your project context, including how you manage issues, epics, and merge requests. Unlike generic AI assistants, it's purpose-built with deep knowledge of GitLab's planning workflows coupled with Agile and prioritization frameworks to help you balance effort, risk, and strategic alignment.</p>\n<p>GitLab Duo Planner can turn vague ideas into structured planning hierarchies, identify stale backlog items, and draft executive updates. For example, when refining your backlog with hundreds of issues accumulated over months, simply prompt: &quot;Identify stale backlog items and suggest priorities.&quot; Within seconds, you'll receive a structured summary showing issues without recent activity, items missing key details, duplicate work, and recommended priorities based on labels and milestones, complete with actionable recommendations.</p>\n<p>For teams managing complex roadmaps, the Planner aims to eliminate hours of manual analysis and context-switching, helping Product Managers and engineering leads make faster, more informed decisions. As of 18.5, GitLab Duo Planner is currently “read-only,” meaning that it can analyze, plan, and suggest, but cannot yet take direct action to modify anything. Please see our <a href=\"https://docs.gitlab.com/user/duo_agent_platform/agents/foundational_agents/planner/\">documentation</a> for more information.</p>\n<p><strong>Extensible Agent Catalog: Popular AI tools as native GitLab agents</strong></p>\n<p>GitLab 18.5 introduces popular AI agents directly into the <a href=\"https://docs.gitlab.com/user/duo_agent_platform/ai_catalog/\">AI Catalog</a>, making external tools like Claude, OpenAI Codex, Google Gemini CLI, Amazon Q Developer, and OpenCode available as native GitLab agents. Users can now discover, configure, and deploy these agents through the same unified catalog interface used for GitLab's built-in agents, with automatic syncing of foundational agents across organization catalogs.</p>\n<p>This eliminates the complexity of manual agent setup by providing a point-and-click catalog experience while maintaining enterprise-grade security through GitLab's authentication and audit systems. GitLab Duo Enterprise subscriptions now include built-in usage of Claude and Codex within GitLab, allowing you to use your existing GitLab subscription for these tools without requiring separate API keys or additional billing setup. Other agents may still require separate subscriptions and configuration while we finalize our integration plans.</p>\n<p><strong>Self-hosted GitLab Duo Agent Platform (Beta): Address data sovereignty requirements without sacrificing AI power</strong></p>\n<p>GitLab 18.5 moves GitLab Duo Agent Platform's self-hosted capabilities from experimental to beta, enabling organizations to execute AI agents and flows entirely within their own infrastructure — critical for regulated industries and data sovereignty requirements. The beta release includes improved timeout configurations and AI Gateway settings, allowing teams to use AI agents for code reviews, bug fixes, and feature implementations, while providing enterprise-grade security for sensitive code.</p>\n<h2>Smarter, faster security: Prioritize real risks and keep developers in the flow</h2>\n<p>GitLab 18.5 introduces new application security capabilities that help teams focus on exploitable risk, reduce noise, and strengthen software supply chain security. These updates continue our commitment to building security directly into the development process — delivering precision, speed, and insight without disrupting developer flow.</p>\n<p><strong>Static Reachability Analysis</strong></p>\n<p>With over <a href=\"https://www.cvedetails.com/\">37,000 new CVEs</a> issued this year, security teams face an overwhelming volume of vulnerabilities and struggle to understand which ones are truly exploitable. Static Reachability Analysis, now in limited availability, brings library-level precision by helping to identify whether vulnerable code is actually invoked in your application, not just present in dependencies.</p>\n<p>Paired with our <a href=\"https://docs.gitlab.com/user/application_security/vulnerabilities/risk_assessment_data/\">recently released</a> Exploit Prediction Scoring System (EPSS) and Known Exploited Vulnerability (KEV) data, security teams can more effectively accelerate vulnerability triage and prioritize real risks to help strengthen overall supply chain security. In 18.5, we’re adding support for Java, alongside existing support for Python, JavaScript, and TypeScript.</p>\n<p><strong>Secret Validity Checks</strong></p>\n<p>Just as Static Reachability Analysis helps teams prioritize exploitable vulnerabilities from open source dependencies, Secret Validity Checks bring the same insight to exposed secrets — currently available in beta on GitLab.com and GitLab Self-Managed. For GitLab-issued security tokens, instead of manually verifying whether a leaked credential or API key is active, GitLab automatically distinguishes active secrets from expired ones directly in the <a href=\"https://docs.gitlab.com/user/application_security/vulnerability_report/\">Vulnerability Report</a>. This helps enable security and development teams to focus remediation efforts on genuine risks. Support for AWS- and GCP-issued secrets is planned for future releases.</p>\n<p><strong>Custom rules for Advanced SAST</strong></p>\n<p>Advanced SAST runs on rules informed by our in-house security research team, designed to maximize accuracy out of the box. However, some teams required additional flexibility to tune the SAST engine for their specific organization. With Custom Rules for Advanced SAST, AppSec teams can define atomic, pattern-based detection logic to help capture security issues specific to their organization — like flagging banned function calls — while still using GitLab’s curated ruleset as the baseline. Customizations are managed through simple TOML files, just like other SAST ruleset configurations. While these rules will not support taint analysis, they do give organizations greater flexibility in achieving accurate SAST results.</p>\n<p><strong>Advanced SAST C and C++ language support</strong></p>\n<p>We’re expanding our language coverage for Advanced SAST to include C and C++, which are widely used languages in embedded systems software development. To enable scanning, projects must generate a compilation database that captures compiler commands and includes paths used during builds. This works to ensure the scanner can accurately parse and analyze source files, delivering precise, context-aware results that help security teams identify real vulnerabilities in the development process. The implementation requirements for C and C++ require specific configurations, which can be found in our <a href=\"https://docs.gitlab.com/user/application_security/sast/cpp_advanced_sast/\">documentation</a>. Advanced SAST C and C++ support are currently available in beta.</p>\n<p><strong>Diff-based SAST scanning</strong></p>\n<p>Traditional SAST scans re-analyze entire codebases with every commit, slowing pipelines and disrupting developer flow. The developer experience is a critical consideration that can make or break the adoption of application security testing. Diff-based SAST scanning aims to speed up scan times by focusing only on the code changed in a merge request, reducing redundant analysis and surfacing relevant results tied to the developer’s work. By aligning scans with actual code changes, GitLab delivers faster, more focused feedback that helps keep developers in flow while maintaining strong security coverage.</p>\n<h2>Simplify API configurations</h2>\n<p>API-driven workflows offer power and flexibility, but they can also create unnecessary complexity for tasks that teams need to perform regularly. The new Maven Virtual Registry interface brings a UI layer to these operations.</p>\n<h3>Maven Virtual Registry interface</h3>\n<p>The new web-based interface for managing Maven Virtual Registries turns complex API configurations into visual simplicity, providing a more intuitive experience for package administrators and platform engineers.</p>\n<p>Previously, teams configured and maintained virtual registries only through API calls, which made routine maintenance time-consuming and required specialized platform knowledge. The new interface removes that barrier, helping to make everyday tasks faster and easier.</p>\n<p>With this update, you can now:</p>\n<ul>\n<li>Create virtual registries to simplify dependency configuration</li>\n<li>Create and order upstreams to help improve performance and compliance</li>\n<li>Browse and clear stale cache entries directly in the UI</li>\n</ul>\n<p>This visual experience helps reduce operational overhead and provides development teams with clearer insight into how dependencies are resolved, enabling them to make better decisions about build performance and security policies.</p>\n<p>Watch a demo:</p>\n<p>&lt;!-- blank line --&gt;\n&lt;figure class=&quot;video_container&quot;&gt;\n&lt;iframe src=&quot;https://www.youtube.com/embed/CiOZJPhAvaI?si=cYaoR_OIgqFKbyM2&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;\n&lt;/figure&gt;\n&lt;!-- blank line --&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>We invite enterprise customers to join the <a href=\"https://gitlab.com/gitlab-org/gitlab/-/issues/543045\">Maven Virtual Registry Beta program</a> and share feedback to help shape the final release.</p>\n<h2>AI that adapts to your workflow</h2>\n<p>This release represents more than new capabilities — it's about choice and control. Watch the walkthrough video here:</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;div style=&quot;padding:56.25% 0 0 0;position:relative;&quot;&gt;&lt;iframe src=&quot;https://player.vimeo.com/video/1128992281?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen; picture-in-picture; clipboard-write; encrypted-media; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; style=&quot;position:absolute;top:0;left:0;width:100%;height:100%;&quot; title=&quot;18.5-tech-demo&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&gt;&lt;/script&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>GitLab Premium and Ultimate users can start using these capabilities today on <a href=\"https://GitLab.com\">GitLab.com</a> and self-managed environments, with availability for GitLab Dedicated customers planned for next month.</p>\n<p>GitLab Duo Agent Platform is currently in <strong>beta</strong> — enable beta and experimental features to experience how full-context AI can transform the way your teams build software. New to GitLab? <a href=\"https://about.gitlab.com/free-trial/devsecops/\">Start your free trial</a> and see why the future of development is AI-powered, secure, and orchestrated through the world’s most comprehensive DevSecOps platform.</p>\n<p><em><strong>Note:</strong> Platform capabilities that are in beta are available as part of the GitLab Beta program. They are free to use during the beta period, and when generally available, they will be made available with a paid add-on option for GitLab Duo Agent Platform.</em></p>\n<h3>Stay up to date with GitLab</h3>\n<p>To make sure you’re getting the latest features, security updates, and performance improvements, we recommend keeping your GitLab instance up to date. The following resources can help you plan and complete your upgrade:</p>\n<ul>\n<li><a href=\"https://gitlab-com.gitlab.io/support/toolbox/upgrade-path/\">Upgrade Path Tool</a> – enter your current version and see the exact upgrade steps for your instance</li>\n<li><a href=\"https://docs.gitlab.com/update/upgrade_paths/\">Upgrade Documentation</a> – detailed guides for each supported version, including requirements, step-by-step instructions, and best practices</li>\n</ul>\n<p>By upgrading regularly, you’ll ensure your team benefits from the newest GitLab capabilities and remains secure and supported.</p>\n<p>For organizations that want a hands-off approach, consider <a href=\"https://content.gitlab.com/viewer/d1fe944dddb06394e6187f0028f010ad#1\">GitLab’s Managed Maintenance service</a>. With Managed Maintenance, your team stays focused on innovation while GitLab experts keep your Self-Managed instance reliably upgraded, secure, and ready to lead in DevSecOps. Ask your account manager for more information.</p>\n<p><em>This blog post contains &quot;forward‑looking statements&quot; within the meaning of Section 27A of the Securities Act of 1933, as amended, and Section 21E of the Securities Exchange Act of 1934. Although we believe that the expectations reflected in these statements are reasonable, they are subject to known and unknown risks, uncertainties, assumptions and other factors that may cause actual results or outcomes to differ materially. Further information on these risks and other factors is included under the caption &quot;Risk Factors&quot; in our filings with the SEC. We do not undertake any obligation to update or revise these statements after the date of this blog post, except as required by law.</em></p>",
      "timestamp": 1761396314.2417457,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Claude Haiku 4.5 now available in GitLab Duo Agentic Chat",
      "link": "https://about.gitlab.com/blog/claude-haiku-4-5-now-available-in-gitlab-duo-agentic-chat/",
      "published": "2025-10-20T00:00:00.000Z",
      "summary": "<p>GitLab now offers Claude Haiku 4.5, Anthropic's fastest model combining high intelligence with exceptional speed, directly in the GitLab Duo model selector.</p>\n<p>Users have the flexibility to choose Claude Haiku 4.5 alongside other leading models, enhancing their GitLab Duo experience with near-frontier performance at remarkable speed. With strong performance on <a href=\"https://www.anthropic.com/news/claude-haiku-4-5\">SWE-bench Verified (73.3%)</a> and more than 2x the speed of Claude Sonnet 4.5, GitLab users can apply Claude Haiku 4.5 to accelerate their development workflows with rapid, intelligent responses.</p>\n<h2>GitLab Duo Agent Platform + Claude Haiku 4.5</h2>\n<p><a href=\"https://about.gitlab.com/gitlab-duo/agent-platform/\">GitLab Duo Agent Platform</a> extends the value of Claude Haiku 4.5 by enabling multi-agent orchestration, where Claude Haiku 4.5 can serve as a fast sub-agent executing parallel tasks while more powerful models handle high-level planning. This combination creates efficient agentic workflows, where speed meets intelligence across the software development lifecycle. The result is faster iterations, cost-effective AI assistance, and responsive experiences, all delivered inside the GitLab workflow developers already use every day.</p>\n<h2>Where you can use Claude Haiku 4.5</h2>\n<p>Claude Haiku 4.5 is now available as a model option in GitLab Duo Agent Platform Agentic Chat on GitLab.com. You can choose Claude Haiku 4.5 from the model selection dropdown to leverage its speed and coding capabilities for your development tasks.</p>\n<p><strong>Note:</strong> Ability to select Claude Haiku 4.5 in supported IDEs will be available soon.</p>\n<p>Key capabilities:</p>\n<ul>\n<li><strong>Superior coding performance:</strong> Achieves 73% on SWE-bench Verified, matching the intelligence level of models that were cutting-edge just months ago.</li>\n<li><strong>Lightning-fast responses:</strong> More than 2x faster than Sonnet 4.5, perfect for real-time pair programming.</li>\n<li><strong>Enhanced computer use:</strong> Outperforms Claude Sonnet 4 at autonomous task execution.</li>\n<li><strong>Context awareness:</strong> First Haiku model with native context window tracking for better task persistence.</li>\n<li><strong>Extended thinking:</strong> Pause and reason through complex problems before generating responses.</li>\n</ul>\n<h2>Get started today</h2>\n<p>GitLab Duo Pro and Enterprise customers can access Claude Haiku 4.5 today. Visit our <a href=\"https://docs.gitlab.com/user/gitlab_duo/\">documentation</a> to learn more about GitLab Duo capabilities and models.</p>\n<p>Questions or feedback? Share your experience with us through the GitLab community.</p>\n<blockquote>\n<p>Want to try GitLab Ultimate with Duo Enterprise? <a href=\"https://about.gitlab.com/gitlab-duo/\">Sign up for a free trial today.</a></p>\n</blockquote>\n<h2>Read more</h2>\n<ul>\n<li><a href=\"https://about.gitlab.com/blog/greater-ai-choice-in-gitlab-duo-claude-sonnet-4-5-arrives/\">Greater AI choice in GitLab Duo: Claude Sonnet 4.5 arrives</a></li>\n<li><a href=\"https://about.gitlab.com/blog/gitlab-18-4-ai-native-development-with-automation-and-insight/\">GitLab 18.4: AI-native development with automation and insight</a></li>\n<li><a href=\"https://about.gitlab.com/blog/gitlab-duo-chat-gets-agentic-ai-makeover/\">GitLab Duo Chat gets agentic AI makeover</a></li>\n</ul>",
      "timestamp": 1761396314.241749,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Variable and artifact sharing in GitLab parent-child pipelines",
      "link": "https://about.gitlab.com/blog/variable-and-artifact-sharing-in-gitlab-parent-child-pipelines/",
      "published": "2025-10-16T00:00:00.000Z",
      "summary": "<p>Software projects have different evolving needs and requirements. Some have\nsaid that <em>software is never finished, merely abandoned</em>. Some software\nprojects are small and others are large with complex integrations. Some have\ndependencies on external projects, while others are self-contained.\nRegardless of the size and complexity, the need to validate and ensure\nfunctionality remains paramount.</p>\n<p>CI/CD pipelines can help with the challenge of building and validating software projects consistently, but, much like the software itself, these pipelines can become complex with many dependencies. This is where ideas like <a href=\"https://docs.gitlab.com/ci/pipelines/downstream_pipelines/#parent-child-pipelines\">parent-child pipelines</a> and data exchange in CI/CD setups become incredibly important.</p>\n<p>In this article, we will cover common CI/CD data exchange challenges users may encounter with parent-child pipelines in GitLab — and how to solve them. You'll learn how to turn complex CI/CD processes into more manageable setups.</p>\n<h2>Using parent-child pipelines</h2>\n<p>The pipeline setup in the image below illustrates a scenario where a project could require a large, complex pipeline. The whole project resides in one repository and contains different modules. Each module requires its own set of build and test automation steps.</p>\n<p>One approach to address the CI/CD configuration in a scenario like this is to break down the larger pipeline into smaller ones (i.e., child pipelines) and keep a common CI/CD process that is shared across all modules in charge of the whole orchestration (i.e., parent pipeline).</p>\n<p><img alt=\"CI/CD configuration\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760617772/hizwvhmgxn6exbmvsnrv.png\" /></p>\n<p>The parent-child pipeline pattern allows a single pipeline to orchestrate one or many downstream pipelines. Similar to how a single pipeline coordinates the execution of multiple <a href=\"https://docs.gitlab.com/ci/jobs/\">jobs</a>, the parent pipeline coordinates the running of full pipelines with one or more jobs.</p>\n<p>This pattern has been shown to be helpful in a variety of use cases:</p>\n<ul>\n<li>\n<p>Breaking down large, complex pipelines into smaller, manageable pieces</p>\n</li>\n<li>\n<p>Conditionally executing certain pipelines as part of a larger CI/CD process</p>\n</li>\n<li>\n<p>Executing pipelines in parallel</p>\n</li>\n<li>\n<p>Helping manage user permissions to access and run certain pipelines</p>\n</li>\n</ul>\n<p>GitLab’s current CI/CD structure supports this pattern and makes it simple to implement parent-child pipelines. While there are many benefits when using the parent-child pipeline pattern with GitLab, one question we often get is how to share data between the parent and child pipelines. In the next sections, we’ll go over how to make use of GitLab variables and artifacts to address this concern.</p>\n<h3>Sharing variables</h3>\n<p>There are cases where it is necessary to pass the output from a parent pipeline job to a child pipeline. These outputs can be shared as variables, <a href=\"https://docs.gitlab.com/ci/jobs/job_artifacts/\">artifacts</a>, and <a href=\"https://docs.gitlab.com/ci/inputs/\">inputs</a>.</p>\n<p>Consider a case where we create a custom variable <code>var_1</code> during the runtime of a job:</p>\n<pre><code>\nstages:\n  - build\n  - triggers\n\n# This job only creates a variable \n\ncreate_var_job:\n  stage: build\n  script:\n    - var_1=&quot;Hi, I'm a Parent pipeline variable&quot;\n    - echo &quot;var_1=$var_1&quot; &gt;&gt; var.env\n  artifacts:\n    reports:\n      dotenv: var.env\n</code></pre>\n<p>Notice that the variable is created as part of the script steps in the job (during runtime). In this example, we are using a simple string <code>&quot;Hi, I'm a Parent pipeline variable&quot;</code> to illustrate the main syntax required to later share this variable with a child pipeline. Let's break down the <code>create_var_job</code>  and analyze the main steps from this GitLab job</p>\n<p>First, we need to save <code>var_1</code> as <code>dotenv</code>:</p>\n<pre><code>  script:\n    - var_1=&quot;Hi, I'm a pipeline variable&quot;\n    - echo &quot;var_1=$var_1&quot; &gt;&gt; var.env\n</code></pre>\n<p>After saving <code>var_1</code> as <code>var.env</code>, the next important step is to make this variable available as an artifact produced by the <code>create_var_job</code>. To do that, we use the following syntax:</p>\n<pre><code>\nartifacts:\n    reports:\n      dotenv: var.env\n</code></pre>\n<p>Up to this point, we have created a variable during runtime and saved it as a <code>dotenv</code> report. Now let's add the job that should trigger the child pipeline:</p>\n<pre><code>\ntelco_service_a:\n  stage: triggers\n  trigger:\n    include: service_a/.gitlab-ci.yml\n  rules:\n    - changes:\n        - service_a/*\n</code></pre>\n<p>The goal of <code>telco_service_a</code>  job is to find the <code>.gitlab-ci.yml</code> configuration of the child pipeline,  which is defined in this case as <code>service_a,</code> and trigger its execution. Let's examine this job:</p>\n<pre><code>\ntelco_service_a:\n  stage: triggers\n  trigger:\n    include: service_a/.gitlab-ci.yml\n</code></pre>\n<p>We see it belongs to another <code>stage</code> of the pipeline named <code>triggers.</code>This job will run only after <code>create_var_job</code> from the first stage successfully finishes and where the variable  <code>var_1</code> we want to pass is created.</p>\n<p>After defining the stage, we use the reserved words <code>trigger</code> and <code>include</code> to tell GitLab where to search for the child pipeline configuration, as illustrated in the YAML below:</p>\n<pre><code>  trigger:\n    include: service_a/.gitlab-ci.yml\n</code></pre>\n<p>Our child-pipeline YAML configuration is under <code>service_a/.gitlab-ci.yml</code> folder in the GitLab repository, for this example.</p>\n<p><img alt=\"child-pipeline YAML configuration\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760617772/ujkirpbifthpuujkcm6f.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;Child pipelines folders with configurations&lt;/i&gt;&lt;/center&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>Take into consideration that the repository structure depicted above can vary. What matters is properly pointing the  <code>triggers: include</code> properties at the location of your child-pipeline configuration in your repository.</p>\n<p>Finally, we use <code>rules: changes</code> to indicate to GitLab that this child pipeline should be triggered only if there is any change in any file in the <code>service_a/.gitlab-ci.yml</code> directory, as illustrated in the following code snippet:</p>\n<pre><code>\nrules:\n    - changes:\n        - service_a/*\n</code></pre>\n<p>Using this rule helps to optimize cost by triggering the child pipeline job only when necessary. This approach is particularly valuable in a monorepo architecture where specific modules contain numerous components, allowing us to avoid running their dedicated pipelines when no changes have been made to their respective codebases.</p>\n<h4>Configuring the parent pipeline</h4>\n<p>Up to this point, we have put together our parent pipeline. Here's the full code snippet for this segment:</p>\n<pre><code>\n# Parent Pipeline Configuration\n\n# This pipeline creates a custom variable and triggers a child pipeline\n\n\nstages:\n  - build\n  - trigger\n\ncreate_var_job:\n  stage: build\n  script:\n    - var_1=&quot;Hi, I'm a Parent pipeline variable&quot;\n    - echo &quot;var_1=$var_1&quot; &gt;&gt; var.env\n  artifacts:\n    reports:\n      dotenv: var.env\n\ntelco_service_a:\n  stage: triggers\n  trigger:\n    include: service_a/.gitlab-ci.yml\n  rules:\n    - changes:\n        - service_a/*\n</code></pre>\n<p>When GitLab executes the YAML configuration in the GitLab UI, the parent pipeline gets rendered as follows:</p>\n<p><img alt=\"parent pipeline rendering\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760617771/e1azkkr0rnzd42dzkw1x.png\" /></p>\n<p>Notice the label &quot;trigger job,&quot; which indicates this job will start the execution of another pipeline configuration.</p>\n<h4>Configuring the child pipeline</h4>\n<p>Moving forward, let's now focus on the child pipeline configuration, where we expect to inherit and print the value of the <code>var_1</code> created in the parent pipeline.</p>\n<p>The pipeline configuration in <code>service_a/.gitlab_ci.yml</code> has the following definition:</p>\n<pre><code>\nstages:\n  - build\n\nbuild_a:\n  stage: build\n  script:\n    - echo &quot;this job inherits the variable from the Parent pipeline:&quot;\n    - echo $var_1\n  needs:\n    - project: gitlab-da/use-cases/7-4-parent-child-pipeline\n      job: create_var_job\n      ref: main\n      artifacts: true\n</code></pre>\n<p>Like before, let's break down this pipeline and highlight the main parts to achieve our goal. This pipeline only contains one stage (i.e., <code>build)</code> and one job (i.e., <code>build_a)</code>. The script in the job contains two steps:</p>\n<pre><code>\nbuild_a:\n  stage: build\n  script:\n    - echo &quot;this job inherits the variable from the Parent pipeline:&quot;\n    - echo $var_1\n</code></pre>\n<p>These two steps print output during the execution. The most interesting one is the second step, <code>echo $var_1</code>, where we expect to print the variable value inherited from the parent pipeline. Remember, this was a simple string with value: <code>&quot;Hi, I'm a Parent pipeline variable.&quot;</code></p>\n<h4>Inheriting variables using needs</h4>\n<p>To set and link this job to inherit variables from the parent pipeline, we use the reserved GitLab CI properties <code>needs</code> as depicted in the following snippet:</p>\n<pre><code>\nneeds:\n    - project: gitlab-da/use-cases/7-4-parent-child-pipeline\n      job: create_var_job\n      ref: main\n      artifacts: true\n</code></pre>\n<p>Using the &quot;needs&quot; keyword, we define dependencies that must be completed before running this job. In this case, we pass four different values. Let's walk through each one  of them:</p>\n<ul>\n<li>\n<p><strong>Project:</strong> The complete namespace of the project where the main <code>gitlab-ci.yml</code> containing the parent pipeline YAML is located. Make sure to include the absolute path.</p>\n</li>\n<li>\n<p><strong>Job:</strong> The specific job name in the parent pipeline from where we want to inherit the variable.</p>\n</li>\n<li>\n<p><strong>Ref:</strong> The name of the branch where the main <code>gitlab-ci.yml</code> containing the parent pipeline YAML is located.</p>\n</li>\n<li>\n<p><strong>Artifacts:</strong> Where we set a boolean value, indicating that artifacts from the parent pipeline job should be downloaded and made available to this child pipeline job.</p>\n</li>\n</ul>\n<p><strong>Note:</strong> This specific approach using the needs property is only available to GitLab Premium and Ultimate users. We will cover another example for GitLab community users later on.</p>\n<h4>Putting it all together</h4>\n<p>Now let's assume we make a change to any of the files under <code>service_a</code> folder and commit the changes to the repository. When GitLab detects the change, the rule we set up will trigger the child job pipeline execution. This gets displayed in the GitLab UI as follows:</p>\n<p><img alt=\"Rule triggering the child job pipeline execution\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760617771/e1azkkr0rnzd42dzkw1x.png\" /></p>\n<p>Clicking on the <code>telco_service_a</code>  will take us to the jobs in the child pipeline:</p>\n<p><img alt=\"Jobs in pipeline\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760617773/vftjkg7ct2wqmew1e3yk.png\" /></p>\n<p>We can see the parent-child relationship, and finally, by clicking on the <code>build_a job</code>, we can visually verify the variable inheritance in the job execution log:</p>\n<p><img alt=\"Verifying the variable inheritance in the job execution log\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760617758/hxfkfmev9hebbqhgcvoh.png\" /></p>\n<p>This output confirms the behavior we expected. The custom runtime variable <code>var_1</code> created in the parent job is inherited in the child job, unpacked from the <code>dotenv</code> report, and its value accessible as can be confirmed in Line 26 above.</p>\n<p>This use case illustrates how to share custom variables that can contain any value between pipelines. This example is intentionally simple and can be extrapolated to more realistic scenarios. Take, for instance, the following CI/CD configuration, where the custom variable we need to share is the tag of a Docker image:</p>\n<pre><code>\n# Pipeline \n\n\nbuild-prod-image:\n  tags: [ saas-linux-large-amd64 ]\n  image: docker:20.10.16\n  stage: build\n  services:\n    - docker:20.10.16-dind\n  \n  script:\n    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n    - docker build -t $PRODUCTION_IMAGE .\n    - docker push $PRODUCTION_IMAGE\n    - echo &quot;UPSTREAM_CONTAINER_IMAGE=$PRODUCTION_IMAGE&quot; &gt;&gt; prodimage.env\n\n  artifacts:\n    reports:\n      dotenv: prodimage.env\n\n  rules:\n     - if: '$CI_COMMIT_BRANCH == &quot;main&quot;'\n       when: always\n     - when: never\n</code></pre>\n<p>And use the variable with the Docker image tag, in another job that updates a Helm manifest file:</p>\n<pre><code>\nupdate-helm-values:\n    stage: update-manifests\n    image:\n        name: alpine:3.16\n        entrypoint: [&quot;&quot;]\n  \n    before_script:\n         - apk add --no-cache git curl bash yq\n         - git remote set-url origin https://${CI_USERNAME}:${GITOPS_USER}@${SERVER_PATH}/${PROJECT_PATH}\n         - git config --global user.email &quot;gitlab@gitlab.com&quot;\n         - git config --global user.name &quot;GitLab GitOps&quot;\n         - git pull origin main\n    script:\n          - cd src\n          - echo $UPSTREAM_CONTAINER_IMAGE\n          - yq eval -i &quot;.spec.template.spec.containers[0].image |= \\&quot;$UPSTREAM_CONTAINER_IMAGE\\&quot;&quot; store-deployment.yaml\n          - cat store-deployment.yaml\n          - git pull origin main\n          - git checkout -B main\n          - git commit -am '[skip ci] prod image update'\n          - git push origin main\n    needs:\n      - project: gitlab-da/use-cases/devsecops-platform/simply-find/simply-find-front-end\n        job: build-prod-image\n        ref: main\n        artifacts: true\n</code></pre>\n<p>Mastering how to share variables between pipelines while maintaining the relationship between them enables us to create more sophisticated workflow orchestration that can meet our software building needs.</p>\n<h3>Using GitLab Package Registry to share artifacts</h3>\n<p>While the needs feature mentioned above works great for Premium and Ultimate users, GitLab also has features to help achieve similar results for Community Edition users. One suggested approach is to store artifacts in the <a href=\"https://docs.gitlab.com/user/packages/package_registry/\">GitLab Package Registry</a>.</p>\n<p>Using a combination of the variables provided in GitLab CI/CD jobs and the GitLab API, you can upload artifacts to the GitLab Package Registry from a parent pipeline. In the child pipeline, you can then access the uploaded artifact from the package registry using the same variables and API to access the artifact. Let’s take a look at the example pipeline and some supplementary scripts that illustrate this:</p>\n<p><strong>gitlab-ci.yml (parent pipeline)</strong></p>\n<pre><code>\n# Parent Pipeline Configuration\n\n# This pipeline creates an artifact, uploads it to Package Registry, and triggers a child pipeline\n\n\nstages:\n  - create-upload\n  - trigger\n\nvariables:\n  PACKAGE_NAME: &quot;pipeline-artifacts&quot;\n  PACKAGE_VERSION: &quot;$CI_PIPELINE_ID&quot;\n  ARTIFACT_FILE: &quot;artifact.txt&quot;\n\n# Job 1: Create and upload artifact to Package Registry\n\ncreate-and-upload-artifact:\n  stage: create-upload\n  image: alpine:latest\n  before_script:\n    - apk add --no-cache curl bash\n  script:\n    - bash scripts/create-artifact.sh\n    - bash scripts/upload-to-registry.sh\n  rules:\n    - if: $CI_PIPELINE_SOURCE == &quot;push&quot;\n\n# Job 2: Trigger child pipeline\n\ntrigger-child:\n  stage: trigger\n  trigger:\n    include: child-pipeline.yml\n    strategy: depend\n  variables:\n    PARENT_PIPELINE_ID: $CI_PIPELINE_ID\n    PACKAGE_NAME: $PACKAGE_NAME\n    PACKAGE_VERSION: $PACKAGE_VERSION\n    ARTIFACT_FILE: $ARTIFACT_FILE\n  rules:\n    - if: $CI_PIPELINE_SOURCE == &quot;push&quot;\n</code></pre>\n<p><strong>child-pipeline.yml</strong></p>\n<pre><code>\n# Child Pipeline Configuration\n\n# This pipeline downloads the artifact from Package Registry and processes it\n\n\nstages:\n  - download-process\n\nvariables:\n  # These variables are passed from the parent pipeline\n  PACKAGE_NAME: &quot;pipeline-artifacts&quot;\n  PACKAGE_VERSION: &quot;$PARENT_PIPELINE_ID&quot;\n  ARTIFACT_FILE: &quot;artifact.txt&quot;\n\n# Job 1: Download and process artifact from Package Registry\n\ndownload-and-process-artifact:\n  stage: download-process\n  image: alpine:latest\n  before_script:\n    - apk add --no-cache curl bash\n  script:\n    - bash scripts/download-from-registry.sh\n    - echo &quot;Processing downloaded artifact...&quot;\n    - cat $ARTIFACT_FILE\n    - echo &quot;Artifact processed successfully!&quot;\n</code></pre>\n<p><strong>upload-to-registry.sh</strong></p>\n<pre><code>\n#!/bin/bash\n\n\nset -e\n\n\n# Configuration\n\nPACKAGE_NAME=&quot;${PACKAGE_NAME:-pipeline-artifacts}&quot;\n\nPACKAGE_VERSION=&quot;${PACKAGE_VERSION:-$CI_PIPELINE_ID}&quot;\n\nARTIFACT_FILE=&quot;${ARTIFACT_FILE:-artifact.txt}&quot;\n\n\n# Validate required variables\n\nif [ -z &quot;$CI_PROJECT_ID&quot; ]; then\n    echo &quot;Error: CI_PROJECT_ID is not set&quot;\n    exit 1\nfi\n\n\nif [ -z &quot;$CI_JOB_TOKEN&quot; ]; then\n    echo &quot;Error: CI_JOB_TOKEN is not set&quot;\n    exit 1\nfi\n\n\nif [ -z &quot;$CI_API_V4_URL&quot; ]; then\n    echo &quot;Error: CI_API_V4_URL is not set&quot;\n    exit 1\nfi\n\n\nif [ ! -f &quot;$ARTIFACT_FILE&quot; ]; then\n    echo &quot;Error: Artifact file '$ARTIFACT_FILE' not found&quot;\n    exit 1\nfi\n\n\n# Construct the upload URL\n\nUPLOAD_URL=&quot;${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${PACKAGE_VERSION}/${ARTIFACT_FILE}&quot;\n\n\n# Upload the file using curl\n\nresponse=$(curl -w &quot;%{http_code}&quot; -o /tmp/upload_response.json \\\n    --header &quot;JOB-TOKEN: $CI_JOB_TOKEN&quot; \\\n    --upload-file &quot;$ARTIFACT_FILE&quot; \\\n    &quot;$UPLOAD_URL&quot;)\n\nif [ &quot;$response&quot; -eq 201 ]; then\n    echo &quot;Upload successful!&quot;\nelse\n    echo &quot;Upload failed with HTTP code: $response&quot;\n    exit 1\nfi\n\n</code></pre>\n<p><strong>download-from-regsitry.sh</strong></p>\n<pre><code>\n#!/bin/bash\n\n\nset -e\n\n\n# Configuration\n\nPACKAGE_NAME=&quot;${PACKAGE_NAME:-pipeline-artifacts}&quot;\n\nPACKAGE_VERSION=&quot;${PACKAGE_VERSION:-$PARENT_PIPELINE_ID}&quot;\n\nARTIFACT_FILE=&quot;${ARTIFACT_FILE:-artifact.txt}&quot;\n\n\n# Validate required variables\n\nif [ -z &quot;$CI_PROJECT_ID&quot; ]; then\n    echo &quot;Error: CI_PROJECT_ID is not set&quot;\n    exit 1\nfi\n\n\nif [ -z &quot;$CI_JOB_TOKEN&quot; ]; then\n    echo &quot;Error: CI_JOB_TOKEN is not set&quot;\n    exit 1\nfi\n\n\nif [ -z &quot;$CI_API_V4_URL&quot; ]; then\n    echo &quot;Error: CI_API_V4_URL is not set&quot;\n    exit 1\nfi\n\n\nif [ -z &quot;$PACKAGE_VERSION&quot; ]; then\n    echo &quot;Error: PACKAGE_VERSION is not set&quot;\n    exit 1\nfi\n\n\n# Construct the download URL\n\nDOWNLOAD_URL=&quot;${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${PACKAGE_VERSION}/${ARTIFACT_FILE}&quot;\n\n\n# Download the file using curl\n\nresponse=$(curl -w &quot;%{http_code}&quot; -o &quot;$ARTIFACT_FILE&quot; \\\n    --header &quot;JOB-TOKEN: $CI_JOB_TOKEN&quot; \\\n    --fail-with-body \\\n    &quot;$DOWNLOAD_URL&quot;)\n\nif [ &quot;$response&quot; -eq 200 ]; then\n    echo &quot;Download successful!&quot;\nelse\n    echo &quot;Download failed with HTTP code: $response&quot;\n    exit 1\nfi\n\n</code></pre>\n<p>In this example, the parent pipeline uploads a file to the GitLab Package Registry by calling a script named <code>upload-to-registry.sh</code>. The script gives the artifact a name and version and constructs the API call to upload the file to the package registry. The parent pipeline is able to authenticate using a <code>$CI_JOB_TOKEN</code> to push the artifact.txt file to the registry.</p>\n<p>The child pipeline operates the same as the parent pipeline by using a script to construct the API call to download the artifact.txt file from the package registry. It also is able to authenticate to the registry using the <code>$CI_JOB_TOKEN</code>.</p>\n<p>Since the GitLab Package Registry is available to all GitLab users, it helps to serve as a central location for storing and versioning artifacts. It is a great option for users working with many kinds of artifacts and needing to version artifacts for workflows even beyond CI/CD.</p>\n<h3>Using inputs to pass variables to a child pipeline</h3>\n<p>If you made it this far in this tutorial, and you have plans to start creating new pipeline configurations, you might want to start by evaluating if your use case can benefit from using <strong>inputs</strong> to pass variables to other pipelines.</p>\n<p>Using inputs is a recommended way to pass variables when you need to define specific values in a CI/CD job and have those values remain fixed during the pipeline run. Inputs might offer certain advantages over the method we implemented before. For example, with inputs, you can include data validation through options (i.e., values must be one of these: [‘staging', ‘prod’]), variable descriptions, type checking, and assign default values before the pipeline run.</p>\n<h4>Configuring CI/CD inputs</h4>\n<p>Consider the following parent pipeline configuration:</p>\n<pre><code>\n# .gitlab-ci.yml (main file)\n\nstages:\n - trigger\n\ntrigger-staging:\n stage: trigger\n trigger:\n   include:\n     - local: service_a/.gitlab-ci.yml\n       inputs:\n         environment: staging\n         version: &quot;1.0.0&quot;\n</code></pre>\n<p>Let's zoom in at the main difference between the code snippet above and the previous parent pipeline examples in this tutorial:</p>\n<pre><code>\ntrigger:\n   include:\n     - local: service_a/.gitlab-ci.yml\n       inputs:\n         environment: staging\n         version: &quot;1.0.0&quot;\n</code></pre>\n<p>The main difference is using the reserved word &quot;inputs&quot;. This part of the YAML configuration can be read in natural language as: “trigger the child pipeline defined in <code>service_a.gitlab-ci.yml</code> and make sure to pass ‘environment: staging’ and ‘version:1.0.0’ as input variables that the child pipeline will know how to use.</p>\n<h4>Reading CI/CD inputs in child pipelines</h4>\n<p>Moving to the child pipeline, it must contain in its declaration a spec that defines the inputs it can take. For each input, it is possible to add a little description, a set of predefined options the input value can take, and the type of value it will take. This is illustrated as follows:</p>\n<pre><code>\n# target pipeline or child-pipeline in this case\n\n\nspec:\n  inputs:\n    environment:\n      description: &quot;Deployment environment&quot;\n      options: [staging, production]\n    version:\n      type: string\n      description: &quot;Application version&quot;\n\n\n---\n\n\nstages:\n  - deploy\n# Jobs that will use the inputs\n\ndeploy:\n  stage: deploy\n  script:\n     -  echo &quot;Deploying version $[[ inputs.version ]] to $[[ inputs.environment ]]&quot;\n\n</code></pre>\n<p>Notice from the code snippet that after defining the spec, there is a YAML document separator &quot;---&quot;  followed by the actual child pipeline definition where we access the variables <code>$[[ inputs.version ]]</code> and <code>$[[ inputs.environment ]]&quot;</code> from the defined inputs using input interpolation.</p>\n<h2>Get hands-on with parent-child pipelines, artifacts, and more</h2>\n<p>We hope this article has helped with navigating the challenge of sharing variables and artifacts in parent-child pipeline setups.</p>\n<p>To try these examples for yourself, feel free to view or fork the <a href=\"https://gitlab.com/gitlab-da/use-cases/devsecops-platform/devops-platform-wave/scenarios/scenario7-deep-dive-into-build-automation-and-ci/7-4-parent-child-pipeline/-/tree/main\">Premium/Ultimate</a> and the <a href=\"https://gitlab.com/gitlab-da/playground/dhelfand/parent-child-pipeline-with-package-registry-artifacts\">GitLab Package Registry</a> examples of sharing artifacts.</p>\n<p>You can also sign up for a <a href=\"https://about.gitlab.com/free-trial/\">30-day free trial of GitLab Ultimate</a> to experience all the features GitLab has to offer. Thanks for reading!</p>",
      "timestamp": 1761396314.2417524,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "How we built a structured Streamlit Application Framework in Snowflake",
      "link": "https://about.gitlab.com/blog/how-we-built-a-structured-streamlit-application-framework-in-snowflake/",
      "published": "2025-10-10T00:00:00.000Z",
      "summary": "<p>Recently, the GitLab Data team transformed scattered\n<a href=\"https://streamlit.io/\">Streamlit</a> applications into a unified, secure, and\nscalable solution for our Snowflake environment. To accomplish this, we\npacked Python, Snowflake, and Streamlit together with GitLab. Follow along\non this journey and discover the results we achieved, and learn how you can,\ntoo.</p>\n<h2>The challenge</h2>\n<p>Imagine this scenario: Your organization has dozens of Streamlit applications across different environments, running various Python versions, connecting to sensitive data with inconsistent security practices. Some apps work, others break mysteriously, and nobody knows who built what or how to maintain them.</p>\n<p>This was exactly the challenge our data team faced. Applications were being created in isolation, with no standardization, no security oversight, and no clear deployment process. The result? A compliance nightmare and a maintenance burden that was growing exponentially.</p>\n<p><img alt=\"Functional architectural design (high level)\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760035999/i50lpkrwy9bok056rdak.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;Functional architectural design (high level)&lt;/i&gt;&lt;/center&gt;</p>\n<h2>How we started</h2>\n<p>We leveraged our unique position as customer zero by building this entire framework on GitLab's own CI/CD infrastructure and project management tools. Here are the ingredients we started with:</p>\n<ol>\n<li>\n<p><a href=\"https://about.gitlab.com/platform/\">GitLab</a> (product)</p>\n</li>\n<li>\n<p><a href=\"https://about.gitlab.com/platform/\">Snowflake</a> - our single source of truth (SSOT) for the data warehouse activities (and more than that)</p>\n</li>\n<li>\n<p><a href=\"https://streamlit.io/\">Streamlit</a> - an open-source tool for visual applications that has pure Python code under the hood</p>\n</li>\n</ol>\n<p>This provided us with immediate access to enterprise-grade DevSecOps capabilities, enabling us to implement automated testing, code review processes, and deployment pipelines from the outset. By utilizing GitLab's built-in features for issue tracking, merge requests, and automated deployments (CI/CD pipelines), we can iterate rapidly and validate the framework against real-world enterprise requirements. This internal-first approach ensured our solution was battle-tested on GitLab's own infrastructure before any external implementation.</p>\n<h3>The lessons we learned</h3>\n<p>The most critical lesson we learned from building the Streamlit Application Framework in Snowflake is that <strong>structure beats chaos every time</strong> — implement governance early rather than retrofitting it later when maintenance becomes exponential.</p>\n<p>You also need to clearly define roles and responsibilities, separating infrastructure concerns from application development, so that each team can focus on its strengths.</p>\n<p>Security and compliance cannot be afterthoughts; they must be built into templates and automated processes from day one, as it's far easier to enforce consistent standards upfront than to force them after the fact. Invest heavily in automation and CI/CD pipelines, as manual processes don't scale and introduce human error.</p>\n<p><img alt=\"Architecture of the framework (general overview)\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760035998/qt9gfemxjnj8kjumkuh7.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;Architecture of the framework (general overview)&lt;/i&gt;&lt;/center&gt;</p>\n<h2>How the Streamlit Application Framework changes everything</h2>\n<p>The Streamlit Application Framework turns a scattered approach into a structure. It gives developers freedom within secure guardrails, while automating deployment and eliminating maintenance complexity.</p>\n<h3>Three clear roles, one unified process</h3>\n<p>The framework introduces a structured approach with three distinct roles:</p>\n<ol>\n<li>\n<p><strong>Maintainers</strong> (Data team members and contributors) handle the infrastructure, including CI/CD pipelines, security templates, and compliance rules. They ensure the framework runs smoothly and stays secure.</p>\n</li>\n<li>\n<p><strong>Creators</strong> (those who need to build applications) can focus on what they do best: creating visualizations, connecting to Snowflake data, and building user experiences. They have full flexibility to create new applications from scratch, add new pages to existing apps, integrate additional Python libraries, and build complex data visualisations — all without worrying about deployment pipelines or security configurations.</p>\n</li>\n<li>\n<p><strong>Viewers</strong> (end users) access polished, secure applications without any technical overhead. All they need is Snowflake access.</p>\n</li>\n</ol>\n<p><img alt=\"Roles overview and their functionality\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760035999/oatqyx3ug7vsgzishpma.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;Overview of roles and their functions&lt;/i&gt;&lt;/center&gt;</p>\n<h2>Automate everything</h2>\n<p>By implementing CI/CD, days of manual deployments and configuration headaches are gone. The framework provides:</p>\n<ul>\n<li><strong>One-click environment preparation:</strong> With a set of <code>make</code> commands, the environment is installed and ready in a few seconds.</li>\n</ul>\n<pre><code class=\"language-yaml\">\n================================================================================\n\n✅ Snowflake CLI successfully installed and configured!\n\nConnection: gitlab_streamlit\n\nUser: YOU@GITLAB.COM\n\nAccount: gitlab\n\n================================================================================\n\nUsing virtualenv: /Users/YOU/repos/streamlit/.venv\n\n📚 Installing project dependencies...\n\nInstalling dependencies from lock file\n\nNo dependencies to install or update\n\n✅ Streamlit environment prepared!\n\n</code></pre>\n<ul>\n<li>\n<p><strong>Automated CI/CD pipelines:</strong> Handle testing, code review, and deployment from development to production.</p>\n</li>\n<li>\n<p><strong>Secure sandbox environments:</strong> Provide for safe development and testing before production deployment.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\">\n╰─$ make streamlit-rules\n\n🔍 Running Streamlit compliance check...\n\n================================================================================\n\nCODE COMPLIANCE REPORT\n\n================================================================================\n\nGenerated: 2025-07-09 14:01:16\n\nFiles checked: 1\n\n\nSUMMARY:\n\n✅ Passed: 1\n\n❌ Failed: 0\n\nSuccess Rate: 100.0%\n\n\nAPPLICATION COMPLIANCE SUMMARY:\n\n📱 Total Applications Checked: 1\n\n⚠️ Applications with Issues: 0\n\n📊 File Compliance Rate: 100.0%\n\n\nDETAILED RESULTS BY APPLICATION:\n\n...\n\n</code></pre>\n<ul>\n<li><strong>Template-based application creation:</strong> Ensures consistency across all applications and pages.</li>\n</ul>\n<pre><code class=\"language-yaml\">\n╰─$ make streamlit-new-page STREAMLIT_APP=sales_dashboard STREAMLIT_PAGE_NAME=analytics\n\n📝 Generating new Streamlit page: analytics for app: sales_dashboard\n\n📃 Create new page from template:\n\nPage name: analytics\n\nApp directory: sales_dashboard\n\nTemplate path: page_template.py\n\n✅ Successfully created 'analytics.py' in 'sales_dashboard' directory from template\n\n</code></pre>\n<ul>\n<li>\n<p><strong>Poetry-based dependency management:</strong> Prevents version conflicts and maintains clean environments.</p>\n</li>\n<li>\n<p><strong>Organized project structure:</strong> Has dedicated folders for applications, templates, compliance rules, and configuration management.</p>\n</li>\n</ul>\n<pre><code class=\"language-yaml\">\n├── src/\n\n│   ├── applications/     # Folder for Streamlit applications\n\n│   │   ├── main_app/     # Main dashboard application\n\n│   │   ├── components/   # Shared components\n\n│   │   └── &lt;your_apps&gt;/  # Your custom application\n\n│   │   └── &lt;your_apps2&gt;/ # Your 2nd custom application\n\n│   ├── templates/        # Application and page templates\n\n│   ├── compliance/       # Compliance rules and checks\n\n│   └── setup/            # Setup and configuration utilities\n\n├── tests/                # Test files\n\n├── config.yml            # Environment configuration\n\n├── Makefile              # Build and deployment automation\n\n└── README.md             # Main README.md file\n\n</code></pre>\n<ul>\n<li><strong>Streamlined workflow:</strong> Takes local development through testing schema to production, all automated through GitLab CI/CD pipelines.</li>\n</ul>\n<p><img alt=\"GitLab CI/CD pipelines for full automation of the process\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760035998/usyma2jkgiazu9iay1au.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;\n&lt;center&gt;&lt;i&gt;GitLab CI/CD pipelines for full automation of the process&lt;/i&gt;&lt;/center&gt;</p>\n<h2>Security and compliance by design</h2>\n<p>Instead of bolting on security as an afterthought, the structured Streamlit Application Framework builds it in from the ground up. Every application adheres to the same security standards, and compliance requirements are automatically enforced. Audit trails are maintained throughout the development lifecycle.</p>\n<p>We introduce our compliance rules and verify them with a single command. For instance, we can list which classes and methods are mandatory to use, which files you should have, and which roles are allowed and which are forbidden to share the application with. The rules are flexible and descriptive; all you need to do is define them in a YAML file:</p>\n<pre><code class=\"language-yaml\">\nclass_rules:\n  - name: &quot;Inherit code for the page from GitLabDataStreamlitInit&quot;\n    description: &quot;All Streamlit apps must inherit from GitLabDataStreamlitInit&quot;\n    severity: &quot;error&quot;\n    required: true\n    class_name: &quot;*&quot;\n    required_base_classes:\n      - &quot;GitLabDataStreamlitInit&quot;\n    required_methods:\n      - &quot;__init__&quot;\n      - &quot;set_page_layout&quot;\n      - &quot;setup_ui&quot;\n      - &quot;run&quot;\n\nfunction_rules:\n  - name: &quot;Main function required&quot;\n    description: &quot;Must have a main() function&quot;\n    severity: &quot;error&quot;\n    required: true\n    function_name: &quot;main&quot;\n\nimport_rules:\n  - name: &quot;Import GitLabDataStreamlitInit&quot;\n    description: &quot;Must import the mandatory base class&quot;\n    severity: &quot;error&quot;\n    required: true\n    module_name: &quot;gitlab_data_streamlit_init&quot;\n    required_items:\n      - &quot;GitLabDataStreamlitInit&quot;\n  - name: &quot;Import streamlit&quot;\n    description: &quot;Must import streamlit library&quot;\n    severity: &quot;error&quot;\n    required: true\n    module_name: &quot;streamlit&quot;\n\nfile_rules:\n  - name: &quot;Snowflake configuration required (snowflake.yml)&quot;\n    description: &quot;Each application must have a snowflake.yml configuration file&quot;\n    severity: &quot;error&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/snowflake.yml&quot;\n    base_path: &quot;&quot;\n  - name: &quot;Snowflake environment required (environment.yml)&quot;\n    description: &quot;Each application must have a environment.yml configuration file&quot;\n    severity: &quot;error&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/environment.yml&quot;\n    base_path: &quot;&quot;\n  - name: &quot;Share specification required (share.yml)&quot;\n    description: &quot;Each application must have a share.yml file&quot;\n    severity: &quot;warning&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/share.yml&quot;\n    base_path: &quot;&quot;\n  - name: &quot;README.md required (README.md)&quot;\n    description: &quot;Each application should have a README.md file with a proper documentation&quot;\n    severity: &quot;error&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/README.md&quot;\n    base_path: &quot;&quot;\n  - name: &quot;Starting point recommended (dashboard.py)&quot;\n    description: &quot;Each application must have a dashboard.py as a starting point&quot;\n    severity: &quot;warning&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/dashboard.py&quot;\n    base_path: &quot;&quot;\n\nsql_rules:\n  - name: &quot;SQL files must contain only SELECT statements&quot;\n    description: &quot;SQL files and SQL code in other files should only contain SELECT statements for data safety&quot;\n    severity: &quot;error&quot;\n    required: true\n    file_extensions: [&quot;.sql&quot;, &quot;.py&quot;]\n    select_only: true\n    forbidden_statements:\n      - ....\n    case_sensitive: false\n  - name: &quot;SQL queries should include proper SELECT statements&quot;\n    description: &quot;When SQL is present, it should contain proper SELECT statements&quot;\n    severity: &quot;warning&quot;\n    required: false\n    file_extensions: [&quot;.sql&quot;, &quot;.py&quot;]\n    required_statements:\n      - &quot;SELECT&quot;\n    case_sensitive: false\n\nshare_rules:\n  - name: &quot;Valid functional roles in share.yml&quot;\n    description: &quot;Share.yml files must contain only valid functional roles from the approved list&quot;\n    severity: &quot;error&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/share.yml&quot;\n    valid_roles:\n      - ...\n    safe_data_roles:\n      - ...\n  - name: &quot;Share.yml file format validation&quot;\n    description: &quot;Share.yml files must follow the correct YAML format structure&quot;\n    severity: &quot;error&quot;\n    required: true\n    file_pattern: &quot;**/applications/**/share.yml&quot;\n    required_keys:\n      - &quot;share&quot;\n    min_roles: 1\n    max_roles: 10\n</code></pre>\n<p>With one command running:</p>\n<pre><code class=\"language-bash\">\n╰─$ make streamlit-rules\n\n</code></pre>\n<p>We can verify all the rules we have created and validate that the developers (who are building a Streamlit application) are following the policy specified by the creators (who determine the policies and building blocks of the framework), and that all the building blocks are in the right place. This ensures consistent behavior across all Streamlit applications.</p>\n<pre><code class=\"language-yaml\">\n🔍 Running Streamlit compliance check...\n\n================================================================================\n\nCODE COMPLIANCE REPORT\n\n================================================================================\n\nGenerated: 2025-08-18 17:05:12\n\nFiles checked: 4\n\n\nSUMMARY:\n\n✅ Passed: 4\n\n❌ Failed: 0\n\nSuccess Rate: 100.0%\n\n\nAPPLICATION COMPLIANCE SUMMARY:\n\n📱 Total Applications Checked: 1\n\n⚠️ Applications with Issues: 0\n\n📊 File Compliance Rate: 100.0%\n\n\nDETAILED RESULTS BY APPLICATION:\n\n================================================================================\n\n✅ PASS APPLICATION: main_app\n\n------------------------------------------------------------\n\n📁 FILES ANALYZED (4):\n\n✅ dashboard.py\n\n📦 Classes: SnowflakeConnectionTester\n\n🔧 Functions: main\n\n📥 Imports: os, pwd, gitlab_data_streamlit_init, snowflake.snowpark.exceptions, streamlit\n\n\n✅ show_streamlit_apps.py\n\n📦 Classes: ShowStreamlitApps\n\n🔧 Functions: main\n\n📥 Imports: pandas, gitlab_data_streamlit_init, snowflake_session, streamlit\n\n\n✅ available_packages.py\n\n📦 Classes: AvailablePackages\n\n🔧 Functions: main\n\n📥 Imports: pandas, gitlab_data_streamlit_init, streamlit\n\n\n✅ share.yml\n\n👥 Share Roles: snowflake_analyst_safe\n\n\n📄 FILE COMPLIANCE FOR MAIN_APP:\n\n✅ Required files found:\n\n✓ snowflake.yml\n\n✓ environment.yml\n\n✓ share.yml\n\n✓ README.md\n\n✓ dashboard.py\n\n\nRULES CHECKED:\n\n----------------------------------------\n\nClass Rules (1):\n\n- Inherit code for the page from GitLabDataStreamlitInit (error)\n\n\nFunction Rules (1):\n\n- Main function required (error)\n\n\nImport Rules (2):\n\n- Import GitLabDataStreamlitInit (error)\n\n- Import streamlit (error)\n\n\nFile Rules (5):\n\n- Snowflake configuration required (snowflake.yml) (error)\n\n- Snowflake environment required (environment.yml) (error)\n\n- Share specification required (share.yml) (warning)\n\n- README.md required (README.md) (error)\n\n- Starting point recommended (dashboard.py) (warning)\n\n\nSQL Rules (2):\n\n- SQL files must contain only SELECT statements (error)\n\n🗄 SELECT-only mode enabled\n\n🚨 Forbidden: INSERT, UPDATE, DELETE, DROP, ALTER...\n\n- SQL queries should include proper SELECT statements (warning)\n\n\nShare Rules (2):\n\n- Valid functional roles in share.yml (error)\n\n👥 Valid roles: 15 roles defined\n\n🔒 Safe data roles: 11 roles\n\n- Share.yml file format validation (error)\n\n------------------------------------------------------------\n\n✅ Compliance check passed\n\n-----------------------------------------------------------\n\n</code></pre>\n<h2>Developer experience that works</h2>\n<p>Whether you prefer your favorite IDE, a web-based development environment, or Snowflake Snowsight, the experience remains consistent. The framework provides:</p>\n<ul>\n<li><strong>Template-driven development:</strong> New applications and pages are created through standardized templates, ensuring consistency and best practices from day one. No more scattered design and elements.</li>\n</ul>\n<pre><code class=\"language-yaml\">\n╰─$ make streamlit-new-app NAME=sales_dashboard\n\n🔧 Configuration Environment: TEST\n\n📝 Configuration File: config.yml\n\n📜 Config Loader Script: ./setup/get_config.sh\n\n🐍 Python Version: 3.12\n\n📁 Applications Directory: ./src/applications\n\n🗄 Database: ...\n\n📊 Schema: ...\n\n🏗 Stage: ...\n\n🏭 Warehouse: ...\n\n🆕 Creating new Streamlit app: sales_dashboard\n\nInitialized the new project in ./src/applications/sales_dashboard\n\n</code></pre>\n<ul>\n<li><strong>Poetry package management:</strong> All dependencies are managed through Poetry, creating isolated environments that won't disrupt your existing Python setup.</li>\n</ul>\n<pre><code class=\"language-toml\">\n[tool.poetry]\n\nname = &quot;GitLab Data Streamlit&quot;\n\nversion = &quot;0.1.1&quot;\n\ndescription = &quot;GitLab Data Team Streamlit project&quot;\n\nauthors = [&quot;GitLab Data Team &lt;*****@gitlab.com&gt;&quot;]\n\nreadme = &quot;README.md&quot;\n\n\n[tool.poetry.dependencies]\n\npython = &quot;&lt;3.13,&gt;=3.12&quot;\n\nsnowflake-snowpark-python = &quot;==1.32.0&quot;\n\nsnowflake-connector-python = {extras = [&quot;development&quot;, &quot;pandas&quot;, &quot;secure-local-storage&quot;], version = &quot;^3.15.0&quot;}\n\nstreamlit = &quot;==1.22.0&quot;\n\nwatchdog = &quot;^6.0.0&quot;\n\ntypes-toml = &quot;^0.10.8.20240310&quot;\n\npytest = &quot;==7.0.0&quot;\n\nblack = &quot;==25.1.0&quot;\n\nimportlib-metadata = &quot;==4.13.0&quot;\n\npyyaml = &quot;==6.0.2&quot;\n\npython-qualiter = &quot;*&quot;\n\nruff = &quot;^0.1.0&quot;\n\ntypes-pyyaml = &quot;^6.0.12.20250516&quot;\n\njinja2 = &quot;==3.1.6&quot;\n\n\n[build-system]\n\nrequires = [&quot;poetry-core&quot;]\n\nbuild-backend = &quot;poetry.core.masonry.api&quot;\n\n</code></pre>\n<ul>\n<li><strong>Multi-page application support:</strong> Creators can easily build complex applications with multiple pages and add new libraries as needed. Multi-page applications are part of the framework and a developer is focusing on the logic, not the design and structuring.</li>\n</ul>\n<p><img alt=\"Multipage application example (in Snowflake)\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760035999/at1q2xgmjthkrgju4okm.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;Multipage application example (in Snowflake)&lt;/i&gt;&lt;/center&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<ul>\n<li><strong>Seamless Snowflake integration:</strong> Built-in connectors and authentication handling for secure data access provide the same experience, whether in local development or directly in Snowflake.</li>\n</ul>\n<pre><code class=\"language-yaml\">\nmake streamlit-push-test APPLICATION_NAME=sales_dashboard\n\n📤 Deploying Streamlit app to test environment: sales_dashboard\n\n...\n\n------------------------------------------------------------------------------------------------------------\n\n🔗 Running share command for application: sales_dashboard\n\nRunning commands to grant shares\n\n🚀 Executing: snow streamlit share sales_dashboard with SOME_NICE_ROLE\n\n✅ Command executed successfully\n\n📊 Execution Summary: 1/1 commands succeeded\n\n</code></pre>\n<ul>\n<li>\n<p><strong>Comprehensive Makefile:</strong> All common commands are wrapped in simple Makefile commands, from local development to testing and deployment, including CI/CD pipelines.</p>\n</li>\n<li>\n<p><strong>Safe local development:</strong> Everything runs in isolated Poetry environments, protecting your system while providing production-like experiences.</p>\n</li>\n</ul>\n<p><img alt=\"Same experience despite the environment (example of the local development)\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760035999/phmubsb34hn2mfefjvqh.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;Same experience despite the environment (example of the local development)&lt;/i&gt;&lt;/center&gt;</p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<ul>\n<li><strong>Collaboration via code:</strong> All applications and components are wrapped up in one repository, which allows the entire organization to collaborate on the same resources and avoid double work and redundant setup.</li>\n</ul>\n<h2>How you can get started</h2>\n<p>If you're facing similar challenges with scattered Streamlit applications, here's how to begin and move quickly:</p>\n<ol>\n<li>\n<p><strong>Assess your current state:</strong> Inventory your existing applications and identify pain points.</p>\n</li>\n<li>\n<p><strong>Define your roles:</strong> Separate maintainer responsibilities from creator and end users' needs.</p>\n</li>\n<li>\n<p><strong>Start with templates:</strong> Create standardized application templates that enforce your security and compliance requirements.</p>\n</li>\n<li>\n<p><strong>Implement CI/CD:</strong> Automate your deployment pipeline to reduce manual errors and ensure consistency.</p>\n</li>\n</ol>\n<p><img alt=\"Deploy the application in Snowflake\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1760036003/mzge9s1fhkhnx38y1a3i.png\" /></p>\n<p>&lt;p&gt;&lt;/p&gt;</p>\n<p>&lt;center&gt;&lt;i&gt;The application deployed in Snowflake&lt;/i&gt;&lt;/center&gt;</p>\n<h2>The bigger picture</h2>\n<p>This framework represents more than just a technical solution — it's a paradigm shift toward treating data applications as first-class citizens in your enterprise (data) architecture.</p>\n<p>By providing structure without sacrificing flexibility, the GitLab Data team created an environment where anyone in the company with minimal technical knowledge can innovate rapidly while maintaining the highest standards of security and compliance.</p>\n<h3>What's next?</h3>\n<p>We're continuing to enhance the framework based on user feedback and emerging needs. Future improvements include expanded template libraries, enhanced monitoring capabilities, more flexibility, and a smoother user experience.</p>\n<p><strong>The goal isn't just to solve today's problems, but to create a foundation that scales with your organization's growing data application needs.</strong></p>\n<h2>Summary</h2>\n<p><a href=\"https://handbook.gitlab.com/handbook/enterprise-data/\">The GitLab Data Team</a> transformed dozens of scattered, insecure Streamlit applications with no standardization into a unified, enterprise-grade framework that separates roles cleanly:</p>\n<ol>\n<li>\n<p><strong>Maintainers</strong> handle infrastructure and security.</p>\n</li>\n<li>\n<p><strong>Creators</strong> focus on building applications without deployment headaches.</p>\n</li>\n<li>\n<p><strong>Viewers</strong> access polished, compliant apps.</p>\n</li>\n</ol>\n<p>And we used these building blocks:</p>\n<ol>\n<li>\n<p>Automated <strong>CI/CD</strong> pipelines</p>\n</li>\n<li>\n<p>Fully collaborative and versioned code in <strong>git</strong></p>\n</li>\n<li>\n<p><strong>Template-based</strong> development</p>\n</li>\n<li>\n<p>Built-in <strong>security</strong> compliance, testing</p>\n</li>\n<li>\n<p><strong>Poetry-managed</strong> environments</p>\n</li>\n</ol>\n<p>We eliminated the maintenance nightmare while enabling rapid innovation — proving that you can have both structure and flexibility when you treat data applications as first-class enterprise assets rather than throwaway prototypes.</p>",
      "timestamp": 1761396314.2417557,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Optimize GitLab object storage for scale and performance",
      "link": "https://about.gitlab.com/blog/optimize-gitlab-object-storage-for-scale-and-performance/",
      "published": "2025-10-08T00:00:00.000Z",
      "summary": "<p>Managing GitLab at scale requires strategic object storage configuration.</p>\n<p>Here's how to configure object storage for maximum performance, security,</p>\n<p>and reliability across your GitLab components.</p>\n<h2>Use consolidated form for GitLab components</h2>\n<p>For artifacts, LFS, uploads, packages, and other GitLab data, eliminate credential duplication with the consolidated form:</p>\n<pre><code>gitlab_rails['object_store']['enabled'] = true\n\ngitlab_rails['object_store']['connection'] = {\n  'provider' =&gt; 'AWS',\n  'region' =&gt; 'us-east-1',\n  'use_iam_profile' =&gt; true\n}\n\ngitlab_rails['object_store']['objects']['artifacts']['bucket'] = 'gitlab-artifacts'\n\ngitlab_rails['object_store']['objects']['lfs']['bucket'] = 'gitlab-lfs'\n\n# ... additional buckets for each object type\n\n</code></pre>\n<p>This reduces complexity while enabling encrypted S3 buckets and proper Content-MD5 headers.</p>\n<h2>Configure container registry separately</h2>\n<p>The container registry requires its own configuration since it doesn't support the consolidated form:</p>\n<pre><code>registry['storage'] = {\n  's3_v2' =&gt; {  # Use the new v2 driver\n    'bucket' =&gt; 'gitlab-registry',\n    'region' =&gt; 'us-east-1',\n    # Omit access keys to use IAM roles\n  }\n}\n\n</code></pre>\n<p><strong>Note:</strong> The s3_v1 driver is deprecated and will be removed in GitLab 19.0. Migrate to s3_v2 for better performance and reliability.</p>\n<h2>Disable proxy download for performance</h2>\n<p>Set <code>proxy_download</code> to <strong>false</strong> (default) for direct downloads:</p>\n<pre><code># For GitLab objects - can be set globally\n\ngitlab_rails['object_store']['proxy_download'] = false\n\n# Or configure per bucket for granular control\n\ngitlab_rails['object_store']['objects']['artifacts']['proxy_download'] = false\n\ngitlab_rails['object_store']['objects']['lfs']['proxy_download'] = false\n\ngitlab_rails['object_store']['objects']['uploads']['proxy_download'] = true  # Example: keep proxy for uploads\n\n# Container registry defaults to redirect mode (direct downloads)\n\n# Only disable if your environment requires it:\n\nregistry['storage']['redirect']['disable'] = false  # Keep as false\n\n</code></pre>\n<p><strong>Important:</strong> The <code>proxy_download</code> option can be configured globally at the object-store level or individually per bucket. This gives you flexibility to optimize based on your specific use case — for example, you might want direct downloads for large artifacts and LFS files, but proxy smaller uploads through GitLab for additional security controls.</p>\n<p>This dramatically reduces server load and egress costs by letting clients download directly from object storage.</p>\n<h2>Choose identity-based authentication</h2>\n<p><strong>AWS:</strong> Use IAM roles instead of access keys:</p>\n<pre><code># GitLab objects\n\ngitlab_rails['object_store']['connection'] = {\n  'provider' =&gt; 'AWS',\n  'use_iam_profile' =&gt; true\n}\n\n# Container registry\n\nregistry['storage'] = {\n  's3_v2' =&gt; {\n    'bucket' =&gt; 'gitlab-registry',\n    'region' =&gt; 'us-east-1'\n    # No access keys = IAM role authentication\n  }\n}\n\n</code></pre>\n<p><strong>Google Cloud Platform:</strong> Enable application default credentials:</p>\n<pre><code>\ngitlab_rails['object_store']['connection'] = {\n  'provider' =&gt; 'Google',\n  'google_application_default' =&gt; true\n}\n\n</code></pre>\n<p><strong>Azure:</strong> Use workload identities by omitting storage access keys.</p>\n<h2>Add encryption layers</h2>\n<p>Enable server-side encryption for additional security:</p>\n<pre><code># GitLab objects\n\ngitlab_rails['object_store']['storage_options'] = {\n  'server_side_encryption' =&gt; 'AES256'\n}\n\n# Container registry\n\nregistry['storage'] = {\n  's3_v2' =&gt; {\n    'bucket' =&gt; 'gitlab-registry',\n    'encrypt' =&gt; true\n  }\n}\n\n</code></pre>\n<p>For AWS KMS encryption, specify the key ARN in <code>server_side_encryption_kms_key_id</code>.</p>\n<h2>Use separate buckets for organization</h2>\n<p>Create dedicated buckets for each component:</p>\n<ul>\n<li>\n<p><strong>gitlab-artifacts</strong> - CI/CD job artifacts</p>\n</li>\n<li>\n<p><strong>gitlab-lfs</strong> - Git LFS objects</p>\n</li>\n<li>\n<p><strong>gitlab-uploads</strong> - User uploads</p>\n</li>\n<li>\n<p><strong>gitlab-packages</strong> - Package registry</p>\n</li>\n<li>\n<p><strong>gitlab-registry</strong> - Container images</p>\n</li>\n</ul>\n<p>This isolation improves security, enables granular access controls, and simplifies cost tracking.</p>\n<h2>Key configuration differences</h2>\n<table>\n<thead>\n<tr>\n<th>Component</th>\n<th>Consolidated Form</th>\n<th>Identity Auth</th>\n<th>Encryption</th>\n<th>Direct Downloads</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Artifacts, LFS, Packages</td>\n<td>✅ Supported</td>\n<td>✅ use_iam_profile</td>\n<td>✅ storage_options</td>\n<td>✅ proxy_download: false</td>\n</tr>\n<tr>\n<td>Container Registry</td>\n<td>❌ Separate config</td>\n<td>✅ Omit access keys</td>\n<td>✅ encrypt: true</td>\n<td>✅ redirect enabled by default</td>\n</tr>\n</tbody>\n</table>\n<h2>Migration path</h2>\n<ol>\n<li>\n<p><strong>Start with GitLab objects:</strong> Use the consolidated form for immediate complexity reduction.</p>\n</li>\n<li>\n<p><strong>Configure registry separately:</strong> Use s3_v2 driver with IAM authentication.</p>\n</li>\n<li>\n<p><strong>Enable encryption:</strong> Add server-side encryption for both components.</p>\n</li>\n<li>\n<p><strong>Optimize performance:</strong> Ensure direct downloads are enabled with appropriate <code>proxy_download</code> settings.</p>\n</li>\n<li>\n<p><strong>Set up lifecycle policies:</strong> Configure S3 lifecycle rules to clean up incomplete multipart uploads.</p>\n</li>\n</ol>\n<h2>Additional resources</h2>\n<p>For a complete AWS S3 configuration example, see the <a href=\"https://docs.gitlab.com/administration/object_storage/#aws-s3\">GitLab documentation on AWS S3 object storage setup</a>.</p>\n<p>For more details on configuring proxy_download parameters per bucket, refer to the <a href=\"https://docs.gitlab.com/administration/object_storage/#configure-the-parameters-of-each-object\">GitLab object storage configuration documentation</a>.</p>\n<p><em>These configurations will scale with your growth while maintaining security and performance. The separation between GitLab object storage and container registry configurations reflects their different underlying architectures, but both benefit from the same optimization principles.</em></p>",
      "timestamp": 1761396314.2417588,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Streamline enterprise artifact management with GitLab",
      "link": "https://about.gitlab.com/blog/streamline-enterprise-artifact-management-with-gitlab/",
      "published": "2025-10-08T00:00:00.000Z",
      "summary": "<p>For the past six years, I've worked on artifact management at GitLab and have had hundreds of conversations with platform engineers trying to solve the same challenge: managing artifacts when they've become a sprawling, expensive mess. What started as simple Docker registries and Maven repositories has evolved into a complex web of tools, policies, and operational overhead that's consuming more time and budget than anyone anticipated.</p>\n<p>I recently spoke with a platform engineer at a Fortune 500 company who told me, &quot;I spend more time managing artifact repositories than I do on actual platform improvements.&quot; That conversation reminded me why we need an honest discussion about the real costs of fragmented artifact management — and what platform teams can realistically do about it. This article will help you better understand the problem and how GitLab can help you solve it through strategic consolidation.</p>\n<h2>Real-world impact: The numbers</h2>\n<p>Based on data from our customers and industry research, fragmented artifact management typically results in the following costs for a midsize organization (500+ developers):</p>\n<ul>\n<li><strong>Licensing:</strong> $50,000-200,000 annually across multiple tools</li>\n<li><strong>Operational overhead:</strong> 2-3 FTE's equivalent time spent on artifact management tasks</li>\n<li><strong>Storage inefficiency:</strong> 20%-30% higher storage costs due to duplication and poor lifecycle management</li>\n<li><strong>Developer productivity loss:</strong> 15-20 minutes daily per developer due to artifact-related friction</li>\n</ul>\n<p>For large enterprises, these numbers multiply significantly. One customer calculated they were spending over $500,000 annually just on the operational overhead of managing seven different artifact storage systems.</p>\n<p>The hidden costs compound daily:</p>\n<p><strong>Time multiplication:</strong> Every lifecycle policy, security rule, or access control change must be implemented across multiple systems. What should be a 15-minute configuration becomes hours of work.</p>\n<p><strong>Security gap risks:</strong> Managing security policies across disparate systems creates blind spots. Vulnerability scanning, access controls, and audit trails become fragmented.</p>\n<p><strong>Context switching tax:</strong> Developers lose productivity when they can't find artifacts or need to remember which system stores what.</p>\n<h2>The multiplication problem</h2>\n<p>The artifact management landscape has exploded. Where teams once managed a single Maven repository, today's platform engineers juggle:</p>\n<ul>\n<li>Container registries (Docker Hub, ECR, GCR, Azure ACR)</li>\n<li>Package repositories (JFrog Artifactory, Sonatype Nexus)</li>\n<li>Language-specific registries (npm, PyPI, NuGet, Conan)</li>\n<li>Infrastructure artifacts (Terraform modules, Helm charts)</li>\n<li>ML model registries (MLflow, Weights &amp; Biases)</li>\n</ul>\n<p>Each tool comes with its own authentication system, lifecycle policies, security scanning, and operational requirements. For organizations with hundreds or thousands of projects, this creates an exponential management burden.</p>\n<h2>GitLab's strategic approach: Depth over breadth</h2>\n<p>When we started building GitLab's artifact management capabilities six years ago, we faced a classic product decision: support every artifact format imaginable or go deep on the formats that matter most to enterprise teams. We chose depth, and that decision has shaped everything we've built since.</p>\n<h3>Our core focus areas</h3>\n<p>Instead of building shallow support for 20+ formats, we committed to delivering enterprise-grade capabilities for a strategic set:</p>\n<ul>\n<li><strong>Maven</strong> (Java ecosystem)</li>\n<li><strong>npm</strong> (JavaScript/Node.js)</li>\n<li><strong>Docker/OCI</strong> (container images)</li>\n<li><strong>PyPI</strong> (Python packages)</li>\n<li><strong>NuGet</strong> (C#/.NET packages)</li>\n<li><strong>Generic packages</strong> (any binary artifact)</li>\n<li><strong>Terraform modules</strong> (infrastructure as code)</li>\n</ul>\n<p>These seven formats account for approximately 80% of artifact usage in enterprise environments, based on our customer data.</p>\n<h3>What 'enterprise-grade' actually means</h3>\n<p>By focusing on fewer formats, we can deliver capabilities that work in production environments with hundreds of developers, terabytes of artifacts, and strict compliance requirements:</p>\n<p><strong><a href=\"https://docs.gitlab.com/user/packages/virtual_registry/\">Virtual registries</a>:</strong> Proxy and cache upstream dependencies for reliable builds and supply chain control. Currently production-ready for Maven, with npm and Docker coming in early 2026.</p>\n<p><strong>Lifecycle management</strong>: Automated cleanup policies that prevent storage costs from spiraling while preserving artifacts for compliance. Available at the project level today, organization-level policies planned for mid-2026.</p>\n<p><strong><a href=\"https://docs.gitlab.com/user/application_security/\">Security integration</a>:</strong> Built-in vulnerability scanning, dependency analysis, and policy enforcement. Our upcoming Dependency Firewall (planned for late 2026) will provide supply chain security control across all formats.</p>\n<p><strong><a href=\"https://docs.gitlab.com/ci/\">Deep CI/CD integration</a>:</strong> Complete traceability from source commit to deployed artifact, with build provenance and security scan results embedded in artifact metadata.</p>\n<h2>Current capabilities: Battle-tested features</h2>\n<p><strong>Maven virtual registries:</strong> Our flagship enterprise capability, proven with 15+ enterprise customers. Most complete <a href=\"https://about.gitlab.com/blog/tutorial-secure-and-optimize-your-maven-repository-in-gitlab/\">Maven virtual registry</a> setup within two months, with minimal GitLab support required.</p>\n<p><strong>Locally-hosted repositories:</strong> All seven supported formats offer complete upload, download, versioning, and access control capabilities supporting critical workloads at organizations with thousands of developers.</p>\n<p><strong>Protected artifacts:</strong> Comprehensive protection preventing unauthorized modifications, supporting fine-grained access controls across all formats.</p>\n<p><strong>Project-level lifecycle policies:</strong> Automated cleanup and retention policies for storage cost control and compliance.</p>\n<h3>Performance and scale characteristics</h3>\n<p>Based on current production deployments:</p>\n<ul>\n<li><strong>Throughput:</strong> 10,000+ artifact downloads per minute/per instance</li>\n<li><strong>Storage:</strong> Customers successfully managing 50+ TB of artifacts</li>\n<li><strong>Concurrent users:</strong> 1,000+ developers accessing artifacts simultaneously</li>\n<li><strong>Availability:</strong> 99.99% uptime for <a href=\"http://GitLab.com\">GitLab.com</a> for more than 2 years</li>\n</ul>\n<h2>Strategic roadmap: Next 18 months</h2>\n<h3>Q1 2026</h3>\n<ul>\n<li><strong>npm virtual registries:</strong> Enterprise proxy/cache for JavaScript packages</li>\n<li><strong>Docker virtual registries:</strong> Container registry proxy capabilities</li>\n</ul>\n<h3>Q2 2026</h3>\n<ul>\n<li><strong>Organization-level lifecycle policies (Beta):</strong> Centralized cleanup policies with project overrides</li>\n<li><strong>NuGet virtual registries (Beta):</strong> .NET package proxy support</li>\n<li><strong>PyPI virtual registries (Beta):</strong> Completing virtual registry support for Python</li>\n</ul>\n<h3>Q3 2026</h3>\n<ul>\n<li><strong>Advanced Analytics Dashboard:</strong> Storage optimization and usage insights</li>\n</ul>\n<h3>Q4 2026</h3>\n<ul>\n<li><strong>Dependency Firewall (Beta):</strong> Supply chain security control for all artifact types</li>\n</ul>\n<h2>When to choose GitLab: Decision framework</h2>\n<p><strong>GitLab is likely the right choice if:</strong></p>\n<ul>\n<li>80%+ of your artifacts are in our seven supported formats</li>\n<li>You're already using GitLab for source code or CI/CD</li>\n<li>You value integrated workflows over standalone feature richness</li>\n<li>You want to reduce the operational complexity of managing multiple systems</li>\n<li>You need complete traceability from source to deployment</li>\n</ul>\n<h3>Migration considerations</h3>\n<p><strong>Typical timeline:</strong> 2-4 months for complete migration from Artifactory/Nexus</p>\n<p><strong>Common challenges:</strong> Virtual registry configuration, access control mapping, and developer workflow changes</p>\n<p><strong>Success factors:</strong> Phased approach, comprehensive testing, and developer training</p>\n<p>Most successful migrations follow this pattern:</p>\n<ol>\n<li><strong>Assessment</strong> (2-4 weeks): Catalog current artifacts and usage patterns</li>\n<li><strong>Pilot</strong> (4-6 weeks): Migrate one team/project end-to-end</li>\n<li><strong>Rollout</strong> (6-12 weeks): Gradual migration with parallel systems</li>\n<li><strong>Optimization</strong> (ongoing): Implement advanced features and policies</li>\n</ol>\n<h2>Better artifact management can start today</h2>\n<p>GitLab's artifact management isn't trying to be everything to everyone. We've made strategic trade-offs: deep capabilities for core enterprise formats rather than shallow support for everything.</p>\n<p>If your artifact needs align with our supported formats and you value integrated workflows, we can significantly reduce your operational overhead while improving developer experience.</p>\n<p>Our goal is to help you make informed decisions about your artifact management strategy with a clear understanding of capabilities and our roadmap.</p>\n<p>Please reach out to me at <a href=\"mailto:trizzi@gitlab.com\">trizzi@gitlab.com</a> to learn more about GitLab artifact management. I can discuss specific requirements and connect you with our technical team for a deeper evaluation.</p>\n<p><em>This blog contains information related to upcoming products, features, and functionality. It is important to note that the information in this blog post is for informational purposes only. Please do not rely on this information for purchasing or planning purposes. As with all projects, the items mentioned in this blog and linked pages are subject to change or delay. The development, release, and timing of any products, features, or functionality remain at the sole discretion of GitLab.</em></p>",
      "timestamp": 1761396314.2417634,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "Atlassian ending Data Center as GitLab maintains deployment choice",
      "link": "https://about.gitlab.com/blog/atlassian-ending-data-center-as-gitlab-maintains-deployment-choice/",
      "published": "2025-10-07T00:00:00.000Z",
      "summary": "<p>Change is never easy, especially when it's not your choice. Atlassian's announcement that <a href=\"https://www.atlassian.com/blog/announcements/atlassian-ascend\">all Data Center products will reach end-of-life by March 28, 2029</a>, means thousands of organizations must now reconsider their DevSecOps deployment and infrastructure. But you don't have to settle for deployment options that don't fit your needs. GitLab maintains your freedom to choose — whether you need self-managed for compliance, cloud for convenience, or hybrid for flexibility — all within a single AI-powered DevSecOps platform that respects your requirements.</p>\n<p>While other vendors force migrations to cloud-only architectures, GitLab remains committed to supporting the deployment choices that match your business needs. Whether you're managing sensitive government data, operating in air-gapped environments, or simply prefer the control of self-managed deployments, we understand that one size doesn't fit all.</p>\n<h2>The cloud isn't the answer for everyone</h2>\n<p>For the many companies that invested millions of dollars in Data Center deployments, including those that migrated to Data Center <a href=\"https://about.gitlab.com/blog/atlassian-server-ending-move-to-a-single-devsecops-platform/\">after its Server products were discontinued</a>, this announcement represents more than a product sunset. It signals a fundamental shift away from customer-centric architecture choices, forcing enterprises into difficult positions: accept a deployment model that doesn't fit their needs, or find a vendor that respects their requirements.</p>\n<p>Many of the organizations requiring self-managed deployments represent some of the world's most important organizations: healthcare systems protecting patient data, financial institutions managing trillions in assets, government agencies safeguarding national security, and defense contractors operating in air-gapped environments.</p>\n<p>These organizations don't choose self-managed deployments for convenience; they choose them for compliance, security, and sovereignty requirements that cloud-only architectures simply cannot meet. Organizations operating in closed environments with restricted or no internet access aren't exceptions — they represent a significant portion of enterprise customers across various industries.</p>\n<p><img alt=\"GitLab vs. Atlassian comparison table\" src=\"https://res.cloudinary.com/about-gitlab-com/image/upload/v1759928476/ynl7wwmkh5xyqhszv46m.jpg\" /></p>\n<h2>The real cost of forced cloud migration goes beyond dollars</h2>\n<p>While cloud-only vendors frame mandatory migrations as &quot;upgrades,&quot; organizations face substantial challenges beyond simple financial costs:</p>\n<ul>\n<li>\n<p><strong>Lost integration capabilities:</strong> Years of custom integrations with legacy systems, carefully crafted workflows, and enterprise-specific automations become obsolete. Organizations with deep integrations to legacy systems often find cloud migration technically infeasible.</p>\n</li>\n<li>\n<p><strong>Regulatory constraints:</strong> For organizations in regulated industries, cloud migration isn't just complex — it's often not permitted. Data residency requirements, air-gapped environments, and strict regulatory frameworks don't bend to vendor preferences. The absence of single-tenant solutions in many cloud-only approaches creates insurmountable compliance barriers.</p>\n</li>\n<li>\n<p><strong>Productivity impacts:</strong> Cloud-only architectures often require juggling multiple products: separate tools for planning, code management, CI/CD, and documentation. Each tool means another context switch, another integration to maintain, another potential point of failure. GitLab research shows <a href=\"https://about.gitlab.com/developer-survey/\">30% of developers spend at least 50% of their job maintaining and/or integrating their DevSecOps toolchain</a>. Fragmented architectures exacerbate this challenge rather than solving it.</p>\n</li>\n</ul>\n<h2>GitLab offers choice, commitment, and consolidation</h2>\n<p>Enterprise customers deserve a trustworthy technology partner. That's why we've committed to supporting a range of deployment options — whether you need on-premises for compliance, hybrid for flexibility, or cloud for convenience, the choice remains yours. That commitment continues with <a href=\"https://about.gitlab.com/gitlab-duo/\">GitLab Duo</a>, our AI solution that supports developers at every stage of their workflow.</p>\n<p>But we offer more than just deployment flexibility. While other vendors might force you to cobble together their products into a fragmented toolchain, GitLab provides everything in a <strong>comprehensive AI-native DevSecOps platform</strong>. Source code management, CI/CD, security scanning, Agile planning, and documentation are all managed within a single application and a single vendor relationship.</p>\n<p>This isn't theoretical. When <a href=\"https://about.gitlab.com/customers/airbus/\">Airbus</a> and <a href=\"https://about.gitlab.com/customers/iron-mountain/\">Iron Mountain</a> evaluated their existing fragmented toolchains, they consistently identified challenges: poor user experience, missing functionalities like built-in security scanning and review apps, and management complexity from plugin troubleshooting. <strong>These aren't minor challenges; they're major blockers for modern software delivery.</strong></p>\n<h2>Your migration path: Simpler than you think</h2>\n<p>We've helped thousands of organizations migrate from other vendors, and we've built the tools and expertise to make your transition smooth:</p>\n<ul>\n<li>\n<p><strong>Automated migration tools:</strong> Our <a href=\"https://docs.gitlab.com/user/project/import/bitbucket_server/\">Bitbucket Server importer</a> brings over repositories, pull requests, comments, and even Large File Storage (LFS) objects. For Jira, our <a href=\"https://docs.gitlab.com/user/project/import/jira/\">built-in importer</a> handles issues, descriptions, and labels, with professional services available for complex migrations.</p>\n</li>\n<li>\n<p><strong>Proven at scale:</strong> A 500 GiB repository with 13,000 pull requests, 10,000 branches, and 7,000 tags is likely to <a href=\"https://docs.gitlab.com/user/project/import/bitbucket_server/\">take just 8 hours to migrate</a> from Bitbucket to GitLab using parallel processing.</p>\n</li>\n<li>\n<p><strong>Immediate ROI:</strong> A <a href=\"https://about.gitlab.com/resources/study-forrester-tei-gitlab-ultimate/\">Forrester Consulting Total Economic Impact™ study commissioned by GitLab</a> found that investing in GitLab Ultimate confirms these benefits translate to real bottom-line impact, with a three-year 483% ROI, 5x time saved in security related activities, and 25% savings in software toolchain costs.</p>\n</li>\n</ul>\n<h2>Start your journey to a unified DevSecOps platform</h2>\n<p>Forward-thinking organizations aren't waiting for vendor-mandated deadlines. They're evaluating alternatives now, while they have time to migrate thoughtfully to platforms that protect their investments and deliver on promises.</p>\n<p>Organizations invest in self-managed deployments because they need control, compliance, and customization. When vendors deprecate these capabilities, they remove not just features but the fundamental ability to choose environments matching business requirements.</p>\n<p>Modern DevSecOps platforms should offer complete functionality that respects deployment needs, consolidates toolchains, and accelerates software delivery, without forcing compromises on security or data sovereignty.</p>\n<p><a href=\"https://about.gitlab.com/sales/\">Talk to our sales team</a> today about your migration options, or explore our <a href=\"https://about.gitlab.com/move-to-gitlab-from-atlassian/\">comprehensive migration resources</a> to see how thousands of organizations have already made the switch.</p>\n<p>You also can <a href=\"https://about.gitlab.com/free-trial/devsecops/\">try GitLab Ultimate with GitLab Duo Enterprise</a> for free for 30 days to see what a unified DevSecOps platform can do for your organization.</p>",
      "timestamp": 1761396314.2417665,
      "translated": false
    },
    {
      "feed_name": "GitLab Kubernetes Blog",
      "source_language": "en",
      "title": "How GitLab transforms embedded systems testing cycles",
      "link": "https://about.gitlab.com/blog/how-gitlab-transforms-embedded-systems-testing-cycles/",
      "published": "2025-10-02T00:00:00.000Z",
      "summary": "<p>Embedded developers know this cycle well: write code, wait days or weeks to test on a hardware test bench, discover bugs, fix them, then wait again. Virtual testing environments promise faster feedback, but most implementations create new problems such as environment sprawl and escalating costs.</p>\n<p>GitLab's managed lifecycle environments solve these virtual testing challenges. Through virtual environment automation, GitLab accelerates embedded development cycles without the configuration complexity and cost overruns.</p>\n<h2>Virtual testing challenges</h2>\n<p>Virtual testing environments — simulated hardware setups that replicate embedded system behavior and real-world conditions — offer the potential to reduce hardware bottlenecks. Teams can test firmware on simulated processors, run model-in-the-loop (MIL) tests in MATLAB/Simulink, or verify software on virtual embedded systems without waiting for physical hardware access.</p>\n<p>However, teams often implement virtual environments using one of two common approaches, both of which create unsustainable challenges.</p>\n<h3>Flawed approach 1: Pipeline lifecycle environments</h3>\n<p><strong>Pipeline lifecycle environments re-create the entire testing setup for every CI/CD run.</strong> When code changes trigger your CI/CD pipeline, the system provisions infrastructure, installs software simulations, and configures everything from scratch before running tests.</p>\n<p>This approach works for simple scenarios but becomes inefficient as complexity rises. Consider software-in-the-loop (SIL) testing in a complex virtual environment, for example. Each pipeline run requires complete environment re-creation, including virtual processor provisioning, toolchain installations, and target configurations. <strong>These processes can eat up considerable time.</strong></p>\n<p>Moreover, as embedded systems require more sophisticated virtual hardware configurations, the provisioning <strong>costs quickly add up.</strong></p>\n<p>To avoid these rebuild costs and delays, many teams turn to long-lived environments that persist between test runs. But they come with downsides.</p>\n<h3>Flawed approach 2: Long-lived environments</h3>\n<p><strong>Long-lived environments persist indefinitely</strong> to avoid constant rebuilding. Developers request these environments from IT or DevOps teams, wait for approval, then need someone to manually provision the infrastructure. These environments are then tied to individual developers/teams rather than specific code changes, and they support ongoing development work across multiple projects.</p>\n<p>While this eliminates rebuild overhead, <strong>it creates environment sprawl.</strong> Environments accumulate without a clear termination date. Infrastructure costs climb as environments consume resources indefinitely.</p>\n<p>Long-lived environments also suffer from <strong>&quot;config rot&quot;</strong> — environments retain settings, cached data, or software versions from previous tests that can affect subsequent results. A test that should fail ends up passing due to the residue of previous testing.</p>\n<p>Ultimately, managing long-lived environments is a manual process that slows development velocity and increases operational overhead.</p>\n<p><strong>GitLab offers a third approach</strong> through “managed lifecycle environments.” This approach captures the benefits of both long-lived and pipeline lifecycle environments while avoiding the drawbacks.</p>\n<h2>Solution: Managed lifecycle environments</h2>\n<p>GitLab's managed lifecycle environments tie virtual testing setups to merge requests (<a href=\"https://docs.gitlab.com/user/project/merge_requests/\">MRs</a>) rather than pipeline runs or individual developers. You can also think of them as “managed MR test environments.” When you create an MR for a new feature, GitLab automatically orchestrates the provisioning of necessary virtual testing environments. These environments persist throughout the entire feature development process.</p>\n<h3>Key benefits</h3>\n<ul>\n<li>\n<p><strong>Persistent environments without rebuilding:</strong> The same virtual environment handles multiple pipeline runs as you iterate on your feature. Whether you're running MIL tests in MATLAB/Simulink or SIL tests on specialized embedded processors, the environment remains configured and ready.</p>\n</li>\n<li>\n<p><strong>Automatic cleanup:</strong> When you merge your feature and delete the branch, GitLab automatically triggers environment cleanup, eliminating environment sprawl.</p>\n</li>\n<li>\n<p><strong>Single source of truth:</strong> The MR records all build results, test outcomes, and environment metadata in one location. Team members can track progress and collaborate without shuffling between different tools or spreadsheets.</p>\n</li>\n</ul>\n<p>Watch this overview video to see how managed lifecycle environments work in practice:</p>\n<p>&lt;!-- blank line --&gt;\n&lt;figure class=&quot;video_container&quot;&gt;\n&lt;iframe src=&quot;https://www.youtube.com/embed/9tfyVPK5DuI?si=Kj_xXNo02bnFBDhy&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;\n&lt;/figure&gt;\n&lt;!-- blank line --&gt;</p>\n<p>GitLab automates the entire testing workflow. Each time you run firmware tests, GitLab orchestrates testing in the appropriate virtual environment, records results, and provides full visibility into every pipeline run. This approach transforms complex virtual testing from a manual, error-prone process into automated, reliable workflows.</p>\n<p><strong>The result:</strong> Teams get reusable environments without runaway costs. And they increase efficiency while maintaining clean, isolated testing setups for each feature.</p>\n<p>See a demonstration of managed lifecycle environments for testing firmware on virtual hardware:</p>\n<p>&lt;!-- blank line --&gt;\n&lt;figure class=&quot;video_container&quot;&gt;\n&lt;iframe src=&quot;https://www.youtube.com/embed/iWdY-kTlpH4?si=D6rpoulr9sv6Sl6E&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;\n&lt;/figure&gt;\n&lt;!-- blank line --&gt;</p>\n<h2>Business impact</h2>\n<p>GitLab's managed lifecycle environments deliver measurable improvements across embedded development workflows. Teams running MIL testing in MATLAB/Simulink and SIL testing on specialized processors like Infineon AURIX or BlackBerry QNX systems no longer face the tradeoff between constant environment rebuilds or uncontrolled environment sprawl. Instead, these complex virtual testing setups persist throughout feature development while automatically cleaning up when complete, enabling:</p>\n<ul>\n<li>Faster product development cycles</li>\n<li>Shorter time-to-market</li>\n<li>Lower infrastructure costs</li>\n<li>Higher quality assurance</li>\n</ul>\n<h2>Start transforming virtual testing today</h2>\n<p><a href=\"https://learn.gitlab.com/embedded-en/whitepaper-unlocking-agility-embedded-development\"><strong>Download “Unlocking agility and avoiding runaway costs in embedded development”</strong></a> for a deeper exploration of managed lifecycle environments and learn how to accelerate embedded development workflows dramatically.</p>",
      "timestamp": 1761396314.2417698,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Image and audio models from fal now available on DigitalOcean",
      "link": "https://www.digitalocean.com/blog/fal-ai-image-models-gradient-ai-platform",
      "published": "2025-10-23T12:30:00.022Z",
      "summary": "<p>We’re excited to announce the launch of four multimodal AI models from <a href=\"http://fal.ai\" rel=\"ugc nofollow noopener\" target=\"_blank\">fal</a> on the <a href=\"https://www.digitalocean.com/products/gradient/platform\">DigitalOcean Gradient™ AI Platform</a>, now available in public preview through <a href=\"https://docs.digitalocean.com/products/gradient-ai-platform/how-to/use-serverless-inference/\" rel=\"ugc nofollow noopener\" target=\"_blank\">Serverless Inference</a>. These models allow you to generate images and audio directly via API, without worrying about infrastructure, scaling, or vendor management. With this release, building AI-powered applications that include visual and audio content is easier than ever.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"explore-the-new-models\"><a href=\"https://www.digitalocean.com/blog.atom#explore-the-new-models\">Explore the new models</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#explore-the-new-models\"></a></h2>\n\n<p>The fal models, now in public preview, cover a variety of modalities, enabling you to experiment, prototype, and deploy multimodal AI features quickly:</p>\n<p><strong>Image generation:</strong></p>\n<ul>\n<li>\n<p><strong>Stable Diffusion XL fast</strong> (<code>fal-ai/fast-sdxl</code>) – High-resolution image generation</p>\n</li>\n<li>\n<p><strong>FLUX.1 (schnell)</strong> (<code>fal-ai/flux/schnell</code>) – Fast image generation for quick prototyping</p>\n</li>\n</ul>\n<p><strong>Audio generation:</strong></p>\n<ul>\n<li>\n<p><strong>Stable Audio</strong> (<code>fal-ai/stable-audio-25/text-to-audio</code>) – Convert text into natural-sounding audio</p>\n</li>\n<li>\n<p><strong>ElevenLabs TTS Multilingual v2 9</strong> (<code>fal-ai/elevenlabs/tts/multilingual-v2</code>) – Multilingual text-to-speech</p>\n</li>\n</ul>\n<p>These models are available via Serverless Inference, letting you generate images and audio through the same simple API-driven workflow you already use on Gradient AI Platform.</p>\n<p><img alt=\"image alt text\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/002Blog/EngineeringBlogImages_Grace/ImageGenerationExample-ezgif.com-video-to-gif-converter.gif\" /></p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"try-it-out\"><a href=\"https://www.digitalocean.com/blog.atom#try-it-out\">Try it out</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#try-it-out\"></a></h2>\n\n<p>You can start using these models through the <a href=\"https://docs.digitalocean.com/products/gradient-ai-platform/how-to/use-serverless-inference/\" rel=\"ugc nofollow noopener\" target=\"_blank\">Serverless Inference API</a> (<code>https://inference.do-ai.run</code>) after <a href=\"https://cloud.digitalocean.com/account/feature-preview?feature=fal-models\" rel=\"ugc nofollow noopener\" target=\"_blank\">opting in to the public preview</a> in the DigitalOcean console. Here’s a quick look at how to interact with them:</p>\n<div class=\"callout info\">\n<p>First, <strong><a href=\"https://cloud.digitalocean.com/account/feature-preview?feature=fal-models\" rel=\"ugc nofollow noopener\" target=\"_blank\">opt in to the public preview</a></strong> to access the fal models on the Gradient AI Platform.</p>\n</div>\n<p><strong>Example: Generate an Image</strong></p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>export MODEL_ACCESS_KEY=&quot;YOUR_KEY&quot;\ncurl -sS -X POST &apos;https://inference.do-ai.run/v1/async-invoke&apos; \\\n  -H &quot;Authorization: Bearer &#x24;MODEL_ACCESS_KEY&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &apos;<span class=\"token punctuation\">{</span>\n    &quot;model_id&quot;: &quot;fal-ai/flux/schnell&quot;,\n    &quot;input&quot;: <span class=\"token punctuation\">{</span> &quot;prompt&quot;: &quot;A high-quality photo of a futuristic city at sunset&quot; <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>&apos;\n</code></pre>\n<p><strong>Example: Generate an Image with Customized Parameters</strong></p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>curl -sS -X POST &apos;https://inference.do-ai.run/v1/async-invoke&apos; \\\n  -H &quot;Authorization: Bearer &#x24;MODEL_ACCESS_KEY&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &apos;<span class=\"token punctuation\">{</span>\n    &quot;model_id&quot;: &quot;fal-ai/fast-sdxl&quot;,\n    &quot;input&quot;: <span class=\"token punctuation\">{</span>\n      &quot;prompt&quot;: &quot;A high-quality photo of a futuristic city at sunset&quot;,\n      &quot;output_format&quot;: &quot;landscape_4_3&quot;,\n      &quot;num_inference_steps&quot;: 4,\n      &quot;guidance_scale&quot;: 3.5,\n      &quot;num_images&quot;: 1,\n      &quot;enable_safety_checker&quot;: true\n    <span class=\"token punctuation\">}</span>,\n    &quot;tags&quot;: [\n      <span class=\"token punctuation\">{</span> &quot;key&quot;: &quot;type&quot;, &quot;value&quot;: &quot;test&quot; <span class=\"token punctuation\">}</span>\n    ]\n  <span class=\"token punctuation\">}</span>&apos;\n</code></pre>\n<p><strong>Example: Generate Sound</strong></p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>curl -sS -X POST &apos;https://inference.do-ai.run/v1/async-invoke&apos; \\\n  -H &quot;Authorization: Bearer &#x24;MODEL_ACCESS_KEY&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &apos;<span class=\"token punctuation\">{</span>\n    &quot;model_id&quot;: &quot;fal-ai/stable-audio-25/text-to-audio&quot;,\n    &quot;input&quot;: <span class=\"token punctuation\">{</span>\n      &quot;prompt&quot;: &quot;Futuristic epic song&quot;,\n      &quot;seconds_total&quot;: 60\n    <span class=\"token punctuation\">}</span>,\n    &quot;tags&quot;: [\n      <span class=\"token punctuation\">{</span> &quot;key&quot;: &quot;type&quot;, &quot;value&quot;: &quot;test&quot; <span class=\"token punctuation\">}</span>\n    ]\n  <span class=\"token punctuation\">}</span>&apos;\n</code></pre>\n<p><strong>Example: Text to Speech (TTS)</strong></p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>curl -sS -X POST &apos;https://inference.do-ai.run/v1/async-invoke&apos; \\\n  -H &quot;Authorization: Bearer &#x24;MODEL_ACCESS_KEY&quot; \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -d &apos;<span class=\"token punctuation\">{</span>\n    &quot;model_id&quot;: &quot;fal-ai/elevenlabs/tts/multilingual-v2&quot;,\n    &quot;input&quot;: <span class=\"token punctuation\">{</span>\n      &quot;text&quot;: &quot;Hello, this is a text to speech example using Digital Ocean multilingual voice.&quot;\n    <span class=\"token punctuation\">}</span>,\n    &quot;tags&quot;: [\n      <span class=\"token punctuation\">{</span> &quot;key&quot;: &quot;type&quot;, &quot;value&quot;: &quot;test&quot; <span class=\"token punctuation\">}</span>\n    ]\n  <span class=\"token punctuation\">}</span>&apos;\n</code></pre>\n<p><strong>Check the request status</strong></p>\n<p>These requests start the job and return a <code>request_id</code>, which you can use to check when your image is ready. Because Serverless Inference uses an asynchronous API, you’ll need to poll the request until it completes.</p>\n<p>The /status endpoint is lightweight, so you can query it frequently to check progress. Once the job shows <code>COMPLETE</code>, use the <code>/async-invoke/{request_id}</code> endpoint to fetch the full generated result.</p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>curl -sS -X GET &quot;https://inference.do-ai.run/v1/async-invoke/<span class=\"token punctuation\">{</span>request_id<span class=\"token punctuation\">}</span>/status&quot; \\\n  -H &quot;Authorization: Bearer &#x24;MODEL_ACCESS_KEY&quot;\n</code></pre>\n<p>Keep polling this endpoint until the response shows:</p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code><span class=\"token punctuation\">{</span> &quot;status&quot;: &quot;COMPLETE&quot; <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>Retrieve the final result</strong></p>\n<p>Once the job is complete, you can get the full response (which includes your generated image) using:</p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>curl -sS -X GET &quot;https://inference.do-ai.run/v1/async-invoke/<span class=\"token punctuation\">{</span>request_id<span class=\"token punctuation\">}</span>&quot; \\\n  -H &quot;Authorization: Bearer &#x24;MODEL_ACCESS_KEY&quot;\n</code></pre>\n<p>The returned JSON includes a URL to the generated audio file, which you can download or play directly in your browser or app.</p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-nginx\"><code>curl -O &quot;<span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span>&quot;\n</code></pre>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"bring-your-ideas-to-life-with-fal-on-digitalocean\"><a href=\"https://www.digitalocean.com/blog.atom#bring-your-ideas-to-life-with-fal-on-digitalocean\">Bring your ideas to life with fal on DigitalOcean</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#bring-your-ideas-to-life-with-fal-on-digitalocean\"></a></h2>\n\n<p>With these four new multimodal models in public preview, you can now build richer AI-powered experiences, generating images and audio without managing infrastructure.</p>\n<p>Get started today by exploring the <a href=\"https://docs.digitalocean.com/products/gradient-ai-platform/how-to/use-serverless-inference/#serverless-inference-api-endpoints\" rel=\"ugc nofollow noopener\" target=\"_blank\">Serverless Inference API</a> and integrating these powerful fal models into your applications. For more resources, check out our <a href=\"https://gradientai-sdk.digitalocean.com/\" rel=\"ugc nofollow noopener\" target=\"_blank\">Gradient™ AI SDK</a> and stay tuned for tutorials and videos showcasing these models in action.</p>\n<p>This launch marks an expansion of DigitalOcean’s partnership with fal, bringing high-performance image and voice generation models to developers through the Gradient AI Platform. Learn more about the collaboration in the official <a href=\"https://investors.digitalocean.com/news/news-details/2025/DigitalOcean-and-fal-Expand-Collaboration-to-Advance-Multimodal-AI-Innovation/default.aspx\" rel=\"ugc nofollow noopener\" target=\"_blank\">press release</a>.</p>\n</details>",
      "timestamp": 1761396314.8930972,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "OAuth App Based Workload Identity for Droplets",
      "link": "https://www.digitalocean.com/blog/oauth-app-workload-identity-droplets",
      "published": "2025-10-22T18:51:32.229Z",
      "summary": "<p>This post is the first entry in a three part series on <a href=\"https://www.ietf.org/archive/id/draft-ietf-wimse-workload-identity-practices-03.html\" rel=\"ugc nofollow noopener\" target=\"_blank\">workload identity federation</a>:</p>\n<ul>\n<li>\n<p>Part 1: Architecture (this post)</p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/oauth-workload-identity-federation-digitalocean-droplets-part2\">Part 2: Deployment and Configuration</a></p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/oauth-workload-identity-federation-digitalocean-droplets-part3\">Part 3: Usage from Droplets and GitHub Actions</a></p>\n</li>\n</ul>\n<p>This entry will cover what workload identity federation is and how it can be implemented leveraging DigitalOcean’s OAuth API. In the following entries in this series, we’ll deploy an <a href=\"https://github.com/digitalocean-labs/droplet-oidc-poc\" rel=\"ugc nofollow noopener\" target=\"_blank\">open source Proof of Concept (PoC)</a>, configure roles and policies for workload identity access control, spin up a Droplet, write a GitHub Actions workflow, and access databases and Spaces keys from them using their respective workload identity tokens.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"what-is-workload-identity-federation\"><a href=\"https://www.digitalocean.com/blog.atom#what-is-workload-identity-federation\">What is workload identity federation?</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#what-is-workload-identity-federation\"></a></h2>\n\n<p>Workload identity is used to reduce the amount of secrets involved in deploying and administrating software systems. Instead of authentication being done based on something a workload knows, for example passwords or API tokens, authentication is done based on what the workload <em>is</em>. The heart of workload identity federation is asymmetric cryptography. By leveraging public / private key pairs, tokens can be issued to workloads, such as Droplets, and used for authentication and authorization to APIs exposed by resource servers. Workload identity tokens are exchanged for domain specific access tokens, or grant access to resources directly.</p>\n<p>This series showcases how we can use DigitalOcean’s OAuth API and fine grained permission scopes to implement and leverage workload identity federation using OpenID Connect (OIDC) protocol tokens. We’ll enable secretless access to DigitalOcean hosted databases and Spaces buckets from Droplets and GitHub Actions workflows. Eliminating the need to provision static, long-lived credentials for databases and Spaces buckets for those environments.</p>\n<figure><img alt=\"Workload identity RBAC\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/008ArticleImages/OAuthAppbasedWorkloadIdentityforDropletsBlogPostImages_2025_10_21_07_21/image_1.png\" /><figcaption>Workload identity RBAC</figcaption></figure>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"security-properties\"><a href=\"https://www.digitalocean.com/blog.atom#security-properties\">Security properties</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#security-properties\"></a></h2>\n\n<p>Authentication based on what the workload <em>is</em> requires that the infrastructure orchestrating the workload be able to make verifiable claims about a workload’s properties. To do this, the infrastructure responsible for running the workload enables issuance of workload-specific tokens containing these claims. The security of workload identity hinges on proper validation of these tokens per the OIDC protocol specification, the claims defined by each token, and the RBAC configuration used to validate tokens based on their claims.</p>\n<p>OIDC tokens are JSON Web Tokens (JWTs). These tokens are cryptographicly signed using a private key. The private key’s corresponding public key is made available via the JSON Web Key (JWK) format at a RFC 8615 “well known URI”. The URI of the public key is then referenced by a JSON format OpenID Configuration which is hosted at another well known URI.</p>\n<h4 id=\"well-known-openid-configuration\">/.well-known/openid-configuration</h4>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n\n    <span class=\"token property\">&quot;issuer&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;https://&lt;deployment-name&gt;.ondigitalocean.app&quot;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token property\">&quot;jwks_uri&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;https://&lt;deployment-name&gt;.ondigitalocean.app/.well-known/jwks&quot;</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token property\">&quot;response_types_supported&quot;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">&quot;id_token&quot;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token property\">&quot;claims_supported&quot;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">&quot;sub&quot;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">&quot;aud&quot;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">&quot;exp&quot;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">&quot;iat&quot;</span><span class=\"token punctuation\">,</span> <span class=\"token string\">&quot;iss&quot;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token property\">&quot;id_token_signing_alg_values_supported&quot;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">&quot;RS256&quot;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token property\">&quot;scopes_supported&quot;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">&quot;openid&quot;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<h4 id=\"well-known-jwks\">/.well-known/jwks</h4>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n\n    <span class=\"token property\">&quot;keys&quot;</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\n        <span class=\"token punctuation\">{</span>\n\n            <span class=\"token property\">&quot;kty&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;RSA&quot;</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token property\">&quot;n&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;jplR2Q2_hJeA0tqAMqRppJxu16H8i8nrSgX...&quot;</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token property\">&quot;e&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;AQAB&quot;</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token property\">&quot;use&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;sig&quot;</span><span class=\"token punctuation\">,</span>\n\n            <span class=\"token property\">&quot;kid&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;g1uTyq-nvRAVGYg6doHZ7LJVuNznJ1QX6OxVebUX6eE&quot;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">}</span> \n</code></pre>\n<p>These well known URIs are what make workload identity federation possible. Federation in this context means distinct services are interoperable for the purposes of confirming the identity of a workload by services other than the issuer of the token. Later in our blog post, we’ll leverage this interoperability to verify validity of OIDC tokens issued to workflows run by GitHub Actions, in that case, the workflow is the workload. GitHub Action’s relevant well known URIs are as follows:</p>\n<ul>\n<li>\n<p><a href=\"https://token.actions.githubusercontent.com/.well-known/openid-configuration\" rel=\"ugc nofollow noopener\" target=\"_blank\">https://token.actions.githubusercontent.com/.well-known/openid-configuration</a></p>\n</li>\n<li>\n<p><a href=\"https://token.actions.githubusercontent.com/.well-known/jwks\" rel=\"ugc nofollow noopener\" target=\"_blank\">https://token.actions.githubusercontent.com/.well-known/jwks</a></p>\n</li>\n</ul>\n<p>The proof of concept we’ll be deploying will have the same well known paths, just with a different issuer domain name.</p>\n<p>JWTs are issued with a set of “claims”. When a token is issued with a certain claim, the issuer is asserting that the token lays claim to some value, and by signing the token using its private key, the issuer is making an attestation to the validity of that claim. Therefore, if we trust a given issuer and an OIDC token passes cryptographic signature verification, we know we can trust the claims within that token. The set of claims we’re interested in for our PoC and that our service will issue tokens with are as follows:</p>\n<div class=\"code-label\" title=\"\"></div>\n<pre class=\"language-json\"><code><span class=\"token punctuation\">{</span>\n\n  <span class=\"token property\">&quot;iss&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;https://&lt;deployment-name&gt;.ondigitalocean.app&quot;</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">&quot;aud&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;api://DigitalOcean?actx=f81d4fae-7dec-11d0-a765-00a0c91e6bf6&quot;</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">&quot;sub&quot;</span><span class=\"token operator\">:</span> <span class=\"token string\">&quot;actx:f81d4fae-7dec-11d0-a765-00a0c91e6bf6:role:data-readwrite&quot;</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token property\">&quot;droplet_id&quot;</span><span class=\"token operator\">:</span> <span class=\"token number\">514729608</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Token claims</p>\n<p>The issuer here is within the <code>”iss”</code> claim, we append <code>”/.well-known/openid-configuration”</code> to find the OpenID Configuration JSON, decode it, and subsequently find the public JSON Web Keys we can use to perform cryptographic signature verification of the token.</p>\n<p>Also of critical importance to the security of workload identity federation are the audience (<code>”aud”</code>)  and subject (<code>”sub”</code>) claims. The audience is used by the resource server to determine if the token is valid for its resources. Our audience is the API we’re authenticating to (<code>”DigitalOcean”</code>). The subject varies depending on the workload environment we’re authenticating from. The subject identifies the workload itself, what is it?</p>\n<p>In our PoC, setting the subject via Droplet tags is a critical piece of our trust flow. Creation of a Droplet with certain tags in combination with our RBAC roles will define what that Droplet has access to. We’re allowing any team member / role with permission to create a Droplet to set its subject. As such, one must take this into consideration when considering <a href=\"https://docs.digitalocean.com/platform/teams/roles/custom/\" rel=\"ugc nofollow noopener\" target=\"_blank\">RBAC definitions and assignments</a>. When we access resources from GitHub Actions, we know the answer to “what is it?” based on how the GitHub Actions orchestrator formats the subject: <code>”org/repo/.github/workflows/name.yml”</code>.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"workload-identity-solution-architecture\"><a href=\"https://www.digitalocean.com/blog.atom#workload-identity-solution-architecture\">Workload identity solution architecture</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#workload-identity-solution-architecture\"></a></h2>\n\n<p>The goal for our PoC is to allow users to easily provision Droplet access to team resources such as Spaces Keys and Databases, removing the need for out-of-band secret provisioning or hard-coding sensitive values into cloud-init. In our example, we will use GitHub Actions workloads to deploy DigitalOcean Droplets configured with access to a Managed Database and a Spaces bucket without hard-coding any secret token.</p>\n<p>Our PoC has the following aspects:</p>\n<ul>\n<li>\n<p>An OAuth Client Application following the <a href=\"https://docs.digitalocean.com/reference/api/oauth/\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean OAuth Web Application Flow</a></p>\n</li>\n<li>\n<p>A policy-based evaluation to determine access control (supporting policy upload)</p>\n</li>\n<li>\n<p>Provisioning and issuing workload identity tokens</p>\n</li>\n<li>\n<p>.well-known URIs for OIDC token validation</p>\n</li>\n<li>\n<p>Handlers to intercept and wrap routes provided by the DigitalOcean API:</p>\n</li>\n<li>\n<p><a href=\"https://docs.digitalocean.com/reference/api/digitalocean/#tag/Droplets/operation/droplets_create\" rel=\"ugc nofollow noopener\" target=\"_blank\">Create a New Droplet</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.digitalocean.com/reference/api/digitalocean/#tag/Databases/operation/databases_get_cluster\" rel=\"ugc nofollow noopener\" target=\"_blank\">Retrieve an Existing Database Cluster</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.digitalocean.com/reference/api/digitalocean/#tag/Spaces-Keys/operation/spacesKey_create\" rel=\"ugc nofollow noopener\" target=\"_blank\">Create a New Spaces Access Key</a></p>\n</li>\n</ul>\n<p>To tie these aspects together and make them accessible to both our end-users and services such as Droplets and GitHub Actions which will access them, the PoC leverages <a href=\"https://github.com/caddyserver/caddy\" rel=\"ugc nofollow noopener\" target=\"_blank\">caddy</a> as a reverse proxy of DigitalOcean’s API. We can then write a Caddyfile configuring caddy to expose the OAuth route to the user, passthroughs of the DigitalOcean API to the user and workloads, and our wrappers around routes we’ll be modifying to enable workload identity.</p>\n<figure><img alt=\"image alt text\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/008ArticleImages/OAuthAppbasedWorkloadIdentityforDropletsBlogPostImages_2025_10_21_07_21/image_2.png\" /><figcaption>Solution High Level Flow</figcaption></figure>\n<p>Caddy enables us to easily define routes we want to handle and routes we want to wrap. Our app-specific auth code is the <a href=\"https://github.com/digitalocean-labs/droplet-oidc-poc/blob/main/src/workload_identity_oauth_reverse_proxy/cgi/auth/digitalocean/v1/callback.py\" rel=\"ugc nofollow noopener\" target=\"_blank\">callback.py</a> file which redirects users when they land at our servers root to the DigitalOcean OAuth team selection and approval page. Once approved, <a href=\"http://callback.py\" rel=\"ugc nofollow noopener\" target=\"_blank\">callback.py</a> handles secure storage of the users token for the selected team.</p>\n<figure><img alt=\"\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/008ArticleImages/OAuthAppbasedWorkloadIdentityforDropletsBlogPostImages_2025_10_21_07_21/image_3.png\" /><figcaption>Part 1: Initial OAuth Web Flow for Team Level Token</figcaption></figure>\n<p>When the user issues a Droplet create request, the proxy application intercepts it and calls our wrapper. The wrapper creates a provisioning token which is a JWT with the subject containing a nonce value and the audience containing the team UUID associated with the DigitalOcean Personal Access Token sent to the Droplet create call endpoint. The wrapper then injects the provisioning token into the Droplet via modification of the <code>user_data</code> cloud-init field. The modified create request and PAT are then passed through to the upstream API which creates the Droplet.</p>\n<figure><img alt=\"\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/008ArticleImages/OAuthAppbasedWorkloadIdentityforDropletsBlogPostImages_2025_10_21_07_21/image_4_2.png\" /><figcaption>Part 2: Workload Identity Token Provisioning for Droplet</figcaption></figure>\n<p>The application adds the workload identity token to the Droplet after successful completion of signing and validation of a provisioning token done via <a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-cloud-config-for-your-initial-server-setup\">cloud-init</a>. On first boot cloud-init executes the <code>user_data</code> which binds the provisioning token to the Droplet by signing it with the Droplet’s SSHD private key.</p>\n<p>The provisioning token and signature are then exchanged for a workload identity token. Our service looks up the Droplet’s IP address using the team OAuth token received from the OAuth flow. It connects to the Droplets listening SSHD port and retrieves its public SSH key to verify the signature over the provisioning token, and upon successful verification it returns the Droplet’s workload identity token for storage and later use on the Droplet. The workload identity token is an OIDC protocol compliant RSA JWT with the subject containing information from the Droplet’s tags as well as the team UUID within the audience. By including the team UUID in the audience we enable mapping workload identity tokens to the team token provided by the initial web OAuth flow.</p>\n<figure><img alt=\"\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/008ArticleImages/OAuthAppbasedWorkloadIdentityforDropletsBlogPostImages_2025_10_21_07_21/image_5.png\" /><figcaption>Workload ID Token Provisioning Flow</figcaption></figure>\n<p>From the Droplet, the workload identity token can be sent to our proxy application where wrappers around Spaces Keys creation and Database information retrieval can lookup the associated OAuth token for the team.</p>\n<p>Before the proxy makes a request to the upstream API, the associated policy referenced by the workload identity token’s subject is used to validate the request data from the workload. The scoped team OAuth token is then used to make the request to the upstream API.</p>\n<p>This approach allows us to effectively act as the DigitalOcean API to properly configured clients, such as <a href=\"https://github.com/digitalocean/doctl?tab=readme-ov-file#configuring-default-values\" rel=\"ugc nofollow noopener\" target=\"_blank\">doctl</a>. Users set the doctl API URL in their doctl config to the fully qualified domain name (FQDN) at which they deployed the API proxy application.</p>\n<p>Any doctl commands will then either be intercepted and wrapped by the proxy logic or passed through unaltered. POST requests to Droplet Create and Spaces Keys Create as well as GET requests to Database endpoints are all intercepted and handled by scripts inside the proxy application which wrap requests and responses with the app’s custom logic. All other requests are passed through to the upstream DigitalOcean API.</p>\n<figure><img alt=\"\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/008ArticleImages/OAuthAppbasedWorkloadIdentityforDropletsBlogPostImages_2025_10_21_07_21/image_6_2.png\" /><figcaption>Part 3: Use of Workload Identity Token by Droplet to Access Resources</figcaption></figure>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"next-steps\"><a href=\"https://www.digitalocean.com/blog.atom#next-steps\">Next steps</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#next-steps\"></a></h2>\n\n<p>Now that we’ve reviewed how the <a href=\"https://github.com/digitalocean-labs/droplet-oidc-poc\" rel=\"ugc nofollow noopener\" target=\"_blank\">open source Proof of Concept (PoC)</a> works, we’ll deploy the application to DigitalOcean App Platform. Once deployed, we’ll write custom HCL to configure roles and policies enabling workload identity tokens to be exchanged for API specific access tokens. Token exchange is a best practice pattern, <a href=\"https://docs.pypi.org/trusted-publishers/internals/\" rel=\"ugc nofollow noopener\" target=\"_blank\">PyPI Docs: Internals and Technical Details</a> has more information on token exchange in another context which may be helpful to aid understanding. Finally, we’ll use the Droplet’s workload identity token to create Spaces keys and retrieve Database connection URIs. We’ll also configure roles and policies to enable the same from GitHub Actions workflows via workload identity federation.</p>\n<ul>\n<li>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/oauth-workload-identity-federation-digitalocean-droplets-part2\">Part 2: Deployment and Configuration</a></p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/oauth-workload-identity-federation-digitalocean-droplets-part3\">Part 3: Usage from Droplets and GitHub Actions</a></p>\n</li>\n</ul>\n</details>",
      "timestamp": 1761396314.8931024,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Is DigitalOcean Your Next Career Spot? A 5-Year Insider on Why It Should Be",
      "link": "https://www.digitalocean.com/blog/shark-tales-akanksha-kapoor-manager",
      "published": "2025-10-09T04:41:34.111Z",
      "summary": "<p>Akanksha Kapoor, Manager of Growth Account Management, stands as a great example of how DigitalOcean values come to life. She has been with DO for five years. In this spotlight, she shares how she’s grown her career at DO, customer-first culture, and the collaborative environment that make DigitalOcean unique.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"what-makes-digitalocean-the-right-place-for-you\"><a href=\"https://www.digitalocean.com/blog.atom#what-makes-digitalocean-the-right-place-for-you\">What makes DigitalOcean the right place for you?</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#what-makes-digitalocean-the-right-place-for-you\"></a></h2>\n\n<p>“DigitalOcean opened doors for me with endless opportunities and support. Over the years, I’ve developed not just as a professional but as a person. What I value most here are the people, they’re smart, humane, and genuinely awesome.”</p>\n<div class=\"callout info\">\n<p><strong>🎥 Have a look at Akanksha Kapoor’s full conversation ⬇️</strong></p>\n\n    <a href=\"https://www.youtube.com/watch?v=RlnWOk-_dRs\" target=\"_blank\">View YouTube video</a>\n\n</div>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"how-does-customer-centricity-shape-life-at-do\"><a href=\"https://www.digitalocean.com/blog.atom#how-does-customer-centricity-shape-life-at-do\">How does customer-centricity shape life at DO?</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#how-does-customer-centricity-shape-life-at-do\"></a></h2>\n\n<p>“At DigitalOcean, the customer is at the core of everything we do. Their needs guide our priorities, and their feedback drives new products and features. As part of Customer Success, this means striving to deliver a world-class experience while embracing the chance for me and my team to learn and live by these values every day.”</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"how-would-you-describe-the-pace-of-innovation-at-do\"><a href=\"https://www.digitalocean.com/blog.atom#how-would-you-describe-the-pace-of-innovation-at-do\">How would you describe the pace of innovation at DO?</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#how-would-you-describe-the-pace-of-innovation-at-do\"></a></h2>\n\n<p>“The word ‘fast’ doesn’t even do it justice, it’s more like lightspeed. Customers ask for something, and within a quarter or two, sometimes even just weeks, it’s brought to life. The ability to innovate at this pace is truly exciting.”</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"what-words-best-capture-do-s-culture\"><a href=\"https://www.digitalocean.com/blog.atom#what-words-best-capture-do-s-culture\">What words best capture DO’s culture?</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#what-words-best-capture-do-s-culture\"></a></h2>\n\n<p>“I’d describe our culture as strong in values, work ethic, and character. We take pride in what we do and want our customers to feel the same pride in using DigitalOcean. I choose these words because I live this culture every day, and I’m fortunate to be able to coach my team through it as well.”</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"how-would-you-describe-do-s-style-of-working\"><a href=\"https://www.digitalocean.com/blog.atom#how-would-you-describe-do-s-style-of-working\">How would you describe DO’s style of working?</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#how-would-you-describe-do-s-style-of-working\"></a></h2>\n\n<p>“Collaboration here is fun, authentic, and thorough. The “open door policy” isn’t just a phrase, it’s real. Leaders are approachable, and people ask for and offer help freely. Concerns are voiced openly and addressed thoughtfully. What I appreciate most is how guidance is shared generously and how much that openness is respected, valued, and celebrated across the company.”</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"dive-into-the-future-with-digitalocean\"><a href=\"https://www.digitalocean.com/blog.atom#dive-into-the-future-with-digitalocean\">Dive into the future with DigitalOcean</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#dive-into-the-future-with-digitalocean\"></a></h2>\n\n<p>At DigitalOcean, our customers and community are at the heart of everything we do. We believe in acting like owners, with a bias for action and a relentless drive to simplify cloud computing. If you’re passionate about continuous learning, thinking bold, and being part of a supportive, innovative team, <a href=\"https://www.digitalocean.com/careers\">explore our open roles today</a>!</p>\n</details>",
      "timestamp": 1761396314.893106,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Announcing GPU Droplets accelerated by NVIDIA HGX H100 in the EU",
      "link": "https://www.digitalocean.com/blog/now-available-gpu-droplets-nvidia-h100s-ams",
      "published": "2025-10-07T20:57:57.998Z",
      "summary": "<p>Demand for high-performance computing resources, particularly for cutting-edge training and inference workloads, continues to grow exponentially. We know that developers and businesses across Europe need simple, localized access to powerful GPUs to keep their innovation pipelines moving fast.</p>\n<p>We’re excited to announce that NVIDIA HGX H100s as GPU Droplets—DigitalOcean’s on-demand, GPU-powered, virtual machines—are now available in our Amsterdam data center. By integrating NVIDIA HGX H100 GPUs into an EU-based data center, we’re making it simpler for developers and digital native enterprises to access cutting-edge performance with the simplicity and affordability you’ve come to expect from DigitalOcean.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"accelerating-training-workloads-with-nvidia-hgx-h100s-and-digitalocean\"><a href=\"https://www.digitalocean.com/blog.atom#accelerating-training-workloads-with-nvidia-hgx-h100s-and-digitalocean\">Accelerating training workloads with NVIDIA HGX H100s and DigitalOcean</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#accelerating-training-workloads-with-nvidia-hgx-h100s-and-digitalocean\"></a></h2>\n\n<p>NVIDIA HGX H100 is a powerful GPU that is known for its training speed. It covers a range of use cases, including training LLMs, inference, and high-performance computing. <a href=\"https://www.digitalocean.com/community/tutorials/what-is-an-nvidia-h100\">Learn more about its full range of capabilities&gt;</a></p>\n<p>DigitalOcean customers are putting NVIDIA HGX H100s to the test with complex use cases. WindBorne Systems, which operates the largest balloon constellation in the world while also developing state-of-the-art deep learning models for real-time forecasting, relies on NVIDIA HGX H100s on DigitalOcean for training. Combining NVIDIA’s state-of-technology with DigitalOcean’s resources, they found that DigitalOcean’s infrastructure allowed them to train models on H100s faster and more cost-effectively than other cloud options.</p>\n<h3 id=\"we-have-two-terabytes-of-ram-on-each-of-the-nodes-which-we-leverage-to-train-larger-models-digitalocean-s-ability-to-provide-us-with-all-of-the-resources-that-we-need-which-we-often-can-t-find-in-other-places-has-been-really-helpful\"><a href=\"https://www.digitalocean.com/blog.atom#we-have-two-terabytes-of-ram-on-each-of-the-nodes-which-we-leverage-to-train-larger-models-digitalocean-s-ability-to-provide-us-with-all-of-the-resources-that-we-need-which-we-often-can-t-find-in-other-places-has-been-really-helpful\">“We have two terabytes of RAM on each of the nodes, which we leverage to train larger models. DigitalOcean’s ability to provide us with all of the resources that we need, which we often can’t find in other places, has been really helpful.”</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#we-have-two-terabytes-of-ram-on-each-of-the-nodes-which-we-leverage-to-train-larger-models-digitalocean-s-ability-to-provide-us-with-all-of-the-resources-that-we-need-which-we-often-can-t-find-in-other-places-has-been-really-helpful\"></a></h3>\n<ul>\n<li>Anuj Shetty, Machine Learning Engineer at WindBorne Systems</li>\n</ul>\n<p><a href=\"https://www.digitalocean.com/customers/windborne-systems\">Read the full story &gt;</a></p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"simple-powerful-gpu-droplets\"><a href=\"https://www.digitalocean.com/blog.atom#simple-powerful-gpu-droplets\">Simple, powerful GPU Droplets</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#simple-powerful-gpu-droplets\"></a></h2>\n\n<p>Like all DigitalOcean products, GPU Droplets are designed for simplicity. You can launch them in just a few clicks, freeing you from complex infrastructure management.</p>\n<p>These GPU Droplets also work with our new <a href=\"https://docs.digitalocean.com/products/droplets/details/features/#inference-optimized-image\" rel=\"ugc nofollow noopener\" target=\"_blank\">Inference-Optimized Image</a>, a pre-configured image that does the work for you. This feature provides an instant production-grade environment with built-in optimizations like CUDA and FlashAttention, so you can go from Droplet launch to live inference in no time.</p>\n<p>Security and compliance are also top priorities. All GPU Droplets are HIPAA-eligible and SOC 2 compliant, giving you peace of mind. You can use these powerful Droplets alongside our managed <a href=\"https://www.digitalocean.com/products/kubernetes\">Kubernetes</a> service and our <a href=\"https://www.digitalocean.com/products/gradient/platform\">DigitalOcean Gradient AI TM Platform</a> to build and scale comprehensive, AI-driven applications.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"get-started-today\"><a href=\"https://www.digitalocean.com/blog.atom#get-started-today\">Get started today</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#get-started-today\"></a></h2>\n\n<p>You can <a href=\"https://cloud.digitalocean.com/gpus?i=403c6d\" rel=\"ugc nofollow noopener\" target=\"_blank\">spin up NVIDIA HGX H100</a> for as low as $2.99/GPU/hour on-demand or $1.99 GPU/hour with a multi-month commitment.</p>\n<p>We also offer a full <a href=\"https://docs.digitalocean.com/products/droplets/details/features/#gpu-droplets\" rel=\"ugc nofollow noopener\" target=\"_blank\">range</a> of NVIDIA GPU Droplet options across our data centers at affordable prices, including <a href=\"https://www.digitalocean.com/blog/now-available-gpu-dropletsl-nvidia-h200s\">NVIDIA HGX H200s</a>, <a href=\"https://www.digitalocean.com/blog/now-available-nvidia-rtx4000-6000ada\">NVIDIA RTX 4000 Ada Generation and NVIDIA RTX 6000 Ada Generation, and NVIDIA L40S</a>. Our AMD offering also continues to grow - we recently added <a href=\"https://www.digitalocean.com/blog/now-available-amd-instinct-mi325x-gpus\">AMD Instinct™ MI325X GPUs</a> on top of already existing <a href=\"https://www.digitalocean.com/blog/now-available-amd-instinct-mi300x-gpus\">AMD Instinct™ MI300X GPUs</a>.</p>\n<p>Need more information? <a href=\"https://streamyard.com/watch/eAm5yxXEYeMz\" rel=\"ugc nofollow noopener\" target=\"_blank\">Register</a> for our webinar on October 15 to learn more about these GPUs and how to scale your AI workloads with DigitalOcean from start to finish.</p>\n</details>",
      "timestamp": 1761396314.8931093,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Introducing the DigitalOcean AI Ecosystem",
      "link": "https://www.digitalocean.com/blog/introducing-the-digitalocean-ai-ecosystem",
      "published": "2025-10-06T20:07:17.443Z",
      "summary": "<p>Last week at <a href=\"https://www.digitalocean.com/deploy\">Deploy London</a>, we announced a significant expansion of our offerings within the DigitalOcean AI Ecosystem and introduced the <a href=\"https://www.digitalocean.com/partners/ai-partner-program\">DigitalOcean AI Partner Program</a>. A platform is only as strong as its ecosystem, and these initiatives are designed to create a comprehensive, flexible, and powerful environment for startups, builders, and developers to create the next generation of AI applications.</p>\n<h3 id=\"explore-what-s-possible-with-the-digitalocean-ai-ecosystem\"><a href=\"https://www.digitalocean.com/blog.atom#explore-what-s-possible-with-the-digitalocean-ai-ecosystem\">Explore What’s Possible with the DigitalOcean AI Ecosystem</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#explore-what-s-possible-with-the-digitalocean-ai-ecosystem\"></a></h3>\n<p>We’re collaborating with industry leaders and innovative startups to provide access to all of the AI products and services you need through the Gradient AI Agent Cloud. DigitalOcean’s comprehensive AI Ecosystem empowers startups and enterprises to build next-gen AI applications, offering choice and flexibility through embedded partner integrations and workflows.</p>\n<p><a href=\"https://www.digitalocean.com/products/gradient#ecosystem\">DigitalOcean’s AI Ecosystem</a> provides access to:</p>\n<ul>\n<li>\n<p><strong>Powerful Infrastructure:</strong> Efficient AMD and NVIDIA GPUs to power your applications.</p>\n</li>\n<li>\n<p><strong>Advanced Models:</strong> Access to leading models from companies like OpenAI, DeepSeek, Meta, and Mistral.</p>\n</li>\n<li>\n<p><strong>Applications &amp; Frameworks:</strong> Popular AI dev tools and integration frameworks such as LangChain, LiteLLM, and dStack.</p>\n</li>\n<li>\n<p><strong>Integrators:</strong> A network of AI specialists to help you migrate workflows and build robust new AI implementations.</p>\n</li>\n</ul>\n<figure><img alt=\"image alt text\" src=\"https://doimages.nyc3.cdn.digitaloceanspaces.com/002Blog/Screenshot%202025-10-06%20at%201.01.27%E2%80%AFPM.png\" /><figcaption>The DigitalAI Ecosystem</figcaption></figure>\n<p>“At the heart of AI’s progress are the developers who are turning ideas into reality. The Gradient AI Ecosystem is a powerful force multiplier for them, proving that the future isn’t just about silicon—it’s about software and the collaborative community built on top of it,” said Anush Elangovan, VP of AI Software at AMD. “By providing high-performance AMD GPUs through DigitalOcean’s Gradient AI Agentic Cloud, we ensure the ecosystem is powered by world-class, open-standard hardware. We’re not just providing infrastructure; together we’re powering the software and the community that will invent tomorrow’s AI.”</p>\n<p>Through the dynamic Gradient AI Ecosystem, AI startups and digital native enterprises like <strong>Telnyx</strong> and <strong>Scribe</strong> gain the ability to future-proof their solutions with access to cutting-edge technology, services, and guidance from DigitalOcean’s partners. Now, it’s easier than ever for modern developers to expand their AI capabilities and advance their innovations as the industry continues to evolve.</p>\n<h4 id=\"coming-soon-new-integrations\">Coming Soon: New Integrations</h4>\n<p>We’re continuously enhancing our Gradient AI Agentic Cloud with planned integrations. Soon, you’ll be able to:</p>\n<ul>\n<li>\n<p>Seamlessly generate voice, image, and video within your AI applications with media models from <strong>Fal</strong>.</p>\n</li>\n<li>\n<p>Create more intelligent applications by leveraging Vector Search from <strong>MongoDB</strong> on one comprehensive platform.</p>\n</li>\n</ul>\n<p><a href=\"https://try.digitalocean.com/gradient-ai-deploy/\" rel=\"ugc nofollow noopener\" target=\"_blank\">Sign up to be the first to know about these planned integrations</a>.</p>\n<h3 id=\"let-s-drive-the-next-wave-of-ai-innovation-together\"><a href=\"https://www.digitalocean.com/blog.atom#let-s-drive-the-next-wave-of-ai-innovation-together\">Let’s Drive the Next Wave of AI Innovation Together</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#let-s-drive-the-next-wave-of-ai-innovation-together\"></a></h3>\n<p>We believe the future of AI is about more than just silicon–it’s about the software and the collaborative community built on top of it. We’re excited to provide the tools, resources, and partnerships to help you build what’s next.</p>",
      "timestamp": 1761396314.893113,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Announcing cost-efficient storage with Network file storage, cold storage, and usage-based backups",
      "link": "https://www.digitalocean.com/blog/nfs-cold-storage-backups",
      "published": "2025-10-02T08:05:09.740Z",
      "summary": "<p>As data footprints grow, businesses need cost-efficient storage for infrequently accessed data, high-performance file systems for collaborative work, and more aggressive data protection policies to meet strict recovery objectives. We’re introducing several significant enhancements to our storage portfolio to help you manage the challenges of data management, protection, and scaling.</p>\n<div class=\"callout info\">\n<p><strong>TL;DR</strong></p>\n<p><strong>Network file storage solution, specifically designed for high-performance AI workloads, is now generally available</strong>. You can access it in the <a href=\"https://cloud.digitalocean.com/nfs\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a>. To learn more attend <a href=\"https://streamyard.com/watch/jgBWyD44ppwQ\" rel=\"ugc nofollow noopener\" target=\"_blank\">webinar</a>  or visit the product <a href=\"https://docs.digitalocean.com/products/nfs/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> page.</p>\n<p><strong>Spaces cold storage for infrequently accessed data is available for public preview.</strong> Visit our <a href=\"https://docs.digitalocean.com/products/spaces/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> to learn more and <a href=\"https://cloudsupport.digitalocean.com/\" rel=\"ugc nofollow noopener\" target=\"_blank\">create a support ticket</a> to request access to preview Spaces cold storage.</p>\n<p><strong>Usage-based backups is available for public preview to meet aggressive rpos.</strong> Check out our <a href=\"https://docs.digitalocean.com/products/backups/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> to learn more. Request access to preview usage-based backups by submitting this <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfE6K454v6sDy3Rp7Fo__I4tF7-F3g4DzAZ9SWG7FygxDKd_w/viewform\" rel=\"ugc nofollow noopener\" target=\"_blank\">form</a>.</p>\n</div>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"network-file-storage-nfs-for-high-performance-ai-workloads\"><a href=\"https://www.digitalocean.com/blog.atom#network-file-storage-nfs-for-high-performance-ai-workloads\">Network file storage (NFS) for high-performance AI workloads</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#network-file-storage-nfs-for-high-performance-ai-workloads\"></a></h2>\n\n<p>Data-intensive applications, particularly in AI and machine learning, require shared, high-performance file storage that is easy to provision and manage. Our Network file storage service is now generally available in our ATL1 and NYC data centers. This fully managed, high-performance solution is specifically designed to meet the demands of AI/ML startups and data-centric businesses by enabling concurrent shared dataset access for multi-node workloads.</p>\n<p>lt offers key functionalities including share provisioning and support for NFSv3 and NFSv4 with POSIX compliance. It operates seamlessly within your Virtual Private Cloud, allowing a single share to be mounted across multiple GPU/CPU Droplets, and is optimized for high-throughput and low-latency, making it ideal for <a href=\"https://www.digitalocean.com/products/gradient\">AI workloads</a>.</p>\n<p>The service also provides snapshots for point-in-time restores and offers allocation-based pricing with discounts for GPU-committed customers. Provisioning is simple, and the service is designed for the high-throughput, low-latency demands of model training and inference. Unlike some competitors that start at 1TB+ increments with high minimums and complex pricing, our solution offers a more cost-effective entry point with increments as small as 50 GiB.</p>\n\n    <a href=\"https://www.youtube.com/watch?v=4GQupEiRmgM\" target=\"_blank\">View YouTube video</a>\n\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>AI:</strong> A data science team can use a single NFS share to manage and preprocess large datasets for model training across a cluster of GPU Droplets, shortening training times.</p>\n</li>\n<li>\n<p><strong>Media and content:</strong> A video production agency can use shared storage to allow multiple designers to work on the same project files without having to move data.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Simplified operations:</strong> Eliminate the overhead of self-managing a shared file system.</p>\n</li>\n<li>\n<p><strong>Performance optimized:</strong> Get high throughput and low latency tailored for AI/ML workloads.</p>\n</li>\n<li>\n<p><strong>Cost-effective scaling:</strong> Start small with 50 GiB increments and scale more affordably as your data grows.</p>\n</li>\n</ul>\n<p>To learn more about Network file storage visit the product <a href=\"https://docs.digitalocean.com/products/nfs/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> page or access it directly in the <a href=\"https://www.digitalocean.com/%5Bhttps:/cloud.digitalocean.com/nfs%5D(https:/cloud.digitalocean.com/nfs)\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a>. You can also learn more by attending the <a href=\"https://streamyard.com/watch/jgBWyD44ppwQ\" rel=\"ugc nofollow noopener\" target=\"_blank\">webinar</a> to see a live demo and get your questions answered by experts.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"spaces-cold-storage-preview-for-infrequently-accessed-data\"><a href=\"https://www.digitalocean.com/blog.atom#spaces-cold-storage-preview-for-infrequently-accessed-data\">Spaces cold storage preview for infrequently accessed data</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#spaces-cold-storage-preview-for-infrequently-accessed-data\"></a></h2>\n\n<p>The rapid growth of AI has led digital-native enterprises to store vast quantities of data, much of which is rarely accessed.  <a href=\"https://www.digitalocean.com/products/spaces\">DigitalOcean’s Spaces</a> cold storage is available for public preview to store such infrequently accessed objects at a price of $0.007/GiB per month. This includes retrieval of all cold data stored in a bucket up to once per month at no additional cost, after which retrieval overages are charged at $0.01 per GiB per month. This new cold storage bucket type provides a low-cost, S3-compatible solution for petabyte-scale datasets where data is accessed infrequently, needs to be retained for at least 30 days, and must be retrieved instantly.</p>\n<p>To help you get started, all fees for Spaces cold storage beyond the $5 per month Spaces subscription will be waived until October 31, 2025. Pricing and capabilities are subject to change during general availability.</p>\n<figure><img alt=\"Spaces Cold Storage\" src=\"https://iaas-storage.sfo3.cdn.digitaloceanspaces.com/Spaces%20Cold%20Storage.png\" /><figcaption>Spaces Cold Storage</figcaption></figure>\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>Backups and disaster recovery:</strong> Store secondary copies of data that are rarely accessed but must be available instantly.</p>\n</li>\n<li>\n<p><strong>Application logs and diagnostics:</strong> Keep data that must be occasionally retrieved for incident investigation, security events, or regulatory needs.</p>\n</li>\n<li>\n<p><strong>Archives:</strong> Store user-generated content, scientific data, and older project files.</p>\n</li>\n<li>\n<p><strong>AI/ML training and inference archives:</strong> Archive large, infrequently accessed datasets or model checkpoints that can be retrieved on-demand.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Cost-effective scaling:</strong> Store petabytes of data at a fraction of the cost of standard storage tiers.</p>\n</li>\n<li>\n<p><strong>Predictable pricing:</strong> Our simple pricing model includes one retrieval per month, up to your average storage usage, at no additional cost, and predictable, transparent pricing for additional retrievals so you can avoid the high, unpredictable fees of some other providers.</p>\n</li>\n<li>\n<p><strong>Instant retrieval:</strong> Access your data within seconds, even when it’s stored in a cold tier.</p>\n</li>\n</ul>\n<p>Visit our <a href=\"https://docs.digitalocean.com/products/spaces/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> to learn more and <a href=\"https://cloudsupport.digitalocean.com/\" rel=\"ugc nofollow noopener\" target=\"_blank\">create a support ticket</a> to request access to preview Spaces cold storage</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"usage-based-backups-preview-to-meet-aggressive-rpos\"><a href=\"https://www.digitalocean.com/blog.atom#usage-based-backups-preview-to-meet-aggressive-rpos\">Usage-based backups preview to meet aggressive RPOs</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#usage-based-backups-preview-to-meet-aggressive-rpos\"></a></h2>\n\n<p>Our new usage-based backup service, available now for public preview, helps users with strict Recovery Point Objectives (RPO) schedule backups every 4, 6, or 12 hours. Flexible retention policies for Droplets can be configured for 3 days to 6 months.</p>\n<p>This feature is paired with a transparent, consumption-based billing model, charging only for the amount of restorable data used based on frequency.</p>\n<ul>\n<li>\n<p><strong>Weekly:</strong> $0.04/GiB-Month</p>\n</li>\n<li>\n<p><strong>Daily:</strong> $0.03/GiB-Month</p>\n</li>\n<li>\n<p><strong>12 Hour:</strong> $0.02/GiB-Month</p>\n</li>\n<li>\n<p><strong>6 Hour:</strong> $0.015/GiB-Month</p>\n</li>\n<li>\n<p><strong>4 Hour:</strong> $0.01/GiB-Month</p>\n</li>\n</ul>\n<p>This means you only pay for what you actually use with no hidden fees for snapshot operations. This provides the flexibility to create a recovery plan that is both technically sound and financially viable, especially for high-change environments in regulated industries or for development environments. Pricing and capabilities are subject to change during general availability.</p>\n<figure><img alt=\"Usage-based Backups\" src=\"https://iaas-storage.sfo3.cdn.digitaloceanspaces.com/Usage-based%20Backups.jpg\" /><figcaption>Usage-based Backups</figcaption></figure>\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>Compliance-driven organizations:</strong> Supports processing workloads that are subject to stringent compliance standards like HIPAA and SOC 2 by enabling frequent backups that can be stored for longer duration to provide a granular audit trail for sensitive data.</p>\n</li>\n<li>\n<p><strong>Gaming and AI startups:</strong> Protect rapidly changing user data and AI models on GPU Droplets with high-frequency backups, allowing for quick rollbacks in case of an issue.</p>\n</li>\n<li>\n<p><strong>Development environments:</strong> Shorten Recovery Point Objectives (RPOs) in Continuous Integration (CI)/Continuous Deployment (CD) pipelines and other dev workflows by using 4-6 hour backups to protect code and data changes.</p>\n</li>\n<li>\n<p><strong>SaaS environments:</strong> Safeguard rapidly changing user data in customer support platforms and SaaS tools by implementing more frequent, reliable data protection.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Enhanced data integrity:</strong> Restore from a more recent point in time, reducing data loss in the event of an incident.</p>\n</li>\n<li>\n<p><strong>Transparent billing:</strong> A clear, predictable cost model based on actual stored data.</p>\n</li>\n<li>\n<p><strong>Compliance-ready:</strong> Configure granular RPO and retention policies to enable meeting internal and external compliance standards.</p>\n</li>\n</ul>\n<p>Check out our <a href=\"https://docs.digitalocean.com/products/backups/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> to learn more. Request access to preview usage-based backups by submitting this <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfE6K454v6sDy3Rp7Fo__I4tF7-F3g4DzAZ9SWG7FygxDKd_w/viewform\" rel=\"ugc nofollow noopener\" target=\"_blank\">form</a>.</p>\n<p>By building these new capabilities, we are providing a more robust, flexible, and cost-effective infrastructure to help you address the challenges of scaling your business and keeping costs under control.</p>\n<div class=\"callout info\">\n<p>Ready to get started?</p>\n<ul>\n<li>\n<p><strong>Try these features</strong> by heading to the <a href=\"https://cloud.digitalocean.com/login\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a>.</p>\n</li>\n<li>\n<p><strong>Learn more</strong> by visiting our <a href=\"https://www.digitalocean.com/docs\">product documentation</a>  and <a href=\"https://docs.digitalocean.com/platform/regional-availability/\" rel=\"ugc nofollow noopener\" target=\"_blank\">regional availability</a>.</p>\n</li>\n<li>\n<p><strong>Join our</strong> <a href=\"https://www.digitalocean.com/deploy#agenda\"><strong>Deploy London</strong></a> session: <em>How to Grow Without the Growing Pains</em>, to get more details on these new product updates. You can either attend in-person or virtually.</p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/landing/get-expert-guidance\"><strong>Get expert guidance for free</strong></a> to strengthen your cloud architecture, optimize costs, scale your infrastructure, and improve backup and disaster recovery.</p>\n</li>\n</ul>\n</div>\n</details>",
      "timestamp": 1761396314.8931162,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Announcing per-sec billing, new Droplet plans, BYOIP, and NAT gateway preview to reduce scaling costs",
      "link": "https://www.digitalocean.com/blog/dropletplans-persecbilling-byoip-natgateway",
      "published": "2025-10-02T08:03:13.867Z",
      "summary": "<p>To help users cut down on cloud spending that’s wasted due to over-provisioning and inflexible billing models, we’re introducing tools that offer granular control without sacrificing simplicity or cost-effectiveness. We’re excited to announce new product updates that offer granular cost control, improved performance, and a clear path to savings.</p>\n<div class=\"callout info\">\n<p><strong>TL;DR</strong></p>\n<p><strong>Per-second billing for Droplets</strong> begins January 1, 2026 to slash costs for ephemeral workloads. Read <a href=\"https://docs.digitalocean.com/products/droplets/details/pricing/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> to learn more and understand your current billing details in the <a href=\"https://cloud.digitalocean.com/account/billing?i=b1bbf4\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to prepare for this change</p>\n<p><strong>New dedicated Droplet plans</strong> are now generally available for a seamless performance upgrade. Visit your <a href=\"https://cloud.digitalocean.com/droplets/new?fleetUuid=2d108fad-6d02-4c95-af2f-4094f43eaed3&amp;i=403c6d&amp;region=sfo2&amp;size=s-2vcpu-4gb-120gb-intel\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to create these new Droplets.</p>\n<p><strong>Bring your own IP</strong> is now generally available to protect your IP reputation. Check out our <a href=\"https://docs.digitalocean.com/products/networking/reserved-ips/details/features/#bring-your-own-ip\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> or visit your <a href=\"https://cloud.digitalocean.com/networking/reserved_ips?i=b1bbf4\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to bring your own ip.</p>\n<p><strong>VPC NAT gateway</strong> is now available for public preview for centralized egress and static IPs. Check out our <a href=\"https://docs.digitalocean.com/products/networking/vpc/how-to/create-nat-gateway/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> or visit your <a href=\"https://cloud.digitalocean.com/networking/vpc?i=b1bbf4\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to set up your NAT gateway.</p>\n</div>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"droplets-per-second-billing-slashes-costs-for-ephemeral-workloads\"><a href=\"https://www.digitalocean.com/blog.atom#droplets-per-second-billing-slashes-costs-for-ephemeral-workloads\">Droplets per-second billing slashes costs for ephemeral workloads</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#droplets-per-second-billing-slashes-costs-for-ephemeral-workloads\"></a></h2>\n\n<p>Traditional hourly billing models for virtual machines have resulted in customers paying for idle time, even for short-lived workloads. Effective Jan 1, 2026, our billing model will transition to a per-second basis for <a href=\"https://www.digitalocean.com/products/droplets\">Droplets</a>, with a minimum charge of 60 seconds. This new approach aims to optimize cost control by charging for exact usage over a minute, making it simple to get precise billing for your actual usage. For sustained workloads, the monthly cap of 672 hours (24 hours x 28 days) of usage remains in place, ensuring your bill never exceeds the predictable monthly price.</p>\n<p>Imagine your development team uses a CI/CD pipeline that uses $84/month CPU-Optimized Droplet to run automated tests taking 10 minutes. With hourly billing, each 10-minute task would charge you for the full hour, costing about $0.125. If you ran this job 20 times a day, your daily cost would have been around $2.50, even though the total active time was just over 3 hours. Now, with per-second billing, that same 10-minute task costs only about $0.02. By running the job 20 times a day, your total daily cost is just around $0.42.</p>\n<p>Per-second billing can provide a similarly dramatic cost reduction by ensuring you only pay for the precise compute time you use. Effective Jan 1, 2026, this change will apply automatically to all Droplets. Customers will be able to access detailed usage information, including Droplet start and end times, through their billing history and downloadable CSV reports.</p>\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>CI/CD pipelines and automated testing:</strong> Only pay for the duration of testing jobs (minimum 60 seconds), not full hours.</p>\n</li>\n<li>\n<p><strong>Auto-scaled applications:</strong> Instances that briefly scale up will only be billed for active time (minimum 60 seconds), reducing costs.</p>\n</li>\n<li>\n<p><strong>Event-driven batch jobs:</strong> Intermittent, event-triggered tasks will be billed precisely for compute time (minimum 60 seconds), avoiding full-hour charges.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Granular cost control:</strong> Pay only for the seconds your Droplets are active, with a 60-second minimum.</p>\n</li>\n<li>\n<p><strong>Optimized auto-scaling:</strong> Scale up and down to meet demand without incurring full hourly charges for brief usage, with a 60-second minimum per instance.</p>\n</li>\n<li>\n<p><strong>Budget predictability:</strong> Retain the monthly cap for continuous workloads.</p>\n</li>\n</ul>\n<p>Get ready for this change, effective January 1, 2026: Read <a href=\"https://docs.digitalocean.com/products/droplets/details/pricing/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> to learn more and understand your current billing details in the <a href=\"https://cloud.digitalocean.com/account/billing?i=b1bbf4\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a>.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"new-dedicated-droplet-plans-for-a-seamless-performance-upgrade\"><a href=\"https://www.digitalocean.com/blog.atom#new-dedicated-droplet-plans-for-a-seamless-performance-upgrade\">New dedicated Droplet plans for a seamless performance upgrade</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#new-dedicated-droplet-plans-for-a-seamless-performance-upgrade\"></a></h2>\n\n<p>Historically, upgrading from a shared CPU Droplet to a dedicated CPU Droplet for more consistent, sustained performance meant a large, costly leap in resources. This created a significant pain point for customers who needed the better performance of premium Droplets while retaining their static IP and avoiding a complex data migration.</p>\n<p>To better address diverse needs, we are introducing new intermediate <a href=\"https://www.digitalocean.com/pricing/droplets#cpu-optimized\">Droplet</a> sizes for our dedicated CPU optimized and general-purpose plans. The new sizes include:</p>\n<ul>\n<li>\n<p><strong>Dedicated CPU Optimized Regular:</strong> 5x SSD variant</p>\n</li>\n<li>\n<p><strong>Dedicated CPU Optimized Premium:</strong> 5x SSD variant</p>\n</li>\n<li>\n<p><strong>Dedicated General Purpose Regular:</strong> 6.5x SSD variant</p>\n</li>\n<li>\n<p><strong>Dedicated General Purpose Premium:</strong> 5.5x SSD variant</p>\n</li>\n</ul>\n<p>Additionally, the following sizes are exclusively available through our sales channel:</p>\n<ul>\n<li>\n<p><strong>Dedicated CPU Optimized Premium:</strong> 96vCPU</p>\n</li>\n<li>\n<p><strong>Dedicated Storage Optimized Premium:</strong> 1.5x variant with 10TiB NVMe SSD</p>\n</li>\n</ul>\n<p>These new sizes provide a more balanced resource profile, offering a seamless in-place upgrade path without the need to recreate Droplets. This allows for easy migration to a dedicated environment, preserving your existing IP and application data, and avoiding payment for unneeded vCPUs or RAM.</p>\n<p>To learn more about various Droplet plans and how to choose the right one, refer to <a href=\"https://docs.digitalocean.com/products/droplets/concepts/choosing-a-plan/\" rel=\"ugc nofollow noopener\" target=\"_blank\">choose the right CPU Droplet</a>.</p>\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>AI/ML:</strong> A growing AI startup running a compute-intensive model on a shared CPU plan can seamlessly transition to a dedicated CPU plan to ensure consistent performance.</p>\n</li>\n<li>\n<p><strong>SaaS:</strong> A SaaS provider with a single-tenant architecture can easily upgrade a customer’s Droplet to a dedicated CPU plan as their needs grow, all while keeping their static IP and existing data.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Precise resource allocation:</strong> Get the right compute and memory for your workload without over-provisioning.</p>\n</li>\n<li>\n<p><strong>Zero-downtime upgrades:</strong> Transition from a shared to a dedicated CPU plan without the need for a full Droplet migration.</p>\n</li>\n<li>\n<p><strong>Cost-effective performance:</strong> Access consistent CPU performance without a steep increase in your monthly bill.</p>\n</li>\n</ul>\n<p>Visit your <a href=\"https://cloud.digitalocean.com/droplets/new?fleetUuid=2d108fad-6d02-4c95-af2f-4094f43eaed3&amp;i=403c6d&amp;region=sfo2&amp;size=s-2vcpu-4gb-120gb-intel\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to create these new Droplets or see <a href=\"https://www.digitalocean.com/pricing/droplets#cpu-optimized\">Droplet pricing page</a> for more details</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"bring-your-own-ip-byoip-to-protect-your-ip-reputation\"><a href=\"https://www.digitalocean.com/blog.atom#bring-your-own-ip-byoip-to-protect-your-ip-reputation\">Bring your own IP (BYOIP) to protect your IP reputation</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#bring-your-own-ip-byoip-to-protect-your-ip-reputation\"></a></h2>\n\n<p>Migrating applications between cloud providers can disrupt business continuity due to IP address changes affecting client allow-lists, SEO, and IP reputation. DigitalOcean’s new Generally Available Bring-Your-Own-IP (BYOIP) feature for <a href=\"https://www.digitalocean.com/products/droplets\">Droplets</a> or <a href=\"https://www.digitalocean.com/products/kubernetes\">Kubernetes</a> nodes allows seamless IPv4 prefix transfer, helping to ensure business continuity, preserving IP reputation, and enabling true provider-agnosticism. Our BYOIP service is generally set up in just 7 business days, significantly faster than the 1-4 weeks often required by hyperscalers, allowing quicker and less disruptive workload migration.</p>\n<figure><img alt=\"Bring your own IP\" src=\"https://networking.nyc3.digitaloceanspaces.com/byoip.gif\" /><figcaption>Bring your own IP</figcaption></figure>\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>SaaS:</strong> A company with a large B2B client base can use BYOIP to avoid having its clients’ allow-lists and firewalls break when migrating their app to DigitalOcean.</p>\n</li>\n<li>\n<p><strong>Global businesses:</strong> A company with global operations can maintain its established regional IPs to sell into another market.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Business continuity:</strong> Avoid downtime and service disruptions related to IP changes.</p>\n</li>\n<li>\n<p><strong>IP reputation preservation:</strong> Maintain your established reputation for services like email.</p>\n</li>\n<li>\n<p><strong>Vendor independence:</strong> Retain ownership and control of your IP addresses.</p>\n</li>\n</ul>\n<p>Learn more about BYOIP: Check out our <a href=\"https://docs.digitalocean.com/products/networking/reserved-ips/details/features/#bring-your-own-ip\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> or visit your <a href=\"https://cloud.digitalocean.com/networking/reserved_ips?i=b1bbf4\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to bring your own IP.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"vpc-network-address-translation-nat-gateway-preview-for-centralized-egress-and-static-ips\"><a href=\"https://www.digitalocean.com/blog.atom#vpc-network-address-translation-nat-gateway-preview-for-centralized-egress-and-static-ips\">VPC Network Address Translation (NAT) gateway preview for centralized egress and static IPs</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#vpc-network-address-translation-nat-gateway-preview-for-centralized-egress-and-static-ips\"></a></h2>\n\n<p>Traditionally, enabling private resources to access the internet was done by manually configuring NAT instances, repurposing bastion hosts as outbound proxies, or assigning public IPs to every instance. These approaches were operationally heavy, insecure, or costly. DigitalOcean’s new VPC NAT gateway available for public preview offers a fully managed, highly available, simple and scalable solution for SNAT and DNAT, designed to block external inbound connections and central egress traffic for consistent static IPs. NAT gateways preview is available for both Droplets and DigitalOcean Kubernetes (DOKS). This enables pods and nodes within a Virtual Private Cloud (VPC) to initiate outbound connections to the public internet using a single, shared public IP address, while keeping the IP addresses of internal resources private.</p>\n<p>Key features include easy setup, multiple NAT gateways per <a href=\"https://www.digitalocean.com/products/vpc\">VPC</a> for specific Droplet egress, and predictable pricing at $40 per size 1 NAT gateway (including 100 GB bandwidth, $0.01/GB overage), making it significantly cheaper than some market alternatives. It also supports up to 500,000 simultaneous connections, surpassing some market alternatives.</p>\n<figure><img alt=\"NAT gateway preview\" src=\"https://networking.nyc3.digitaloceanspaces.com/NAT%20gateway.gif\" /><figcaption>NAT gateway preview</figcaption></figure>\n<p><strong>Use cases:</strong></p>\n<ul>\n<li>\n<p><strong>AdTech:</strong> An ad-tech company can use a NAT gateway to help ensure all API calls to third-party ad networks originate from allowed static IP addresses.</p>\n</li>\n<li>\n<p><strong>E-commerce:</strong> An online store can use a NAT gateway to allow its backend services to fetch software updates from the internet without being exposed to public traffic.</p>\n</li>\n<li>\n<p><strong>Streaming:</strong> A video streaming service can use a NAT gateway to allow its content delivery network (CDN) edge servers to more securely access internal APIs for user authentication and content metadata without exposing these APIs to the public internet.</p>\n</li>\n<li>\n<p><strong>Gaming:</strong> An online gaming platform can use a NAT gateway to enable game servers to more securely connect to external APIs for player matchmaking, leaderboards, or anti-cheat services while keeping the game servers themselves better protected from direct internet exposure.</p>\n</li>\n<li>\n<p><strong>Analytics:</strong> A data analytics platform can use a NAT gateway to allow its data processing clusters to more securely pull data from external data sources or third-party APIs for analysis without exposing the clusters to public traffic.</p>\n</li>\n</ul>\n<p><strong>Benefits:</strong></p>\n<ul>\n<li>\n<p><strong>Enhanced security:</strong> More securely access outbound internet for Droplets or DOKS that do not have public IPs, and centralize control of egress traffic for enhanced security, compliance, and operational simplicity.</p>\n</li>\n<li>\n<p><strong>Simplified management:</strong> Avoid the complexity, instability, or cost of self-managed NAT instances or hyperscaler NAT gateways, while getting inbuilt High Availability. Maintain static source IPs for allow-listing with third-party services</p>\n</li>\n</ul>\n<p>Check out our <a href=\"https://docs.digitalocean.com/products/networking/vpc/how-to/create-nat-gateway/\" rel=\"ugc nofollow noopener\" target=\"_blank\">documentation</a> or visit your <a href=\"https://cloud.digitalocean.com/networking/vpc?i=b1bbf4\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a> to set up your NAT gateway.</p>\n<p>By building these new capabilities, we are providing a more robust, flexible, and cost-effective infrastructure to help you address the challenges of scaling your business and keeping costs under control.</p>\n<div class=\"callout info\">\n<p>Get started with these new tools today:</p>\n<ul>\n<li>\n<p><strong>Try these features</strong> by heading to the <a href=\"https://cloud.digitalocean.com/login\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean console</a>.</p>\n</li>\n<li>\n<p><strong>Learn more</strong> by visiting our <a href=\"https://www.digitalocean.com/docs\">product documentation</a>.</p>\n</li>\n<li>\n<p><strong>Join our</strong> <a href=\"https://www.digitalocean.com/deploy#agenda\"><strong>Deploy London</strong></a> session: <em>How to Grow Without the Growing Pains</em>, to get more details on these new product updates. You can either attend in-person or virtually.</p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/landing/get-expert-guidance\"><strong>Get expert guidance for free</strong></a> to strengthen your cloud architecture, optimize costs, scale your infrastructure, and improve backup and disaster recovery.</p>\n</li>\n</ul>\n</div>\n</details>",
      "timestamp": 1761396314.8931193,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Introducing DigitalOcean Organizations, a new and comprehensive account layer",
      "link": "https://www.digitalocean.com/blog/introducing-organizations-for-teams",
      "published": "2025-10-02T08:00:00.023Z",
      "summary": "<p>We’re excited to announce a powerful, new top-level account layer designed to bring all your teams together under one cohesive structure. This new account layer—we call it Organizations—is perfect for teams that need scalable structure without the massive, complex overhead of traditional enterprise cloud providers. Organizations was built to simplify account management for DigitalOcean customers who manage multiple teams and users.</p>\n<p>We’ve heard from our growing customers, agencies, partners, and enterprises that managing multiple teams, separate bills, and fragmented user access is a pain. With this new organization layer, you can better organize your team’s access even as you scale up.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"why-we-built-a-new-account-layer\"><a href=\"https://www.digitalocean.com/blog.atom#why-we-built-a-new-account-layer\">Why we built a new account layer</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#why-we-built-a-new-account-layer\"></a></h2>\n\n<p>Before today, every Team on DigitalOcean was treated as its own separate account. If you managed five different clients, five different projects, or five internal departments, that meant five separate bills, five different places to manage user access, and a fragmented view of your overall cloud presence.</p>\n<p>Our new account layer closes this gap by allowing you to consolidate multiple teams under one Organization, providing the centralized control and simplified operations needed by growing enterprises. By unifying your entire DigitalOcean presence into a single group, so you can streamline operations, gain more financial control, and build a cohesive environment that scales seamlessly.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"what-this-new-feature-means-for-your-team\"><a href=\"https://www.digitalocean.com/blog.atom#what-this-new-feature-means-for-your-team\">What this new feature means for your team</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#what-this-new-feature-means-for-your-team\"></a></h2>\n\n<p>The new Organizations account layer is designed to save you time, reduce administrative overhead, and give you a clearer picture of your entire DigitalOcean environment.</p>\n<h3 id=\"1-consolidated-billing-and-financial-control\"><a href=\"https://www.digitalocean.com/blog.atom#1-consolidated-billing-and-financial-control\">1. Consolidated billing and financial control</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#1-consolidated-billing-and-financial-control\"></a></h3>\n<p>For customers managing dozens of teams, manually reconciling separate invoices and payment methods is a monumental task. We’ve eliminated it. Here’s how:</p>\n<ul>\n<li>\n<p>Single invoice: Receive one unified invoice and utilize a single payment method for every Team included in an Organization.</p>\n</li>\n<li>\n<p>Detailed spend breakdown: Get complete financial clarity with a detailed spending breakdown per Team, allowing for easy internal billing or client reconciliation.</p>\n</li>\n<li>\n<p>Centralized credits and tax: Manage organization-level credits, discounts, and tax settings from one hub, ensuring they are applied universally.</p>\n</li>\n</ul>\n<p>This unified financial view simplifies accounting and gives you improved visibility into exactly how your cloud budget is spent.</p>\n<h3 id=\"2-streamlined-membership-management\"><a href=\"https://www.digitalocean.com/blog.atom#2-streamlined-membership-management\">2. Streamlined membership management</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#2-streamlined-membership-management\"></a></h3>\n<p>Managing users across dozens of separate accounts is both tedious and a security risk. DigitalOcean Organizations provides a central hub for all user administration.</p>\n<ul>\n<li>\n<p>Centralized user management: Organization owners and admins can view and manage members across all of your underlying Teams from a single dashboard.</p>\n</li>\n<li>\n<p>Secure workflow: Simplify user onboarding, offboarding, and permission updates from one place, ensuring a more secure and efficient workflow.</p>\n</li>\n</ul>\n<h3 id=\"3-scalable-and-intuitive-account-hierarchy\"><a href=\"https://www.digitalocean.com/blog.atom#3-scalable-and-intuitive-account-hierarchy\">3. Scalable and intuitive account hierarchy</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#3-scalable-and-intuitive-account-hierarchy\"></a></h3>\n<p>Whether you’re migrating existing client accounts or spinning up a new department, the process is now seamless and structured.</p>\n<ul>\n<li>\n<p>Self-service creation: Easily create new Teams within your Organization on demand, allowing you to expand your cloud presence instantly.</p>\n</li>\n<li>\n<p>Easy migration: We offer a clear, guided process for migrating your existing Teams into the new, consolidated organizational structure without disruption.</p>\n</li>\n<li>\n<p>Intuitive org dashboard: A centralized dashboard provides a clear, high-level view of your entire account hierarchy, allowing quick navigation and management of all administrative tasks.</p>\n</li>\n<li>\n<p>The easiest way to scale: With Organizations, you can easily onboard more users into your DigitalOcean environment whether they are a reseller, employee, or contractor to efficiently centralize your user management.</p>\n</li>\n</ul>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"gain-more-control-over-your-digitalocean-accounts-with-organizations\"><a href=\"https://www.digitalocean.com/blog.atom#gain-more-control-over-your-digitalocean-accounts-with-organizations\">Gain more control over your DigitalOcean accounts with Organizations</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#gain-more-control-over-your-digitalocean-accounts-with-organizations\"></a></h2>\n\n<p>DigitalOcean Organizations is the scalable solution you need to manage your entire cloud presence under one parent grouping. We’ve designed it to be intuitive and user-friendly, offering the necessary management features without the complexity and overhead of other massive cloud solutions.</p>\n<p>Ready to take control of your growing cloud environment? Get started today:</p>\n<ul>\n<li>\n<p><a href=\"http://docs.digitalocean.com/platform/organizations\" rel=\"ugc nofollow noopener\" target=\"_blank\">Explore our product documentation</a></p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/products/identity-access-management\">Visit our Identity and Access Management page</a></p>\n</li>\n</ul>\n</details>",
      "timestamp": 1761396314.8931227,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Storage that thinks for itself: Introducing Storage autoscaling, the newest feature for Managed Databases",
      "link": "https://www.digitalocean.com/blog/managed-databases-autoscale-storage",
      "published": "2025-10-02T08:00:00.023Z",
      "summary": "<p>TL;DR: Storage autoscaling for our suite of Managed Databases is here, offering an automated way to right-size your storage. Get started with the new feature now:</p>\n<p>→ <a href=\"https://cloud.digitalocean.com/registrations/new?activation_redirect=%2Fdatabases%2Fnew&amp;redirect_url=%2Fdatabases%2Fnew?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=autoscaling_for_storage\" rel=\"ugc nofollow noopener\" target=\"_blank\">Spin up a database cluster to access Storage autoscaling</a></p>\n<p><a href=\"https://docs.digitalocean.com/release-notes/\" rel=\"ugc nofollow noopener\" target=\"_blank\">→ Read our product documentation</a></p>\n<p>→ <a href=\"https://cloud.digitalocean.com/login\" rel=\"ugc nofollow noopener\" target=\"_blank\">Already have an account? Login</a></p>\n<p>→ <a href=\"https://www.digitalocean.com/company/contact/sales?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=autoscaling_for_storage\">Want to learn more? Contact sales</a></p>\n<p>Have you ever experienced the stress of a “disk full” error on your database? It’s a frustrating situation that can lead to performance issues, application downtime, and a frantic scramble to manually resize your storage. Rest easy developers and database administrators: you’re about to get your peace of mind back. Introducing <strong>Storage autoscaling,</strong> for our entire suite of Managed Databases.</p>\n<p>This new capability for DigitalOcean Managed Databases automatically increases your database’s storage size when needed, so you don’t have to. It’s the automated, proactive safety net that your growing application needs.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"how-it-works-your-database-but-smarter\"><a href=\"https://www.digitalocean.com/blog.atom#how-it-works-your-database-but-smarter\">How it works: your database, but smarter</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#how-it-works-your-database-but-smarter\"></a></h2>\n\n<p>At its core, Storage autoscaling is about proactive prevention. The way it works is it continuously monitors your database’s disk utilization. When a configurable threshold is exceeded, it automatically scales up your storage in the background. This seamless, automated process helps to ensure that your database remains available without requiring any manual intervention from you. All Managed Database users have access to this new feature, as it is now available for all of our offerings, including MySQL, PostgreSQL, MongoDB, Kafka, and OpenSearch.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"how-storage-autoscaling-helps-you\"><a href=\"https://www.digitalocean.com/blog.atom#how-storage-autoscaling-helps-you\">How Storage autoscaling helps you</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#how-storage-autoscaling-helps-you\"></a></h2>\n\n<p>Autoscaling isn’t just a new feature. It’s a better way to manage your growing application. Here’s what this launch means for you:</p>\n<h3 id=\"1-improved-performance-and-reliability\"><a href=\"https://www.digitalocean.com/blog.atom#1-improved-performance-and-reliability\">1. Improved performance and reliability</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#1-improved-performance-and-reliability\"></a></h3>\n<p>This feature is designed to prevent performance degradation and potential outages caused by a database running out of disk space. By automatically adding storage when needed, it helps ensure your application remains responsive, even during unexpected traffic spikes or data growth. All in all, this new feature helps to ensure that your application will stay up and running as its data and needs grow.</p>\n<h3 id=\"2-reduced-operational-overhead\"><a href=\"https://www.digitalocean.com/blog.atom#2-reduced-operational-overhead\">2. Reduced operational overhead</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#2-reduced-operational-overhead\"></a></h3>\n<p>Remember those manual checks and late-night alerts about disk space? With autoscaling, those are a thing of the past. Our platform takes care of the critical maintenance task of resizing storage, freeing up your development team to focus on building new features, innovation, and improving your core product, not on database administration.</p>\n<h3 id=\"3-cost-optimization\"><a href=\"https://www.digitalocean.com/blog.atom#3-cost-optimization\">3. Cost optimization</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#3-cost-optimization\"></a></h3>\n<p>This feature helps to promote cost-efficiency by letting you provision storage in smaller, automatic increments as you need them. You avoid having to buy and pay for large amounts of unused disk space upfront. This flexibility eliminates the risk of a costly, emergency upgrade to a much larger plan, keeping your storage costs minimized and directly aligned with your actual requirements.</p>\n<h3 id=\"4-ability-to-right-size-your-workloads\"><a href=\"https://www.digitalocean.com/blog.atom#4-ability-to-right-size-your-workloads\">4. Ability to right-size your workloads</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#4-ability-to-right-size-your-workloads\"></a></h3>\n<p>Autoscaling helps to ensure that you always have the right amount of storage, both automatically and in near real time. Instead of overprovisioning “just in case_”_, this feature scales storage up precisely when you need it, monitoring your cluster to match resources to demand. By removing the guesswork, Storage autoscaling helps keep workloads right-sized and performance optimized without manual intervention.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"how-developers-use-storage-autoscaling\"><a href=\"https://www.digitalocean.com/blog.atom#how-developers-use-storage-autoscaling\">How developers use Storage autoscaling</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#how-developers-use-storage-autoscaling\"></a></h2>\n\n<p>To show you how this feature can make a difference, here are a few examples:</p>\n<ul>\n<li>\n<p>Managing traffic spikes and seasonal surges: For E-commerce companies, Black Friday sales, viral marketing campaigns, or app launches can drive huge bursts of transactions. With autoscaling, your database scales storage in lockstep with demand without manual intervention.</p>\n</li>\n<li>\n<p>Preparing for volatile data such as log and event data growth: Apps that store logs, metrics, or IoT event data can balloon in size during an incident or audit period. Autoscaling means you can preserve all the data you need without scrambling for space.</p>\n</li>\n<li>\n<p>Multi-tenant growth within a SaaS company: In the Software-as-a-Service (SaaS) industry, a single high-activity customer (or a rush of new sign-ups) can push your storage past its limit. Autoscaling makes that growth a non-event from an ops perspective.</p>\n</li>\n<li>\n<p>Failproofing CI/CD test environments: Automated test runs often generate massive temporary datasets. Autoscaling helps ensure your test pipelines don’t fail mid-run due to full disks.</p>\n</li>\n</ul>\n<p>Storage autoscaling provides a simple, yet powerful solution to a common problem. Now you can have confidence that your managed database can seamlessly handle data growth without manual intervention, allowing you to focus on what matters most: building an amazing application.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"get-started\"><a href=\"https://www.digitalocean.com/blog.atom#get-started\">Get started</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#get-started\"></a></h2>\n\n<ul>\n<li>\n<p><a href=\"https://cloud.digitalocean.com/registrations/new?activation_redirect=%2Fdatabases%2Fnew&amp;redirect_url=%2Fdatabases%2Fnew?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=autoscaling_for_storage\" rel=\"ugc nofollow noopener\" target=\"_blank\">Spin up a database cluster to access Storage autoscaling</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.digitalocean.com/release-notes/\" rel=\"ugc nofollow noopener\" target=\"_blank\">Read our product documentation</a></p>\n</li>\n<li>\n<p><a href=\"https://cloud.digitalocean.com/login?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=autoscaling_for_storage\" rel=\"ugc nofollow noopener\" target=\"_blank\">Already have an account? Login</a></p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/company/contact/sales?utm_source=blog&amp;utm_medium=blog&amp;utm_campaign=autoscaling_for_storage\">Want to learn more? Contact sales</a></p>\n</li>\n</ul>\n</details>",
      "timestamp": 1761396314.8931258,
      "translated": false
    },
    {
      "feed_name": "DigitalOcean Kubernetes Content",
      "source_language": "en",
      "title": "Build Smarter Agents with Image Generation, Auto-Indexing, VPC Security, and new AI Tools on DigitalOcean Gradient™ AI Platform",
      "link": "https://www.digitalocean.com/blog/new-capabilities-security-developer-tools-gradient-ai-platform",
      "published": "2025-10-02T07:12:50.004Z",
      "summary": "<p>At Deploy London 2025, we shared the next chapter of the <a href=\"https://www.digitalocean.com/products/gradient/platform\">Gradient AI Platform</a>. We’re making it easier for developers and businesses to build production-ready AI applications, whether you’re experimenting with your first agent or scaling an enterprise workload.</p>\n<p>Today, in that spirit, we’re introducing a new wave of features that expand what you can build with the Gradient AI Platform, give you greater security and control, and accelerate your development workflow.</p>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"expanding-capabilities-for-gradient-ai-platform\"><a href=\"https://www.digitalocean.com/blog.atom#expanding-capabilities-for-gradient-ai-platform\">Expanding capabilities for Gradient AI Platform</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#expanding-capabilities-for-gradient-ai-platform\"></a></h2>\n\n<p>AI applications are becoming more multimodal and data-driven, able to work with text, images, audio, and other formats. With Image Model Support and Knowledge Base Auto-Indexing, these new Gradient AI Platform features make it easier than ever to give your agents a wide range of inputs and knowledge sources.</p>\n<h3 id=\"image-model-support\"><a href=\"https://www.digitalocean.com/blog.atom#image-model-support\">Image Model Support</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#image-model-support\"></a></h3>\n<p>You can now generate images programmatically using text prompts through Gradient AI Platform’s Serverless Inference API, powered by OpenAI’s gpt-image-1 model. This is the platform’s first non-text modality (with more coming soon), expanding our capabilities from text-only to include text-to-image generation.</p>\n<ul>\n<li><strong>Text-to-image generation –</strong> Generate images directly via the Serverless Inference API.</li>\n<li><strong>API integration –</strong> OpenAI compatible using the image generation endpoint. For code examples and setup instructions, check out the <a href=\"https://github.com/digitalocean-labs/gradient-starter-kit\" rel=\"ugc nofollow noopener\" target=\"_blank\">DigitalOcean Gradient AI starter kit on GitHub</a>.</li>\n<li><strong>Unified billing –</strong> Image generation charges appear on your DigitalOcean account alongside other services.</li>\n<li><strong>Developer-first workflow –</strong> Direct API access without requiring UI-based tools or self-hosting.</li>\n<li><strong>Enterprise authentication –</strong> Use Model Access Keys for secure access.</li>\n</ul>\n<p>With this capability, you can create images using natural language prompts for projects such as content generation, marketing assets, product imagery, and more.</p>\n<p><a href=\"https://docs.digitalocean.com/products/gradient-ai-platform/details/models/\" rel=\"ugc nofollow noopener\" target=\"_blank\">Get started with Image Model Support →</a></p>\n<h3 id=\"knowledge-base-auto-indexing\"><a href=\"https://www.digitalocean.com/blog.atom#knowledge-base-auto-indexing\">Knowledge Base Auto-Indexing</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#knowledge-base-auto-indexing\"></a></h3>\n<p>Keep your agents up to date without the manual work. With auto-indexing, new and updated documents from connected sources are automatically detected, fetched, and re-indexed into your OpenSearch database to help keep your agent’s knowledge current.</p>\n<ul>\n<li><strong>Source connection –</strong> Connect integrations such as Google Drive, Amazon S3, or Dropbox.</li>\n<li><strong>Auto-indexing toggle –</strong> Turn on auto-indexing and set a default schedule.</li>\n<li><strong>Customizable frequency –</strong> Choose from daily, weekly, or manual indexing.</li>\n<li><strong>Ingestion logic –</strong> Automatically handle new, updated, or deleted documents.</li>\n<li><strong>Sync logs –</strong> Review the last sync time, status, and errors for each source.</li>\n</ul>\n<p>With auto-indexing, you can keep your knowledge bases up to date automatically, saving time and reducing manual maintenance.</p>\n<p><a href=\"https://cloud.digitalocean.com/registrations/new?activation_redirect=%2Fgen-ai&amp;redirect_url=%2Fgen-ai\" rel=\"ugc nofollow noopener\" target=\"_blank\">Try Auto-Indexing →</a></p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"enterprise-ready-infrastructure\"><a href=\"https://www.digitalocean.com/blog.atom#enterprise-ready-infrastructure\">Enterprise-ready infrastructure</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#enterprise-ready-infrastructure\"></a></h2>\n\n<p>As adoption of AI scales, so do requirements for privacy, compliance, and security. We’re making it easier and more secure for enterprises to run AI reliably in production.</p>\n<h3 id=\"vpc-integration\"><a href=\"https://www.digitalocean.com/blog.atom#vpc-integration\">VPC Integration</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#vpc-integration\"></a></h3>\n<p>The new Gradient AI Platform virtual private cloud (VPC) feature enables you to establish more secure, private network connections between services and resources in your own VPC. This helps eliminate exposure to the public internet while keeping deployments in DigitalOcean’s managed infrastructure.</p>\n<ul>\n<li><strong>Agent VPC connectivity –</strong> Connect agents running in the platform to private customer databases.</li>\n<li><strong>Egress IP visibility –</strong> See outbound IP addresses to configure your firewall.</li>\n<li><strong>Cross-VPC support –</strong> Enable connectivity to multiple VPCs as needed.</li>\n</ul>\n<p>With the new VPC integration, you can more securely run agents and indexing jobs with private network access, supporting security requirements without managing infrastructure yourself.</p>\n<p><a href=\"https://cloud.digitalocean.com/registrations/new?activation_redirect=%2Fgen-ai&amp;redirect_url=%2Fgen-ai\" rel=\"ugc nofollow noopener\" target=\"_blank\">Learn more about VPC Integration →</a></p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"accelerating-development\"><a href=\"https://www.digitalocean.com/blog.atom#accelerating-development\">Accelerating development</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#accelerating-development\"></a></h2>\n\n<p>Every team builds differently. Some developers want full control in code; others prefer visual tools to prototype quickly. With this release, we’re supporting both.</p>\n<h3 id=\"gradient-ai-agent-development-kit-private-preview\"><a href=\"https://www.digitalocean.com/blog.atom#gradient-ai-agent-development-kit-private-preview\">Gradient AI Agent Development Kit (private preview)</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#gradient-ai-agent-development-kit-private-preview\"></a></h3>\n<p>The Gradient AI Agent Development Kit (ADK) is a code-first toolkit that helps you build, test, and deploy AI agent workflows directly from your development environment. It provides a code-first framework to define agent workflows, integrate models, and connect tools or APIs, with traces and insights viewable in your workspace.</p>\n<ul>\n<li><strong>Expressive APIs –</strong> Define agent workflows and manage deployments entirely through code.</li>\n<li><strong>Model integration –</strong> Connect open-source or commercial models to your agents.</li>\n<li><strong>Custom tools and connectors –</strong> Wrap APIs or functions for use by your agents.</li>\n<li><strong>Traces and insights –</strong> View agent sessions and workflow traces via your workspace interface or through code.</li>\n</ul>\n<p>The Gradient AI Agent Development Kit will be available soon, <a href=\"https://forms.gle/1XigKYeMAVmp7KpFA\" rel=\"ugc nofollow noopener\" target=\"_blank\">sign up for the private preview</a> to get early access and start building smarter, production-ready agents.</p>\n<h3 id=\"gradient-ai-genie-private-preview\"><a href=\"https://www.digitalocean.com/blog.atom#gradient-ai-genie-private-preview\">Gradient AI Genie (private preview)</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#gradient-ai-genie-private-preview\"></a></h3>\n<p>Also launching soon, Genie is a new IDE-integrated experience in Visual Studio Code. It lets you interact with your agents in natural language from inside VS Code, helping you design, configure, and connect multi-agent systems.</p>\n<ul>\n<li><strong>Get started –</strong> Configure agents in VS Code with the Gradient AI ADK.</li>\n<li><strong>Get help and recommendations –</strong> Receive workflow guidance, on-demand tips, and improved output.</li>\n<li><strong>Automate –</strong> Orchestrate agents, build guardrails, and generate synthetic datasets.</li>\n</ul>\n<p>With Gradient AI Genie, you can start building and orchestrating multi-agent systems without leaving your IDE. <a href=\"https://forms.gle/1XigKYeMAVmp7KpFA\" rel=\"ugc nofollow noopener\" target=\"_blank\">Sign up for the private preview</a> to get early access to the new feature.</p>\n</details>\n<details class=\"collapsible\" open=\"\">\n\n<h2 id=\"and-much-more-to-come\"><a href=\"https://www.digitalocean.com/blog.atom#and-much-more-to-come\">And much more to come</a><a class=\"hash-anchor\" href=\"https://www.digitalocean.com/blog.atom#and-much-more-to-come\"></a></h2>\n\n<p>With these new features, you can streamline how you build, manage, and secure AI agents—whether you’re generating images, keeping knowledge bases up to date, or connecting your workloads via private networks. And with the upcoming Gradient AI Agent Development Kit and Gradient AI Genie, you’ll soon have more powerful tools to develop, test, and orchestrate multi-agent systems directly from your development environment. These updates are designed to help you move faster, work more efficiently, and tackle increasingly complex AI workflows with confidence.</p>\n<p>Want to explore these new features in depth? <a href=\"https://streamyard.com/watch/ruj77ahiTYPY\" rel=\"ugc nofollow noopener\" target=\"_blank\">Join our webinar on October 8</a>, where we’ll walk through the updates and share practical tips for building with the Gradient AI Platform.</p>\n</details>",
      "timestamp": 1761396314.893129,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "AI Development Platforms: A Complete Guide",
      "link": "https://www.mirantis.com/blog/ai-development-platforms-a-complete-guide",
      "published": "Wed, 22 Oct 2025 00:00:00 GMT",
      "summary": "AI development platforms have become the foundation for building, deploying, and scaling machine learning models in enterprises. These platforms help teams move from experimentation to production quickly and securely. Let’s explore how AI development platforms work, where they deliver value, and how to choose the right solution for your enterprise.",
      "timestamp": 1761396315.732566,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Kubernetes Cost Management: The Definitive Guide",
      "link": "https://www.mirantis.com/blog/kubernetes-cost-management",
      "published": "Mon, 20 Oct 2025 22:00:00 GMT",
      "summary": "Master Kubernetes cost optimization with tools, strategies, and automation designed to help enterprises reduce spend and maximize efficiency.",
      "timestamp": 1761396315.7325706,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "The New Mirantis OpenStack for K8s Trial for VMware Users",
      "link": "https://www.mirantis.com/blog/the-new-mirantis-openstack-for-k8s-trial-for-vmware-users",
      "published": "Thu, 16 Oct 2025 00:00:00 GMT",
      "summary": "We are excited to announce the updated TryMOSK, a trial program for Mirantis OpenStack for Kubernetes (MOSK), which makes it easier for VMware users to explore (MOSK) and see what cloud-native virtualization can do for them.\nWith this refreshed trial, VMware users can now deploy and test MOSK directly on their existing vSphere environment. No bare metal servers, complex setup, or OpenStack expertise is required. A production-style OpenStack environment with compute, storage, and networking services can be set up in just a few hours.",
      "timestamp": 1761396315.7325742,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Introducing Pelagia: Open Source Lifecycle Management for Ceph on Kubernetes",
      "link": "https://www.mirantis.com/blog/introducing-pelagia-open-source-lifecycle-management-for-ceph-on-kubernetes",
      "published": "Wed, 15 Oct 2025 00:00:00 GMT",
      "summary": "Today, Mirantis is releasing Pelagia—a foundational building block for modern cloud infrastructure that we are contributing to the community. Pelagia is a Kubernetes controller for lifecycle management of Ceph Software Defined Storage on Kubernetes. The Pelagia controller reconciles the desired state of a Ceph cluster into concrete operations and exposes a concise set of high-level CRDs/APIs that offer a unified control surface for the cluster. These APIs simplify common management routines, making large, highly loaded storage clusters easier to operate.",
      "timestamp": 1761396315.7325792,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Understanding Machine Learning Inference: A Guide",
      "link": "https://www.mirantis.com/blog/understanding-machine-learning-inference-a-guide",
      "published": "Fri, 03 Oct 2025 00:00:00 GMT",
      "summary": "Training a machine learning model is exciting. It is a lab experiment. But until that model is deployed and generating predictions on live data, it is just theory. The value is unlocked in machine learning inference, the step where an ML model starts shaping real-world outcomes.\nThis article will break down what is machine learning inference, how the ML inference pipeline works, the difference between ML inference vs training, the types of ML inference in production, and how to approach deploying machine learning models for inference at enterprise scale.",
      "timestamp": 1761396315.7325826,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Agentic AI Frameworks: Building Custom Agents",
      "link": "https://www.mirantis.com/blog/agentic-ai-frameworks-building-custom-agents",
      "published": "Thu, 02 Oct 2025 00:00:00 GMT",
      "summary": "Agentic AI is where enterprise AI grows up. Instead of spitting out text or code, agents use context, plan steps, and take action toward a goal. \nEnterprises need structure to do that at scale. That is where agentic AI frameworks come in. This guide defines what is agentic AI, compares top agentic AI frameworks, and lays out a clear plan to build custom AI agents across your environment.",
      "timestamp": 1761396315.732586,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "GPU Infrastructure's 15-Minute Miracle: When Complexity Meets Composability",
      "link": "https://www.mirantis.com/blog/gpu-infrastructure-s-15-minute-miracle-when-complexity-meets-composability",
      "published": "Wed, 01 Oct 2025 00:00:00 GMT",
      "summary": "If you've ever tried to stand up a production GPU cluster for AI workloads, you know the drill. It's a multi-week if not multi-month odyssey through dependency hell, where every framework wants its own special snowflake configuration, and by the time you're done, your best engineers have aged visibly.\n\nAt AI Infrastructure Field Day, we had the opportunity to show the industry a different way to build AI Infrastructure. When our CTO Shaun O'Meara claimed we could spin up a fully operational NVIDIA Run.ai inference cluster in about 15 minutes, the room full of infrastructure experts were understandably interested...",
      "timestamp": 1761396315.7325892,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Kubernetes Distributions: Which Option Is Best for Your Organization?",
      "link": "https://www.mirantis.com/blog/kubernetes-distributions-which-option-is-best-for-your-organization-",
      "published": "Wed, 01 Oct 2025 00:00:00 GMT",
      "summary": "Production use of Kubernetes is rarely simple. The open-source project delivers only the basics, leaving the job of selecting and integrating components that make a K8s cluster production-ready up to individual teams. Kubernetes distributions close that gap by bundling defaults, tools, and enterprise support, making clusters easier to deploy and maintain. This guide covers what distributions are, how they differ from upstream Kubernetes, the main types available, and where Mirantis fits.",
      "timestamp": 1761396315.7325926,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Securing Model Context Protocol for Mass Enterprise Adoption",
      "link": "https://www.mirantis.com/blog/securing-model-context-protocol-for-mass-enterprise-adoption",
      "published": "Tue, 30 Sep 2025 09:00:00 GMT",
      "summary": "Anthropic’s Model Context Protocol (MCP) has become the de-facto interface for agents to reach tools, data, and other agents. It has become the standard for agents.  Now we need to make MCP safe, governable, and observable at enterprise scale, so agents can be used for mission-critical enterprise use cases and access more sensitive data sources, such as electronic healthcare records (EHR).",
      "timestamp": 1761396315.732596,
      "translated": false
    },
    {
      "feed_name": "Mirantis Blog",
      "source_language": "en",
      "title": "Top 15 Kubernetes Use Cases",
      "link": "https://www.mirantis.com/blog/top-15-kubernetes-use-cases",
      "published": "Fri, 26 Sep 2025 00:00:00 GMT",
      "summary": "Kubernetes has changed how organizations deploy, test, and scale their applications. Right now it’s the most popular container orchestration platform in the world. In this article, we will explore the top use cases for Kubernetes, see where it truly shines, understand how it benefits your organization, and see when you shouldn’t use it.",
      "timestamp": 1761396315.7325993,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Cloud Native Sustainability Month 2025: A global community movement for greener tech",
      "link": "https://www.cncf.io/blog/2025/10/24/cloud-native-sustainability-month-2025-a-global-community-movement-for-greener-tech/",
      "published": "Fri, 24 Oct 2025 14:00:00 +0000",
      "summary": "Following the success of previous years, CNCF’s Sustainability Month is back — bigger and greener than ever. Organized by the TAG Operational Resilience community, this month-long global initiative brings together practitioners, developers, and advocates to explore...",
      "timestamp": 1761396317.3050675,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "CNCF embraces LFX Self Service for calendar management",
      "link": "https://www.cncf.io/blog/2025/10/23/cncf-embraces-lfx-self-service-for-calendar-management/",
      "published": "Thu, 23 Oct 2025 14:33:19 +0000",
      "summary": "The Cloud Native Computing Foundation (CNCF) has experienced remarkable growth since its inception, welcoming its first project, Kubernetes, on March 10, 2016. By 2025, the CNCF proudly supports over 200 active projects, generating thousands of meetings...",
      "timestamp": 1761396317.3050716,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Highlights from CNCF’s first Open Observability Summit",
      "link": "https://www.cncf.io/blog/2025/10/23/highlights-from-cncfs-first-open-observability-summit/",
      "published": "Thu, 23 Oct 2025 14:00:00 +0000",
      "summary": "Ambassador post originally published on Medium by Dotan Horovits It’s about time open observability had its own industry-wide, vendor-neutral event. This year, the Cloud Native Computing Foundation (CNCF) finally made it happen with the inaugural&#160;Open Observability Summit, bringing...",
      "timestamp": 1761396317.305075,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "LFX Insights: A new way to understand open source projects",
      "link": "https://www.cncf.io/blog/2025/10/22/lfx-insights-a-new-way-to-understand-open-source-projects/",
      "published": "Wed, 22 Oct 2025 16:38:23 +0000",
      "summary": "Open source forms the backbone of modern technology ecosystems. From orchestration and observability to frameworks and developer tools, today’s technology choices depend on projects we may not control but rely on every day. The challenge: not...",
      "timestamp": 1761396317.3050783,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Cloud Native Maturity Model 4.0 (Beta): Reflecting what’s next for cloud native — and we want your input",
      "link": "https://www.cncf.io/blog/2025/10/22/cloud-native-maturity-model-4-0-beta-reflecting-whats-next-for-cloud-native-and-we-want-your-input/",
      "published": "Wed, 22 Oct 2025 14:00:00 +0000",
      "summary": "The CNCF Cartografos Working Group is excited to announce the beta release of the Cloud Native Maturity Model 4.0. This version expands the framework to include AI, FinOps, and evolving cultural practices. We invite the community...",
      "timestamp": 1761396317.3050816,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Applying RBAC to databases on Kubernetes: Practical, real-world examples",
      "link": "https://www.cncf.io/blog/2025/10/21/applying-rbac-to-databases-on-kubernetes-practical-real-world-examples/",
      "published": "Tue, 21 Oct 2025 14:00:00 +0000",
      "summary": "Introduction Role-Based Access Control (RBAC) is one of the most important security features in any cloud native platform. It determines who can do what inside the Kubernetes Cluster, helping teams give the right access to the...",
      "timestamp": 1761396317.305085,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Adding distributed tracing to AI Gateway: My LFX mentorship journey",
      "link": "https://www.cncf.io/blog/2025/10/20/adding-distributed-tracing-to-ai-gateway-my-lfx-mentorship-journey/",
      "published": "Mon, 20 Oct 2025 14:00:00 +0000",
      "summary": "In today’s rapidly evolving AI landscape, effectively monitoring and debugging AI Gateways has become a critical challenge. This article shares my complete experience through the LFX Mentorship program, where I added OpenTelemetry distributed tracing support to...",
      "timestamp": 1761396317.3050883,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Why Autonomous Infrastructure is the future: From intent to self-operating systems",
      "link": "https://www.cncf.io/blog/2025/10/17/why-autonomous-infrastructure-is-the-future-from-intent-to-self-operating-systems/",
      "published": "Fri, 17 Oct 2025 18:03:45 +0000",
      "summary": "Executive summary: We&#8217;re at an inflection point where AI-generated code meets AI-managed infrastructure, creating truly self-sustaining systems. This convergence transforms infrastructure from static pipelines to autonomous systems that build, govern, heal, and optimize themselves. Organizations have...",
      "timestamp": 1761396317.3050914,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "KubeCon + CloudNativeCon North America 2025 Co-Located Event Deep Dive: Platform Engineering Day",
      "link": "https://www.cncf.io/blog/2025/10/17/kubecon-cloudnativecon-north-america-2025-co-located-event-deep-dive-platform-engineering-day/",
      "published": "Fri, 17 Oct 2025 13:55:00 +0000",
      "summary": "This marks the fourth edition of Platform Engineering Day, following successful events in Paris (2024), Salt Lake City (2024), and London (2025). We’re excited to continue exploring case studies and deep technical dives as platform engineering...",
      "timestamp": 1761396317.3050947,
      "translated": false
    },
    {
      "feed_name": "CNCF Blog",
      "source_language": "en",
      "title": "Efficient autoscaling: Keeping performance, reliability, and cost in mind with open source projects",
      "link": "https://www.cncf.io/blog/2025/10/16/efficient-autoscaling-keeping-performance-reliability-and-cost-in-mind-with-open-source-projects/",
      "published": "Thu, 16 Oct 2025 16:30:52 +0000",
      "summary": "During ContainerDays in Hamburg, Kelsey Hightower posed a simple but powerful question: “Why are we still talking about containers?” His point resonated with me deeply — even in the AI era, the cloud-native community is still...",
      "timestamp": 1761396317.3050983,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "Building VM golden images with Packer",
      "link": "https://kubevirt.io//2025/Building-VM-golden-image-with-Packer.html",
      "published": "2025-09-15T00:00:00+00:00",
      "summary": "Packer plugin for KubeVirt that builds VM golden images inside Kubernetes.",
      "timestamp": 1761396318.2024782,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "KubeVirt v1.6.0",
      "link": "https://kubevirt.io//2025/changelog-v1.6.0.html",
      "published": "2025-07-30T00:00:00+00:00",
      "summary": "This article provides information about KubeVirt release v1.6.0 changes",
      "timestamp": 1761396318.2024825,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "KubeVirt v1.5.0",
      "link": "https://kubevirt.io//2025/changelog-v1.5.0.html",
      "published": "2025-03-13T00:00:00+00:00",
      "summary": "This article provides information about KubeVirt release v1.5.0 changes",
      "timestamp": 1761396318.202486,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "Announcing the release of KubeVirt v1.5",
      "link": "https://kubevirt.io//2025/KubeVirt-v1-5_release.html",
      "published": "2025-03-05T00:00:00+00:00",
      "summary": "With the release of KubeVirt v1.5 we see the community adding some features that align with more traditional virtualization platforms.",
      "timestamp": 1761396318.2024894,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "VirtualMachineInstanceMigrations RBAC hardening",
      "link": "https://kubevirt.io//2025/Hardening-VMIM.html",
      "published": "2025-02-26T00:00:00+00:00",
      "summary": "Apply the principle of least privilege (PoLP) to VirtualMachineInstanceMigrations",
      "timestamp": 1761396318.2024927,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "KubeVirt v1.4.0",
      "link": "https://kubevirt.io//2024/changelog-v1.4.0.html",
      "published": "2024-11-13T00:00:00+00:00",
      "summary": "This article provides information about KubeVirt release v1.4.0 changes",
      "timestamp": 1761396318.202496,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "You wanted more? It’s KubeVirt v1.4!",
      "link": "https://kubevirt.io//2024/KubeVirt-v1-4.html",
      "published": "2024-11-12T00:00:00+00:00",
      "summary": "Introducing the KubeVirt v1.4 release",
      "timestamp": 1761396318.2024992,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "KubeVirt v1.3.0",
      "link": "https://kubevirt.io//2024/changelog-v1.3.0.html",
      "published": "2024-07-17T00:00:00+00:00",
      "summary": "This article provides information about KubeVirt release v1.3.0 changes",
      "timestamp": 1761396318.2025025,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "KubeVirt Summit 2024 CfP is open!",
      "link": "https://kubevirt.io//2024/KubeVirt-Summit-2024-CfP.html",
      "published": "2024-03-19T00:00:00+00:00",
      "summary": "Join us for the KubeVirt community's fourth annual dedicated online event",
      "timestamp": 1761396318.2025058,
      "translated": false
    },
    {
      "feed_name": "KubeVirt Blog",
      "source_language": "en",
      "title": "KubeVirt v1.2.0",
      "link": "https://kubevirt.io//2024/changelog-v1.2.0.html",
      "published": "2024-03-05T00:00:00+00:00",
      "summary": "This article provides information about KubeVirt release v1.2.0 changes",
      "timestamp": 1761396318.2025092,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Argo CD v3.2 Release Candidate",
      "link": "https://blog.argoproj.io/argo-cd-v3-2-release-candidate-4c939b63d9c4?source=rss----21be29067291---4",
      "published": "Mon, 29 Sep 2025 18:33:29 GMT",
      "summary": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ja7wd3DoaBMnOch5PBNabg.png\" /></figure><p>After months of contributions, discussions, and testing from the community, <a href=\"https://github.com/argoproj/argo-cd/releases/tag/v3.2.0-rc1\"><strong>Argo CD v3.2 RC</strong> is here</a>! While it’s not the final release, this milestone gives us a sneak peek into what’s coming next for GitOps practitioners and platform teams.</p><p>This release candidate brings a collection of exciting new features along with critical bug fixes, and in this post, we’ll highlight the most important updates you should be aware of.</p><p><strong>IMPORTANT:</strong> Please note that Argo CD v2.x will not be supported once the Argo CD v3.2 release is released</p><h3>Health Checks Added for GitOps Promoter</h3><p>This PR introduces comprehensive health checks for GitOps Promoter resources, enabling enhanced monitoring and reliability for promotion workflows within Argo CD.</p><p>The new health checks cover various GitOps Promoter custom resource definitions, such as CommitStatus, PullRequest, PromotionStrategy, and ChangeTransferPolicy, providing detailed runtime status to help users better diagnose and maintain promotion pipelines.</p><p>Shoutout to <a href=\"https://github.com/crenshaw-dev\">Michael Crenshaw</a> (Intuit) for this feature!</p><h3>New Deletion Strategy for Progressive Sync</h3><p>With Argo CD v3.2 RC, Progressive Sync now supports configurable deletion strategies for applications deployed by an ApplicationSet. Until now, deletions have always happened all at once, with every application removed in parallel and without any defined order. While this behavior remains the default, a new Reverse option has been introduced. When enabled, applications are deleted in the opposite order of their deployment, as defined in progressiveSync. This ensures that each application is fully removed before proceeding to the next, making it especially useful for workloads that depend on a specific teardown sequence.</p><p>For example, let’s say you’re deploying applications in a specific order using <strong>Progressive Sync</strong>. With the new deletionOrder field, you can now control how those applications are torn down.</p><pre>apiVersion: argoproj.io/v1alpha1<br />kind: ApplicationSet<br />metadata:<br />  name: sample-appset<br />spec:<br />  strategy:<br />    type: RollingSync<br />    rollingSync:<br />      steps:<br />        - matchExpressions:<br />            - key: environment<br />              operator: In<br />              values: [ &quot;dev&quot; ]<br />        - matchExpressions:<br />            - key: environment<br />              operator: In<br />              values: [ &quot;staging&quot; ]<br />    deletionOrder: Reverse</pre><p>In this example, applications are deployed first to <em>dev</em> and then to <em>staging</em>. With deletionOrder: Reverse, Argo CD will delete <em>staging</em> before <em>dev</em>, ensuring a clean and safe teardown sequence that respects dependency order. Without this setting (the default AllAtOnce), both environments would be deleted in parallel, which can cause problems if one depends on the other.</p><p>Shoutout to <a href=\"https://github.com/ranakan19\">Kanika Rana</a> (Red Hat) for this feature!</p><h3>Hydrator Improvements:</h3><p>There have been a bunch of hydrator improvements in this release, out of which some have been listed below</p><ul><li>Add the ability to template the commit message for source hydrator (by <a href=\"https://github.com/pbhatnagar-oss\">@pbhatnagar-oss</a>)</li><li>Provide template support for writing credentials for hydrator (by <a href=\"https://github.com/pbhatnagar-oss\">@pbhatnagar-oss</a>)</li><li><a href=\"https://github.com/argoproj/argo-cd/pull/24129\">Preserve non-hydrated files during hydration</a> (by <a href=\"http://github.com/nitishfy\">Nitish Kumar</a> (Akuity))</li><li>Parallelize repo server calls to generate manifests for a group of apps destined for the same target branch (by <a href=\"http://github.com/crenshaw-dev\">Michael Crenshaw</a> (Intuit))</li><li>And many more…..</li></ul><p>It is recommended to go through the <a href=\"https://github.com/argoproj/argo-cd/releases/tag/v3.2.0-rc1\">release notes</a> to gather more information about hydrator improvements.</p><h3>Adding a Title matching filter for Pull Request Generator</h3><p>Argo CD v3.2 now comes with added <a href=\"https://github.com/argoproj/argo-cd/pull/23569\">title matching support</a> to the Pull Request Generator in Argo CD’s ApplicationSet, providing a new way to filter and select pull requests based on the PR title, not just the branch name. This enhancement enables users to define filters using the pull request title string, improving flexibility for workflows where PR titles convey important context or naming patterns, such as release types, ticket numbers, or automated upgrade bots</p><p>Shoutout to <a href=\"https://github.com/nitishfy\">Nitish Kumar</a> (Akuity) for this feature!</p><h3>Server-Side Diff Support in Argo CD CLI</h3><p><a href=\"https://github.com/argoproj/argo-cd/pull/23978\">This PR</a> brings powerful new capabilities to the Argo CD CLI by adding support for server-side diff calculations. With the new — server-side-diff flag, users can now perform diff operations using the Kubernetes API server’s dry-run apply, resulting in more accurate and realistic comparisons that reflect the true behavior of resource application as seen by the cluster.</p><p>The enhancement integrates with both client-side and server-side manifest generation, offers robust handling of custom resource types, and ensures consistent output for advanced workflows such as previewing changes from local manifests before applying them.</p><p>Shoutout to <a href=\"https://github.com/pjiang-dev\">Peter Jiang (Intuit)</a> for this feature!</p><h3>Other Notable Changes:</h3><p>Here are some other new changes that made it into the release</p><ul><li>Implemented <a href=\"https://github.com/argoproj/argo-cd/pull/24017\">Altinity clickhouse-operator CRD health checks</a> (by <a href=\"https://github.com/acze\">Szymon Kośla</a>)</li><li>Ability to <a href=\"https://github.com/argoproj/argo-cd/pull/24356\">pass authenticated user ID as headers to extensions</a> (by <a href=\"https://github.com/agaudreault\">Alexandre Gaudreault</a> from Intuit)</li><li>Get the <a href=\"https://github.com/argoproj/argo-cd/pull/23536\">commit server URL from the environment variable</a> (by <a href=\"https://github.com/nobbs\">Alexej Disterhoft</a> from Redcare Pharmacy N.V. — Data)</li><li>Improved <a href=\"https://github.com/argoproj/argo-cd/pull/23669\">developer guide for Argo CD</a> (by <a href=\"https://github.com/reggie-k\">Regina Voloshin</a> from Octopus Deploy)</li><li>Fix the <a href=\"https://github.com/argoproj/argo-cd/pull/23565\">hydrator issue about repo URL normalization</a> if two apps have different repo URL formats (by <a href=\"https://github.com/crenshaw-dev\">Michael Crenshaw</a> from Intuit)</li><li><a href=\"https://github.com/argoproj/argo-cd/pull/24536\">Expose `ARGOCD_SYNC_WAVE_DELAY` env as configurable parameter</a> (by <a href=\"https://github.com/u-kai\">Kai Udo</a>)</li><li>and many more……</li></ul><h3>Where can I get the new Release?</h3><p>For more details and installation instructions, check the <a href=\"https://github.com/argoproj/argo-cd/releases/tag/v3.2.0-rc1\">release notes</a> and <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/upgrading/overview/\">upgrade instructions</a>. Please try the release candidate and share your feedback. A big thanks to all Argo Community contributors and users for their contributions, feedback, and help in testing the release!</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=4c939b63d9c4\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/argo-cd-v3-2-release-candidate-4c939b63d9c4\">Argo CD v3.2 Release Candidate</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.698943,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Argo CD 2025 User Survey Results",
      "link": "https://blog.argoproj.io/argo-cd-2025-user-survey-results-ab045f7d5d9a?source=rss----21be29067291---4",
      "published": "Wed, 02 Jul 2025 20:24:42 GMT",
      "summary": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_-6V9xGQM6vGmsiD_dNEog.png\" /></figure><p>The results of the 2025 Argo CD user survey are in! We had a fantastic response, with 185 submissions, which shows the community is more engaged than ever.</p><p>This year, our goal was to capture a well-rounded view of how folks use Argo CD. We strive to stay closely connected to our users, understand where we’re excelling, and identify current pain points so we can prioritize improvements and proactively address community needs.</p><p>This year’s theme is environment promotion, as it has emerged as one of the most significant pain points currently experienced by Argo CD users.</p><p>Here’s what we learned.</p><h4>TL;DR</h4><p>Argo CD is growing fast and becoming a standard for deployments to production!</p><p>Compared to 2023, significantly more organizations rely on it in production. Over 60% of respondents have been actively using it in Production for more than 2 years. Patterns like ApplicationSets and self-healing have become widely adopted. Argo CD is increasingly being used at scale, with instances managing more applications, often spanning multiple clusters. We can expect scalability and performance to become the pressure points, as well as growing interest in enterprise-like capabilities from the community.</p><p>Environment promotion is where things start to get tricky. Most teams still lean on custom scripts or manual steps to get the job done. Many organizations seek solutions to improve traceability and visibility, and to standardize workflows across environments. We will likely see more maturity and new capabilities in this area.</p><p>We’re also seeing more applications under management overall, with organizations connecting more clusters to each Argo CD instance, yet still running just one to five instances. This trend points to growing pressure on instance scalability and performance.</p><p>A few more highlights from the results:</p><ul><li>Argo Labs projects like Argo CD Image Updater, Argo CD Operator, and Argo CD Vault Plugin are gaining traction, reflecting a push toward automation.</li><li>Helm is by far the most popular Argo CD installation method.</li><li>Platform engineers now make up a larger share of the community, reflecting broader organizational shifts.</li></ul><h4>What do developers really think of Argo CD?</h4><p>We kicked off the survey by asking users how likely they were to recommend Argo CD to others — one of the simplest ways to get a feel for overall satisfaction.</p><p>The 2025 result? Overwhelmingly positive 🎉 Even more users this year said they’d recommend Argo CD compared to an already strong showing in 2023. That shift says a lot about how far the tool has come and the growing trust the community has in it. In fact, Argo CD achieved an impressive Net Promoter Score (NPS) of 79 — an increase of 3 points from two years ago — highlighting exceptional user satisfaction!</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*ZY4tGNGXZGrHgLfn\" /></figure><p>We were overwhelmed by the encouraging and positive comments, reflecting just how much people love the project and deeply value the vibrant Argo community. Here’s what some users had to say:</p><blockquote><em>“Argo CD is incredible, I have no idea how we survived without it in the past.”</em></blockquote><blockquote><em>“Thanks for this great tool ❤️”</em></blockquote><blockquote><em>“You’re awesome!”</em></blockquote><blockquote><em>“Please keep going!”</em></blockquote><blockquote><em>“Keep up the good work! :)”</em></blockquote><p>We asked which features users find most valuable. The winners?</p><ul><li>ApplicationSets</li><li>Argo CD’s intuitive UI</li></ul><p>Together, they make it much easier to manage and visualise complex deployments.</p><p>Also mentioned: auto-sync, drift detection, rollbacks, RBAC, multi-source support, and integrations.</p><h4>Who’s using Argo CD these days?</h4><p>The community remains consistent and is made up mostly of DevOps and platform engineers, but platform engineers have grown from 25% in 2023 to 37% in 2025. DevOps engineers declined slightly from 43% to 36%. This shift likely reflects the broader industry trend toward adopting a platform mindset, resulting in increased demand for dedicated platform engineering roles. Roles like architects and SREs remained steady.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*ZXUJ5osL9R28zoUn\" /></figure><h4>What does adoption look like in 2025?</h4><p>With the adoption being consistently high, 93% of respondents use Argo CD in production in 2023 and 97% in 2025, the implementation maturity grows significantly. In 2023, only 28% had used Argo CD in production for over 2 years. In 2025, that number jumped to 60%, and fewer than 10% were still evaluating or in early phases.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*e0xsvHzotjrhkIYg\" /></figure><p>Almost 60% of respondents said that 75% or more of their production applications now run on Kubernetes.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*gWqJBdpN4BHjbFFs\" /></figure><p>As Kubernetes adoption deepens, Argo CD has become an essential part of the CI/CD infrastructure. As more organizations rely on Argo CD, we’ll likely see continued investment from both the community and vendors, as well as more contributors joining the project.</p><p>When it comes to Argo CD installation, Helm is by far the top choice, followed by tools like Kustomize and Terraform. Interesting to note: 19% use cluster-wide installs versus just 10% using namespace-scoped ones.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*x4RJRiUclqZg-VgN\" /></figure><h4>What does the Argo CD footprint look like?</h4><p>The most noticeable trend is the growing number of applications. Organizations are managing bigger setups with fewer, larger instances.</p><p>In 2023, just over 15% managed more than 500 Applications; by 2025, this rose to 42%. Notably, these numbers don’t correlate with how long organizations have used Argo CD and how many applications they have.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*eRwUqAp_3dbairfo\" /></figure><p>The number of Argo CD instances is growing compared to 2023, but the increase is not as significant as the rise in the number of applications. In 2023, 77% of respondents reported having fewer than 6 instances, while this percentage fell to 64% in 2025. Nevertheless, most organizations still use only a handful of instances.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*q_ePbizmF7pE04-k\" /></figure><p>Even though the number of Argo CD instances hasn’t changed much, the number of applications certainly has! This means each instance is likely connecting to more clusters. For example, back in 2023, about 42% of instances were linked to one Kubernetes cluster. Fast forward to 2025, and that number has dropped to 25%. At the same time, the share of instances connecting to more than 20 clusters has jumped significantly, going from 5% to 25%.</p><p>In summary, organizations manage a significantly larger number of applications, with more clusters connected to a single Argo CD instance, typically keeping the number of instances between 1 and 5.</p><p>So, what does this mean for the community and the project? Well, it seems that managing lots of Argo CD instances might not be the biggest hurdle for most teams. Instead, the real pressure points are around scalability and performance as organizations push Argo CD to handle more clusters and Applications. Users are already calling out these challenges, and they’re likely to become even more important moving forward. The good news? Some of this work is already underway.</p><p><em>ℹ️ Interested in how to scale Argo CD? Take a look at the </em><a href=\"https://github.com/argoproj-labs/argocd-agent\"><em>argocd-agent project</em></a><em> or read an </em><a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/high_availability/\"><em>article about scaling up Argo CD</em></a><em>.</em></p><p><em>If you want to contribute to measuring and improving Argo scalability, take a look at the Scalability special interest group (</em><a href=\"https://github.com/argoproj/argoproj/tree/main/sigs/sig-scalability\"><em>Argo SIG Scalability</em></a><em>).</em></p><h4>What patterns and tools are catching on?</h4><p>More and more teams are following Argo CD’s recommended practices. App-of-Apps, ApplicationSets, and built-in self-healing are now widely used to manage complex GitOps setups.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*eG5_7BB_xx5xn1U_\" /></figure><p>We also asked about sub-projects, an area that shows the ecosystem dynamics. The most used are:</p><ul><li>Argo CD Image Updater</li><li>Argo CD Operator</li><li>Argo CD Vault Plugin</li></ul><p>Like the patterns mentioned earlier, the popularity of these Argo Labs projects reflects growing efforts to make Argo CD implementations more structured and automation-friendly.</p><p><em>ℹ️ You can manage secrets with </em><a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/secret-management/#secret-management\"><em>Kubernetes operators</em></a><em>, one of the recommended ways of managing secrets on the destination cluster. This keeps Argo CD out of direct secret management, helping avoid accidental updates and reducing the risk of leaks.</em></p><p>Image Updater is the most adopted sub-project (used by 34% of respondents). While still under active development and intended for non-critical environments, its popularity shows just how hungry teams are for better deployment and promotion automation.</p><p>But Image Updater only solves part of the deployment automation puzzle. There’s still no go-to comprehensive solution out there. We’ll explore this further in the next section on environment promotion.</p><h4>Environment promotion</h4><p>Given how widely Argo CD is used in production, we wanted to explore how teams handle environment promotion. Is it a pain point for GitOps users? And how do their approaches compare to the more traditional promotion strategies used on other platforms?</p><p>First, we looked at the number of environments teams work with. Now, most respondents use 3 or fewer. Only 12% reported having more than 8.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*lwhiMHHc0r41nELe\" /></figure><p>This introduces complexity, as teams must coordinate across multiple instances. And that’s where challenges like consistent observability start to show up.</p><p>To dig deeper into this, we asked teams about their biggest pain points. What came up most?</p><ul><li>Traceability across environments, what version of a deployed app is running where (51%)</li><li>Release gates (44%)</li><li>Understanding app health and status across environments (37%)</li><li>Keeping pipeline definitions consistent (36%)</li><li>Troubleshooting failed promotions (29%)</li></ul><p>Most teams reported multiple challenges, with traceability and release gates often mentioned together.</p><p>To understand what drives these challenges, we asked how teams promote applications across environments.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*IV4zO6ktxeE6AFz0\" /></figure><p>The most common setup is DIY. Around 67% use scripts, in-house tools, or both.</p><p>Nearly a quarter of teams handle promotions solely through manual manifest updates, and almost half use some form of manual step, often paired with scripts.</p><p>So, how can we make sense of this combination? One possibility is that teams are using Argo CD Image Updater, currently the most popular sub-project, for simple, image-only updates. For more complex tasks, like updating configuration files, many might rely on manual steps. In other words, automation helps with the easy stuff, but more involved changes still need hands-on work.</p><p><em>ℹ️ Manual manifest updates are often where teams start with Argo CD. They can work well for small setups, like a few static infrastructure manifests.</em></p><p><em>But as you scale, they tend to fall short. It’s easy to run into slower deployments, more manual overhead, and challenges around security and compliance. If you’re growing with Argo CD, it’s worth moving toward full CI/CD automation to keep things on track.</em></p><p>A few out-of-the-box solutions for automated environment promotion are starting to show up in the survey. The most mentioned, though still only used by 4% of respondents, is <a href=\"https://argo-gitops-promoter.readthedocs.io/en/latest/\">GitOps Promoter</a>. It’s part of the Argo CD ecosystem and works alongside <a href=\"https://argo-cd.readthedocs.io/en/stable/proposals/manifest-hydrator/\">Hydrator</a> to handle promotions via pull requests. Others mentioned Codefresh GitOps and Kargo.</p><p>Here’s how one person summed it up:</p><blockquote><em>“Some sort of environment promotion. Lots of players in the game now and it’s hard to settle on one. Lots of manual reviews required for manifest changes that can be tiresome to compare against other environments. Some sort of environment comparison tool would be good.”</em></blockquote><p>That quote really captures where things stand. Plenty is happening in this space, but no clear winner or standard approach just yet. As more teams adopt Argo CD and take on more advanced deployment setups, tackling challenges like traceability, testing, and consistent configuration will only become more important.</p><p>This is definitely a space to watch. Expect more tooling, more investment, and, hopefully, comprehensive user-friendly solutions soon.</p><h4>What challenges are teams facing?</h4><p>After digging into environment promotion, we zoomed out and asked about broader challenges, too.</p><p>Nearly 30% of respondents said they had no major challenges with Argo CD, which is a great sign.</p><p>The most common challenge, flagged by 37%, was environment modeling and promotion workflows (covered earlier).</p><p>Other pain points included:</p><ul><li>Troubleshooting deployments and app issues (25%)</li><li>Too much manual work or not enough automation (23%)</li><li>Limited visibility into deployment status (16%)</li></ul><h4>What features are missing?</h4><p>To wrap up, we asked what users think is missing from Argo CD. Many of the responses built on earlier themes.</p><p>Some areas users want to see improved:</p><ul><li>Support for promoting apps through stages and managing service dependencies.</li><li>Better templating in ApplicationSets, progressive syncs, and built-in promotion workflows.</li><li>Multi-cluster visibility and faster UI performance.</li><li>Enterprise-grade features like fine-grained RBAC, audit trails, Vault and Prometheus integrations, and better error messages.</li></ul><p>As teams scale up, these requests point toward a natural next step: evolving Argo CD into a full-featured, enterprise-ready platform.</p><h4>Final words</h4><p>The 2025 survey gave us a ton to think about. We saw just how far Argo CD has come, what’s working well, and what needs more attention. All these insights are gold for the project’s future evolution.</p><p>Huge thanks to everyone who took the time to share feedback!</p><p>Special shoutout to those who offered to help with case studies, blog posts, talks, or quotes. It really helps grow the community!</p><p>And thanks to Katie Lamkin-Fulsher, Dan Garfield, Henrik Blixt, Michael Crenshaw, Christian Hernandez, Regina Voloshin, Kostis Kapelonis, Jenny Blekh and Tegan Ali, who made this survey possible.</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ab045f7d5d9a\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/argo-cd-2025-user-survey-results-ab045f7d5d9a\">Argo CD 2025 User Survey Results</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.6989474,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Argo Workflows 3.7",
      "link": "https://blog.argoproj.io/argo-workflows-3-7-4eb9a2f0f918?source=rss----21be29067291---4",
      "published": "Mon, 30 Jun 2025 16:05:20 GMT",
      "summary": "<h4>Argo Workflows v3.7.0 Released!</h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/512/1*zVLT-SMHrZKqwqfNPm4fkQ.png\" /><figcaption>Argonaut announcing a new release of Workflows.</figcaption></figure><p>We’re excited to announce the release of <strong>Argo Workflows v3.7.0</strong>! This release brings a host of new features and fixes to help you automate your workflows with even more power, flexibility, and security.</p><p>Whether you’re running machine learning pipelines, managing CI/CD at scale, or automating complex workflows across namespaces, this release delivers the performance, flexibility, and control you need.</p><h3>Release Statistics</h3><ul><li>🚀 <strong>24 new features</strong></li><li>🐞 <strong>83 fixes</strong></li><li>👥 70 <strong>contributors total (including 39 new contributors)</strong></li></ul><h3>What’s New in v3.7.0?</h3><h4>Highlights</h4><ul><li>Smarter caching &amp; memoization — Save compute time and make reuse more transparent.</li><li>Multi-controller locking (semaphores + mutexes) — Scale with confidence across clusters.</li><li>Dynamic namespace parallelism — Tune resource usage per namespace.</li><li>Non-root execution for argoexec — Tighten your security posture.</li><li>React Testing Library &amp; UI polish — Better test coverage and a cleaner UI.</li><li>Preview workflows before submission — Catch issues earlier.</li><li>Filter workflows by timestamps via API — More efficient filtering for large numbers of workflows for API users.</li><li>Scroll to read more… 👇</li></ul><h3>Retry Improvements</h3><ul><li><strong>Support retry strategy on daemon containers</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13738\">#13738</a>) <strong>thanks to </strong><a href=\"https://github.com/MenD32\"><strong>@MenD32</strong></a> Retry strategies can now be applied to daemon containers, allowing for better fault tolerance.</li><li><strong>Support cap on retryStrategy backoff</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13782\">#13782</a>) <strong>thanks to </strong><a href=\"https://github.com/chengjoey\"><strong>@chengjoey</strong></a><strong><br /></strong>You can now cap the maximum backoff duration in retry strategies to avoid excessively long waits.</li><li><strong>Allow last retry variables in expressions</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14450\">#14450</a>) <strong>thanks to </strong><a href=\"https://github.com/isubasinghe\"><strong>Isitha Subasinghe</strong></a><strong><br /></strong>Expressions can now reference variables from the last retry, enhancing workflow logic flexibility.</li></ul><h3>Parallelism Improvements</h3><ul><li><strong>Multi-controller locks (semaphores and mutexes)</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14309\">#14309</a>) <strong>thanks to </strong><a href=\"https://github.com/Joibel\"><strong>Alan Clucas</strong></a><strong><br /></strong>Support for distributed locks across multiple controllers to improve synchronization and concurrency handling.</li><li><strong>Dynamic namespace parallelism</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14188\">#14188</a>) <strong>thanks to </strong><a href=\"https://github.com/isubasinghe\"><strong>Isitha Subasinghe</strong></a> Set parallelism limits dynamically per namespace to better control resource usage.</li></ul><h3>Enhanced Caching</h3><ul><li><strong>More granular caching options for the argo kubernetes informer</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14304\">#14304</a>) <strong>thanks to </strong><a href=\"https://github.com/jakkubu\"><strong>Jakub Buczak</strong></a> <br />Gain finer control over informer cache behavior, enabling better performance tuning for your Kubernetes client interactions.</li><li><strong>Cache semaphore limit lookup</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14205\">#14205</a>) <strong>thanks to </strong><a href=\"https://github.com/drabinowitz\"><strong>Dmitri Rabinowitz</strong></a> Semaphore limit lookups can now be cached to reduce overhead during workflow execution.</li></ul><h3>UI Enhancements</h3><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*4ro5_RXJ9ulBZteN\" /><figcaption>Workflows can now be visualized before submission</figcaption></figure><ul><li><strong>Visualize workflows before submitting</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14034\">#14034</a>) <strong>thanks to </strong><a href=\"https://github.com/Unperceivable\"><strong>@Unperceivable</strong></a><strong><br /></strong>Added the ability to preview workflow visualizations before submission.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/758/0*PLrzpykylETBEeuf\" /><figcaption>Filtering being performed based on `Finished before`</figcaption></figure><ul><li><strong>Filter workflows by “Finished before” and “Created since” via API</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13962\">#13962</a>) <strong>thanks to </strong><a href=\"https://github.com/Adrien-D\"><strong>Adrien Delannoy</strong></a> <br />API users can now filter workflows based on creation and finish timestamps, improving search and management capabilities.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*wz2aZFpffU3QFZxV\" /><figcaption>Markdown based description being rendered</figcaption></figure><ul><li><strong>Allow markdown titles and descriptions</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13935\">#13935</a>, <a href=\"https://github.com/argoproj/argo-workflows/pull/12697\">#12697</a>) <strong>thanks to </strong><a href=\"https://github.com/panicboat\"><strong>@panicboat</strong></a><strong><br /></strong>Markdown formatting is now supported in titles and descriptions across various editors including KeyValueEditor, CronWorkflows, WorkflowTemplates, and ClusterWorkflowTemplates.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*OZs4l_VeL4Z3n7P0\" /><figcaption>Memoized nodes are now clearly visible from the UI</figcaption></figure><ul><li><strong>Mark memoized nodes as cached</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13883\">#13883</a>) <strong>thanks to </strong><a href=\"https://github.com/MenD32\"><strong>@MenD32</strong> </a>Workflow nodes that use memoization are now clearly marked as cached, improving observability and debugging.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*e3UAlSrabE___1qL\" /><figcaption>Parameters can now be pre-filled using query parameters</figcaption></figure><ul><li><strong>Prefill parameters for workflow submit form</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13922\">#13922</a>) <strong>thanks to </strong><a href=\"https://github.com/sairam91\"><strong>Sairam Arunachalam</strong></a><strong><br /></strong>The UI now pre-fills workflow submit forms with parameters for faster and less error-prone submission.</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jnK3uxrTCySrRGoLVy9CCQ.png\" /><figcaption>Display name customization allows for human readable names</figcaption></figure><ul><li><strong>Set template display name in YAML</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14077\">#14077</a>) <strong>thanks to </strong><a href=\"https://github.com/MenD32\"><strong>@MenD32</strong></a><strong><br /></strong>You can now specify a human-readable display name for templates directly in workflow YAML.</li></ul><h3>User Experience</h3><ul><li><strong>Label actor action when making changes to workflows/templates</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14104\">#14104</a>) <strong>thanks to </strong><a href=\"https://github.com/tczhao\"><strong>Tianchu Zhao</strong></a><strong><br /></strong>Workflow/template changes are now labeled with actor actions for improved auditability.</li><li><strong>Support archive logs in resource templates</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13933\">#13933</a>) <strong>thanks to</strong> <a href=\"https://github.com/shuangkun\">Shuangkun Tian</a><br />Resource templates now support archiving logs for better log retention and auditing.</li><li><strong>Include container name in error messages</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13790\">#13790</a>) <strong>thanks to </strong><a href=\"https://github.com/tooptoop4\"><strong>@tooptoop4</strong></a><strong><br /></strong>Error messages now include the container name for easier troubleshooting.</li></ul><h3>Cron Workflow Enhancement</h3><ul><li><strong>Support backfill for cron workflows</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13999\">#13999</a>) <strong>thanks to</strong> <a href=\"https://github.com/shuangkun\">Shuangkun Tian</a> The CLI now supports backfilling Cron Workflows, enabling retroactive workflow execution for missed schedules.</li></ul><h3>Security Improvements</h3><ul><li><strong>Non-root </strong><strong>argoexec</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14477\">#14477</a>) <strong>thanks to </strong><a href=\"https://github.com/Joibel\"><strong>Alan Clucas</strong></a> <br />argoexec now has an image allowing it to run as a non-root user, enhancing security for environments with stricter policies.</li></ul><h3>Developer Experience</h3><ul><li><strong>Add React Testing Library and initial component coverage</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14412\">#14412</a>) <strong>thanks to </strong><a href=\"https://github.com/ericsengineer\"><strong>Eric S</strong></a><br />We improved frontend test coverage using React Testing Library to increase reliability and maintainability.</li><li><strong>Move contextless log messages to debug level</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/13920\">#13920</a>) <strong>thanks to </strong><a href=\"https://github.com/kizzie\"><strong>Kat</strong></a><strong><br /></strong>Improved logging hygiene by moving contextless log messages to debug level, reducing noise.</li><li><strong>Enable cherry-pick bot</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14151\">#14151</a>) <strong>thanks to </strong><a href=\"https://github.com/Joibel\"><strong>Alan Clucas</strong></a> Automated cherry-pick bot now enabled to help streamline backporting fixes and features across branches.</li><li><strong>Add support for databases enforcing strict data integrity through primary keys</strong> (<a href=\"https://github.com/argoproj/argo-workflows/pull/14103\">#14103</a>) <strong>thanks to </strong><a href=\"https://github.com/radusora\"><strong>Radu Sora</strong></a><strong><br /></strong>Argo now supports database backends with strict PK enforcement for more robust metadata management.</li></ul><h3>Get Started</h3><p>Upgrade to the latest version by following our <a href=\"https://argoproj.github.io/argo-workflows/installation/\">installation guide</a>.</p><p>Try out the new features and improvements, and as always, please provide feedback or report issues on our <a href=\"https://github.com/argoproj/argo-workflows\">GitHub repo</a>.</p><p>Happy workflowing! 🚀</p><p><em>The Argo Workflows Team</em></p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=4eb9a2f0f918\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/argo-workflows-3-7-4eb9a2f0f918\">Argo Workflows 3.7</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.6989508,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Announcing Argo CD v3.1",
      "link": "https://blog.argoproj.io/announcing-argo-cd-v3-1-f4389bc783c8?source=rss----21be29067291---4",
      "published": "Thu, 19 Jun 2025 17:46:41 GMT",
      "summary": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*xLeDwhNCRh3pqqPt\" /><figcaption>Image generated by ChatGPT</figcaption></figure><p>Argo CD v3.0 was dubbed “<a href=\"https://blog.argoproj.io/announcing-argo-cd-v3-small-but-mighty-df05c0b39ad6\">Small but mighty</a>” as that release set the groundwork for what is in store for Argo CD v3.x releases. With v3.1, the first batch of features comes out of the gate; featuring <a href=\"https://opencontainers.org/\">OCI</a> support, CLI Plugins, Hydrator updates, UI improvements, plus much more.</p><p>Along with new features, this release comes with a whole slew of security fixes, bug fixes, and general quality of life improvements.</p><p>You can download the v3.1 on the <a href=\"https://github.com/argoproj/argo-cd/releases/tag/v3.1.0\">Argo CD Releases Page</a>!</p><p>We are really excited to have you try out the new features and look forward to any feedback from the border community! With that, let’s dive into what this release holds!</p><h3>OCI Support</h3><p>Argo CD has supported obtaining Kubernetes manifests from either a Git repository, a Helm chart repository, and later support for getting manifests from a Helm chart stored within an Open Container Initiative (OCI) registry. As OCI registries have more frequently been used to store content aside from container images, more and more projects have been adding support for using OCI as a storage mechanism and a source of truth.</p><p>Starting with Argo CD v3.1, we now support OCI by enabling the use of OCI-compliant container registries as sources for configuration artifacts. This means Argo CD can pull Kubernetes manifests packaged as OCI artifacts from registries that follow the OCI image and distribution specifications. This enhances security and portability, as it allows users to leverage the same registries they use for container images to also store and distribute deployment configurations. Argo CD OCI support comes into beta with this release.</p><p>BIG thanks to <a href=\"https://github.com/blakepettersson\">@blakepettersson</a> from Akuity for leading this effort!</p><h3>Hydrator Improvements</h3><p>Manifest changes are often just image tag bumps. For example, the manifest change associated with a code change. The manifest hydrator writes metadata to the hydrated branch to associate the hydrated commit back to its corresponding dry commit.</p><p>Starting in v3.1, the Hydrator now allows for a way to associate a dry commit with a code commit. This is done by adding information about the upstream repo url, that commit SHA hash, the author of that commit, and any messages associated with that code commit. This information is then added to the Hydrator manifest metadata; this enables future work to be able to display this metadata in the Argo CD UI.</p><p>Thanks to <a href=\"https://github.com/crenshaw-dev\">@crenshaw-dev</a> from Intuit for this improvement.</p><h3>Server-Side Apply Stabilization</h3><p>Argo CD now supports client-side apply migration, which helps transitioning from client-side apply to server-side apply by moving a resource’s managed fields from one manager to Argo CD’s manager. This feature is particularly useful when you need to migrate existing resources that were created using kubectl client-side apply to server-side apply with Argo CD. You can also specify your own field manager to migrate from using an annotation. This is useful when you have other operators managing resources that are no longer in use and would like Argo CD to own all the fields for that operator.</p><p>Thanks to <a href=\"https://github.com/pjiang-dev\">@pjiang-dev</a> from Intuit for this contribution.</p><h3>UI Parameterized Action</h3><p>The Argo CD UI in many ways is the first Kubernetes dashboard, providing not only a UI for GitOps users; but also a feature rich UI for Kubernetes end users. In this release, we’ve added the ability to perform additional action on Kubernetes resources, beyond just deleting.</p><p>This feature enables users to scale resources directly from the Argo CD UI. Users will be able to increase or decrease the number of replicas (Pods) for Deployments and StatefulSets by using an input field. The feature aims to enhance user experience, especially for non-technical users, by eliminating the need to modify configuration files or use kubectl commands for scaling.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*7C4pCbBqylNOEFKm\" /><figcaption>Scaling resource from Argo CD UI</figcaption></figure><p>Thanks to <a href=\"https://github.com/ratulbasak\">@ratulbasak</a> from Deutsche Bank for contributing!</p><h3>And We Didn’t Stop There</h3><p>There are other notable updates/improvements in this release.</p><ul><li>Similar to the <a href=\"https://kubernetes.io/docs/tasks/extend-kubectl/kubectl-plugins/\">kubectl plugin mechanism</a>, support for <em>argocd</em> <a href=\"https://github.com/argoproj/argo-cd/pull/20074\">CLI plugins</a> is available in this release. — <a href=\"https://github.com/nitishfy\">@nitishify</a></li><li>You can now <a href=\"https://github.com/argoproj/argo-cd/pull/22482\">explicitly set auto-sync</a> on an Application — <a href=\"https://github.com/aali309\">@aali309</a></li><li>The sync option <em>SkipDryRunOnMissingResource</em> was only available as an annotation before; now you can set this as an Application sync option — <a href=\"https://github.com/pasha-codefresh\">@pasha-codefresh</a></li><li>Improvements to <a href=\"https://github.com/argoproj/argo-cd/pull/22781\">AppSet Progressive Sync in the UI</a>, paving the path for it to enter Beta — <a href=\"https://github.com/aali309\">@aali309</a></li><li><a href=\"https://github.com/argoproj/argo-cd/pull/23057\">Add cooldown</a> to prevent resetting autoheal exp backoff preemptively — <a href=\"https://github.com/gdsoumya\">@gdsoumya</a></li><li><a href=\"https://github.com/argoproj/argo-cd/pull/22864\">Added GitHub API metrics</a> to better debug rate limiting — <a href=\"https://github.com/reggie-k\">@reggie-k</a></li></ul><h3>Dependency, Platform, and Security Updates</h3><p>Some notable dependency, platform, and security updates included in v3.1</p><p><strong>Go 1.24.4</strong></p><ul><li>All builds, CI, and images now use the latest Go. (And dropped 1.24.1.)</li></ul><p><strong>Major library bumps</strong>:</p><ul><li><em>google/go-github</em> to v69</li><li><em>bradleyfalzon/ghinstallation</em> to v2</li><li><em>microsoft/azure-devops-go-api </em>moves to v7</li><li><em>golangci-lint, tj-actions/changed-files</em>, and many more</li></ul><p><strong>Security</strong>:</p><ul><li><em>SECURITY-INSIGHTS.yml </em>reflects Argo CD v3.1.0 as the current release</li><li>GitHub Actions secrets are more tightly scoped</li></ul><p><strong>Helm/OCI improvements</strong></p><ul><li>Improved testing and support for OCI registries</li></ul><h3>Try It Out!</h3><p>Please try the release and share your feedback. You can find us in the CNCF slack to provide us feedback and chat with other users and engineers. Thanks to all Argo Community contributors and users for their contributions, feedback, and help to test the release!</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f4389bc783c8\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/announcing-argo-cd-v3-1-f4389bc783c8\">Announcing Argo CD v3.1</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.6989539,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Argo CD v3.0 Release Candidate",
      "link": "https://blog.argoproj.io/argo-cd-v3-0-release-candidate-a0b933f4e58f?source=rss----21be29067291---4",
      "published": "Tue, 18 Mar 2025 18:40:42 GMT",
      "summary": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*io0Di1FleuHxJFqatPBzwQ.jpeg\" /><figcaption>Argo CD 3.0 — Small but mighty — Photo Credit Regina Voloshin</figcaption></figure><p>We are very excited to announce an important milestone for Argo with the <a href=\"https://github.com/argoproj/argo-cd/releases/tag/v3.0.0-rc1\">Argo CD 3.0 release candidate</a>! This is the first major version change to Argo CD since 2021.</p><p>Argo CD 3.0 brings improvements to security, performance and distills dozens of best practices to provide better defaults while still allowing for flexible configuration to match any team. This release represents a more mature Argo CD that removes deprecated components and streamlines future development and maintenance.</p><p>Let’s jump into what’s new!</p><h4>Better Security with Fine-grained update/delete RBAC enforcement on resources</h4><p>Fine-grained controls introduce the ability to change permissions based not just on the application but on the resources within an application. This new permissions model will require a configuration upgrade from Argo CD 2.x. Thanks to <a href=\"https://github.com/fffinkel\">@fffinkel</a> and <a href=\"https://github.com/agaudreault\">@agaudreault</a> for this contribution.</p><p>Here’s an example of giving permissions to delete pods within an application.</p><pre>p, example-user, applications, delete/*/Pod/*/*, default/prod-app, allow</pre><h4>Better defaults across the board</h4><p>Every Argo CD admin has changes they like to make when setting up a new installation. Several of these configurations have become best practices or necessities. Some of the new defaults include:</p><ul><li>Use annotations for <a href=\"https://argo-cd.readthedocs.io/en/latest/user-guide/resource_tracking/\">resource tracking</a> (<a href=\"https://github.com/argoproj/argo-cd/pull/22289\">#22289</a> by <a href=\"https://github.com/terrytangyuan\">@terrytangyuan</a> and <a href=\"https://github.com/crenshaw-dev\">@crenshaw-dev</a>)</li><li>Enable RBAC on pod logging by default just like we do for container exec. (<a href=\"https://github.com/argoproj/argo-cd/issues/10551\">#10551</a> by <a href=\"https://github.com/reggie-k\">@reggie-k</a> and <a href=\"https://github.com/rumstead\">@rumstead</a>)</li><li><a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/upgrading/2.14-3.0/#default-resourceexclusions-configurations\">Ignore differences on high churn controller managed resources</a> like those from Cert Manager, Kyverno, Cilium, and Kubernetes. (<a href=\"https://github.com/argoproj/argo-cd/issues/19992\">#19992</a>, <a href=\"https://github.com/argoproj/argo-cd/issues/20013\">#20013</a> by <a href=\"https://github.com/agaudreault\">@agaudreault</a>)</li><li>Adopt JSON as default logging format (<a href=\"https://github.com/argoproj/argo-cd/issues/20897\">#20897</a> by <a href=\"https://github.com/teddy-wahle\">@teddy-wahle</a>)</li><li>Deprecated and removed Configuring repos in argocd-cm (<a href=\"https://github.com/argoproj/argo-cd/issues/19768\">#19768</a> by <a href=\"https://github.com/crenshaw-dev\">@crenshaw-dev</a>)</li></ul><p>Other notable features and <a href=\"https://github.com/argoproj/argo-cd/issues?q=label%3Afor-release-blog-3-0\">issues tackled in Argo CD 3.0 can be found on GitHub</a>.</p><h4>Recommendations on Secrets</h4><p>Argo CD documentation contains a number of recommendations but secrets management in Kubernetes was in a rapid state of development when Argo CD 2.0 launched. Since then we have noticed a number of emerging anti-patterns and have made the decision to publish recommendations on secrets management. (<a href=\"https://github.com/argoproj/argo-cd/issues/21629\">#21629</a> by <a href=\"https://github.com/crenshaw-dev\">@crenshaw-dev</a>)</p><p>Specifically, we endorse using secrets operators and caution against using config management plugins to inject secrets. We recommend <a href=\"https://argo-cd.readthedocs.io/en/release-3.0/operator-manual/secret-management/\">reading the updated documentation on secrets</a>.</p><h4>Upgrading from Argo CD 2.x to Argo CD 3.0</h4><p>Argo CD 3.0 should be a low risk upgrade. We’ve put together a <a href=\"https://argo-cd.readthedocs.io/en/latest/operator-manual/upgrading/2.14-3.0/\">full guide to upgrading to Argo CD 3.0</a>. This includes how to identify if a configuration needs to be changed and if applicable how to retain Argo CD 2.x behavior.</p><p>Beyond following the full guide above, all potentially <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue%20state%3Aclosed%20milestone%3Av3.0\">breaking changes can be found on Github</a>.</p><h4>Ongoing and End of Life Support for Argo CD 2.x</h4><p>Following our documented <a href=\"https://argo-cd.readthedocs.io/en/stable/developer-guide/release-process-and-cadence/#release-cycle\">release cadence</a> and <a href=\"https://github.com/argoproj/argo-cd/security/policy#supported-versions\">security policy</a> we support the last three minor releases for security fixes and critical issues. This means the last version of Argo CD (2.14) will go out of support with the release of 3.2, currently planned for the end of 2025.</p><p>A huge thank you to the more than 94 contributors who helped with this release as well as our release champion <a href=\"https://github.com/reggie-k\">Regina Voloshin</a> as well as the Argo CD lead <a href=\"https://github.com/crenshaw-dev\">Michael Crenshaw</a>. Since we <a href=\"https://blog.argoproj.io/announcing-argo-cd-v3-small-but-mighty-df05c0b39ad6\">announced Argo CD 3.0</a> many <a href=\"https://blog.argoproj.io/help-us-shape-the-future-of-argo-cd-3-0-ebc670413312\">have offered feedback, contributions, and ideas</a>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/814/1*49UiTK-B6pgcG9ZfTjqYew.png\" /><figcaption>More than 94 contributors for Argo CD 3.0</figcaption></figure><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=a0b933f4e58f\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/argo-cd-v3-0-release-candidate-a0b933f4e58f\">Argo CD v3.0 Release Candidate</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.69897,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Help us shape the future of Argo CD 3.0!",
      "link": "https://blog.argoproj.io/help-us-shape-the-future-of-argo-cd-3-0-ebc670413312?source=rss----21be29067291---4",
      "published": "Fri, 07 Mar 2025 15:30:46 GMT",
      "summary": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FhzijWBPhhHEVRM7sAuAZg.jpeg\" /></figure><p>As you have <a href=\"https://medium.com/argo-project/announcing-argo-cd-v3-small-but-mighty-df05c0b39ad6\"><strong>probably read</strong></a>, we are working on a new major Argo CD release, and would love for your feedback to make this release even better!<br />This is your opportunity to affect Argo CD 3.0!</p><h4>Help us <strong><em>make Argo CD more performant out of the box </em></strong>by informing us about<strong><em>:</em></strong></h4><ol><li>Widely used Kubernetes resource fields, that are known to have high churn, meaning, K8s resource fields, which should be ignored by Argo CD with ignoreResourceUpdate. <br />Please add more such resources that you have encountered during your every day work with Argo CD (for example, status field) to<a href=\"https://github.com/argoproj/argo-cd/issues/19992\"> <strong>this list.</strong></a></li><li>Kubernetes internal resources that most of you never directly create. They can clutter the UI and decrease Argo performance due to high churn. <br />Please add more such resources that you have encountered during your every day work with Argo CD (for example, Endpoints and EndpointSlice resources) <a href=\"https://github.com/argoproj/argo-cd/issues/20013\"><strong>to this list</strong></a>.</li></ol><h4>Help us make Argo CD more secure out of the box by informing us about:</h4><ol><li>How wide is the adoption of <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters\"><strong>project scoped clusters</strong></a><strong> </strong>and your methodologies of sharing clusters between AppProjects. Please share your feedback as a vote <a href=\"https://github.com/argoproj/argo-cd/issues/10549#issuecomment-2703659477\"><strong>here</strong></a>.</li></ol><h4>Help us promote the maturity of some Alpha and Beta features:</h4><p>We are considering the maturity promotion of some of <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/feature-maturity/#overview\"><strong>those Argo CD features</strong></a> (Alpha -&gt; Beta, Beta -&gt; Stable). <br />Please add your input on this <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue%20state%3Aopen%20promote%20in%3Atitle%20label%3Acomponent%3Adocs%20author%3Areggie-k%20\"><strong>list of issues</strong></a> for the features, as a vote:</p><ol><li>If you have successfully adopted the feature, please vote “thumbs-up” on the issue.</li><li>If you are familiar with any blockers for promoting the feature, please vote “thumbs-down” on the issue and comment with more details.</li></ol><h3>Thank you for helping us shape this release!</h3><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ebc670413312\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/help-us-shape-the-future-of-argo-cd-3-0-ebc670413312\">Help us shape the future of Argo CD 3.0!</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.6989737,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Announcing Argo CD v3: Small But Mighty",
      "link": "https://blog.argoproj.io/announcing-argo-cd-v3-small-but-mighty-df05c0b39ad6?source=rss----21be29067291---4",
      "published": "Sun, 23 Feb 2025 19:29:18 GMT",
      "summary": "<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PuzLlQXP1EC43miI4R9B3w.jpeg\" /><figcaption>Photo by <a href=\"https://unsplash.com/@diasplora?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash\">Lora Seis</a> on <a href=\"https://unsplash.com/photos/a-stuffed-animal-with-a-hat-dS5xpjW38Qk?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash\">Unsplash</a></figcaption></figure><p>We are excited to announce plans for a new major release for Argo CD!</p><p>Over the past few years we have noticed the adoption of a number of anti patterns, performance limitations and ease of use limitations that could not be addressed with a simple minor release. We see opportunities for better performance and ease of use by only deprecating those configurations, setting smarter defaults and encouraging more best practices.</p><p>Argo CD 3.0 sets the stage for us to bring the next generation of features along with performance and scalability improvements the community hungers for.</p><p>This release will improve UX, security and performance by:</p><ol><li>Introducing additional recommended configurations out of the box, thus reducing required effort to achieve more secure and performant Argo CD configurations</li><li>Dropping support for legacy configuration options, that we discourage using</li></ol><p>With time and community feedback, we realized that certain <em>optional</em> configurations should in fact be the <em>default</em>, since many users explicitly configure those. One such example would be some performance-related configurations.</p><p>This release will also address long-existing technical debt, caused by supporting legacy configurations we started with when Argo CD was young, and which we no longer recommend on using, as Argo CD had matured.</p><h3><strong>What Is Changing in This Version?</strong></h3><p><a href=\"https://github.com/argoproj/argo-cd/milestone/27?closed=1\">Here</a> is a non-exhaustive list of changes in this release, among those:</p><ol><li><a href=\"https://github.com/argoproj/argo-cd/issues/19768\">Removal</a> of support for legacy argocd-cm repository config</li><li>Enabling fine-grained update/delete RBAC enforcement <a href=\"https://github.com/argoproj/argo-cd/issues/19988\">by default</a></li><li>Making applyNestedSelectors: true the <a href=\"https://github.com/argoproj/argo-cd/issues/14152\">default and only</a> option for matrix/merge generators</li><li>Having an <a href=\"https://github.com/argoproj/argo-cd/issues/21629\">opinion</a> on secrets — while we remained un-opinionated regarding secret management with Argo CD since day 1, maintainability and security lessons learned surfaced the need to be better aligned with the industry in this domain</li><li><a href=\"https://github.com/argoproj/argo-cd/issues/21207\">Preventing</a> the usage of in-cluster, when in-cluster is explicitly disabled</li></ol><h3>Backwards Compatibility &amp; Migration</h3><p>We aim for v3 release to be so inoffensive, that upgrading to 3.0 is almost as easy as upgrading between 2.x minor versions has been.</p><p>For each change, the documentation will contain clear description of:</p><ol><li>What the change is</li><li>How to determine whether the user is affected by the change (i.e which command to run)</li><li>How to migrate</li><li>For relatively high-risk changes - how to opt out (i.e switch back to the old default)</li></ol><h3>Get Involved</h3><p>You can read the full proposal <a href=\"https://github.com/argoproj/argo-cd/issues/21422\">here</a>. Please give us your feedback!</p><p>If there are additional breaking changes you are aware of, that are aligned with the 3.0 proposed concepts, and can further improve Argo CD configuration, please open an issue for those.</p><p>We look forward to continuing the conversation with the Argo CD community.</p><h3>Call for Contributions</h3><p>We have labeled some issues planned for v3, which we would love to get contributions for (and this is a breathing list!), <a href=\"https://github.com/argoproj/argo-cd/issues?q=is%3Aissue%20state%3Aopen%20milestone%3Av3.0%20%20label%3Acontributions-wanted\"><strong>here</strong></a>.</p><p>This is your opportunity to become an active part of this release!</p><h3><strong>Support for Older Versions</strong></h3><p>At the release date of v3 GA, the following versions will be supported: v2.14 and v2.13, as per the regular support policy for minor versions.</p><h3>Planned Release Dates</h3><p>The v3 RC is currently planned for Mar. 17, 2025 and v3 GA for May 6, 2025.</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=df05c0b39ad6\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/announcing-argo-cd-v3-small-but-mighty-df05c0b39ad6\">Announcing Argo CD v3: Small But Mighty</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.6989768,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Argo Rollouts 1.8 Released",
      "link": "https://blog.argoproj.io/argo-rollouts-1-8-released-cf3183fae1af?source=rss----21be29067291---4",
      "published": "Thu, 30 Jan 2025 18:27:56 GMT",
      "summary": "<p>Welcome Argo Rollouts 1.8! This release had 53 contributors, of which 39 were first-timers, and includes 202 commits! Thank you all for your contributions! There are some really nice features in this release so let’s take a look.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*anQTvyi32Mpo6dIWszWrDg.png\" /></figure><h3>Canary Step Plugins</h3><p>This exciting new feature allows you to configure new steps in your Canary configured Rollout. With this plugin system, you are now able to <a href=\"https://argo-rollouts.readthedocs.io/en/stable/features/canary/plugins/\">create a plugin and execute your own steps</a> during the canary analysis. This extends Argo Rollouts capabilities and enriches the progressive delivery experience to accommodate a multitude of scenarios. It is a continuation of the previous work that was done to create a pluggable system for traffic routers and metric providers in the v1.5 release.</p><p>You can refer to the <a href=\"https://argo-rollouts.readthedocs.io/en/latest/plugins/\">documentation</a> to learn more about creating a plugin. Once implemented, it can be configure in the argo-rollouts-config ConfigMap:</p><pre>apiVersion: v1<br />kind: ConfigMap<br />metadata:<br />  name: argo-rollouts-config<br />data:<br />  stepPlugins: |-<br />    - name: &quot;argoproj-labs/step-exec&quot; # name of the plugin<br />      location: &quot;file://./my-custom-plugin&quot; # supports http(s):// urls and file://Ya</pre><p>Users can then configure this plugin as part of their canary steps:</p><pre>apiVersion: argoproj.io/v1alpha1<br />kind: Rollout<br />metadata:<br />  name: example-plugin-ro<br />spec:<br />  strategy:<br />    canary:<br />      steps:<br />        - plugin:<br />            name: argoproj-labs/step-exec<br />            config:<br />              command: echo &quot;hello world&quot;</pre><p>While these plugins do not require to be open-source, we are looking forward to what the community will implement in the upcoming months. If you are interested in contributing a canary step plugin to the community, simply open an issue under argo-rollouts requesting an argoproj-labs repository to host your plugin.</p><p>Contributed by: <a href=\"https://github.com/agaudreault\">Alexandre Gaudreault</a></p><h3>Analysis Consecutive Success Limit</h3><p>This provides the <em>inverse</em> of what an analysis currently does. The main use case for this is to allow users to wait on a condition (in a step analysis especially) to hold, before proceeding to the next step.</p><p>Here is an example analysis:</p><pre>apiVersion: argoproj.io/v1alpha1<br />kind: AnalysisTemplate<br />metadata:<br />  name: success-rate<br />spec:<br />  args:<br />  - name: service-name<br />  metrics:<br />  - name: success-rate<br />    interval: 1m<br />    successCondition: result[0] &lt;= 0.95<br />    consecutiveSuccessLimit: 3<br />    provider:<br />      prometheus:<br />        address: http://prometheus.example.com:9090<br />        query: |<br />          sum(irate(<br />            istio_requests_total{reporter=&quot;source&quot;,destination_service=~&quot;{{args.service-name}}&quot;,response_code!~&quot;5.*&quot;}[1m]<br />          )) /<br />          sum(irate(<br />            istio_requests_total{reporter=&quot;source&quot;,destination_service=~&quot;{{args.service-name}}&quot;}[1m]<br />          ))</pre><p>You can find more information in the documentation found <a href=\"https://argo-rollouts.readthedocs.io/en/latest/features/analysis/#consecutivesuccesslimit-and-failurelimit\">here</a> .</p><p>Contributed by: <a href=\"https://github.com/y-rabie\">Youssef Rabie</a></p><h3>Other Features</h3><ul><li>New Prometheus metric: build_info (<a href=\"https://github.com/argoproj/argo-rollouts/issues/3591\">#3591</a>)</li><li>Enable pprof profiling support (<a href=\"https://github.com/argoproj/argo-rollouts/issues/3769\">#3769</a>)</li><li>Allow specifying full annotations for Nginx canary (<a href=\"https://github.com/argoproj/argo-rollouts/issues/3671\">#3671</a>)</li><li>Credentials to download plugin (<a href=\"https://github.com/argoproj/argo-rollouts/issues/3905\">#3905</a>)</li></ul><h3>Bug fixes</h3><p>We had 36 labeled bug fixes in this release some of the area’s of focus for bugs have been around Rollouts getting stuck progressing and better verification of not causing any outage during a rollout. So, if you have experienced any of these issue test this release out and let us know how it behaves.</p><h3>Summary</h3><p>This releases big feature was around step plugins, I can’t wait to see what this feature empowers end users to create. Feel free to share in the CNCF Argo Rollouts Slack channel and open an issue if you would like a plugin repo on argoproj-labs. Additionally, delve into the complete change log <a href=\"https://github.com/argoproj/argo-rollouts/blob/master/CHANGELOG.md\">here</a>, and don’t forget to try out the release, available <a href=\"https://github.com/argoproj/argo-rollouts/releases/tag/v1.8.0\">here</a>. A heartfelt thank you goes out to all those who contributed to this release.</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=cf3183fae1af\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/argo-rollouts-1-8-released-cf3183fae1af\">Argo Rollouts 1.8 Released</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.69898,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "New Release for Argo CD Image Updater — 0.15",
      "link": "https://blog.argoproj.io/new-release-for-argo-cd-image-updater-0-15-d41d20a4e60e?source=rss----21be29067291---4",
      "published": "Tue, 21 Jan 2025 22:25:44 GMT",
      "summary": "<h3>New Release for Argo CD Image Updater — 0.15</h3><p>We are pleased to announce a brand new release of Argo CD Image Updater, the companion controller to Argo CD for automatically updating container images in Argo CD applications. Read on for more details.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Tjl-5vVWKCnW3DIcfiyZHg.jpeg\" /></figure><p>Argo CD Image Updater is a project <a href=\"https://argocd-image-updater.readthedocs.io/en/stable/\">available at Argo Labs</a>. You can use it to automatically monitor your container registries and instruct your applications to perform a redeployment when a new version of a container is available. This means that you can gain the benefits of continuous delivery without the need of custom pipelines for updating your Kubernetes manifest.</p><p>This <a href=\"https://github.com/argoproj-labs/argocd-image-updater/releases/tag/v0.15.0\">release</a> includes 6 new features, 16 fixes and several documentation updates.</p><p>Here are some highlights:</p><h3>Support of other namespaces apart from “argocd”</h3><p>Traditionally all Argo CD application manifests are deployed in the “argocd” namespace. In recent versions of Argo CD you can now use any namespace for your applications (argocd is still the default).</p><p>There is now support for making Argo CD Image Updater work with Argo CD applications that are not on the argocd namespace.</p><p>Thanks <a href=\"https://github.com/sribiere-jellysmack\">S Ribiere</a> (Jellysmack) for implementing <a href=\"https://github.com/argoproj-labs/argocd-image-updater/pull/763\">this feature</a>.</p><h3>Preserve field order when updating Kustomize files</h3><p>Argo CD Image Updater has built-in support for Kustomize applications. If the <a href=\"https://argocd-image-updater.readthedocs.io/en/stable/basics/update-methods/#git-write-back-method\">Git write back method</a> is used, Argo CD Image Updater can also update the container image in the kustomization YAML file of the application.</p><p>Unfortunately the field order was not preserved. This means that running “git diff” (or using Argo CD) would show inconsistent changes that were not related to the image update.</p><p>Now Argo CD Image Updater will preserve the existing field order before and after the update in a predictable manner making automation with other tools much easier.</p><p>Thanks <a href=\"https://github.com/jtdoepke\">Jaye Doepke</a> (Mintel) for implementing <a href=\"https://github.com/argoproj-labs/argocd-image-updater/pull/666\">this feature</a>.</p><h3>Updating multiple images when using Helm value files</h3><p>Apart from Kustomize, Argo CD Image Updater can also monitor Helm charts and automatically update container tags mentioned in Helm value files.</p><p>In the most typical case a single Helm application will contain a single container image reference. Argo CD Image Updater will correctly detect the new version of the image and update it on the value files.</p><p>Sometimes however a single Helm application will contain multiple container tags. In this case Argo CD Image Updater would detect changes in all images but only update one of them. This process was now updated and now Argo CD Image Updater will work correctly with multi-image applications with the expected behavior.</p><p>Thanks <a href=\"https://github.com/ljupchokotev\">Lyupcho Kotev</a> (Codira AB) for implementing <a href=\"https://github.com/argoproj-labs/argocd-image-updater/pull/790\">this feature</a>.</p><h3>Updating Argo CD applications when auto-sync is disabled</h3><p>The main benefit of Argo CD Image Updater is fully automating all application deployments. A new container image is published in the registry, Argo CD Image Updater detects it and writes back to Git, Argo CD takes over and syncs all changes.</p><p>Some organizations however do not employ the auto-sync behavior of Argo CD. This can happen in several cases when deployments must happen manually (usually in production environments). In those scenarios Argo CD Image Updater would not “see” the updated image in the live application (as it was never deployed by Argo CD). This makes Argo CD Image Updater fall in a constant loop where it tries to update the same image again and again, but Argo CD does not deploy anything since auto-sync is disabled.</p><p>This behavior has now changed and Argo CD Image Updater will work even for Argo CD applications where auto-sync is disabled. Argo CD Image Updater will update the image only once as expected and then skip any further changes even if they are not yet on the live application definition.</p><p>Thanks <a href=\"https://github.com/Fs02\">Surya Asriadie</a> (Smart News) for implementing <a href=\"https://github.com/argoproj-labs/argocd-image-updater/pull/607\">this feature</a>.</p><h3>Support for Argo CD multi-source application sets</h3><p>Argo CD Image Updater recently gained support for <a href=\"https://argo-cd.readthedocs.io/en/stable/user-guide/multiple_sources/\">multi-source applications</a>. The basic functionality worked great for individual applications, but in the case of <a href=\"https://argo-cd.readthedocs.io/en/latest/user-guide/application-set/\">Application Sets</a> Argo CD Image Updater could not locate the type of each application (chart/kustomize/manifest) from the resource specification.</p><p>Now Argo CD Image Updater detects the type of each application from the status field of the resource, allowing you to automatically update images even if you employ Application Sets in your organization.</p><p>Thanks <a href=\"https://github.com/Sovietaced\">Jason Parraga</a> (Stack AV) for implementing <a href=\"https://github.com/argoproj-labs/argocd-image-updater/pull/772\">this feature</a>.</p><h3>Improved release process and unit testing</h3><p>As <a href=\"https://blog.argoproj.io/new-release-for-argo-image-updater-0-13-1fa3ef11996f\">promised in the previous release</a>, there were several other internal changes in the project in areas of integration testing and better contributor experience. Even though these changes do not correspond to use-visible features, they are crucial for helping newcomers to the project and accepting new features. We are always looking for ways to attract contributors and making the developer experience an easy process is always a constant goal for us.</p><p>Multiple people were involved in this effort. See all changes <a href=\"https://github.com/argoproj-labs/argocd-image-updater/releases/tag/v0.15.0\">in the release notes</a>.</p><h3>Where to report issues with the release</h3><p>If you would like to contribute new features to Argo CD Image Updater, please submit a pull request as usual.</p><p>If you find any issues with the release please find us on the #argo-cd-image-updater channel in the <a href=\"https://cloud-native.slack.com/messages/CHY2THYUU\">CNCF Slack instance</a>. If you are interested in becoming a maintainer then please contact us in the #argo-cd-contributors channel</p><p>Happy deployments!</p><p>Photo by <a href=\"https://unsplash.com/@joshyb_?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash\">Joshua Bayliss</a> on <a href=\"https://unsplash.com/photos/a-tractor-is-parked-next-to-a-pile-of-logs-GmlTXy_DbQM?utm_content=creditCopyText&amp;utm_medium=referral&amp;utm_source=unsplash\">Unsplash</a></p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d41d20a4e60e\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/new-release-for-argo-cd-image-updater-0-15-d41d20a4e60e\">New Release for Argo CD Image Updater — 0.15</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.6989834,
      "translated": false
    },
    {
      "feed_name": "ArgoCD Blog",
      "source_language": "en",
      "title": "Argo CD v2.14 Release Candidate",
      "link": "https://blog.argoproj.io/argo-cd-v2-14-release-candidate-57a664791e2a?source=rss----21be29067291---4",
      "published": "Wed, 18 Dec 2024 18:46:22 GMT",
      "summary": "<h3><strong>Argo CD v2.14</strong></h3><p>We are thrilled to announce the release of Argo CD 2.14, packed with new features, bug fixes, and documentation updates to enhance your experience.</p><p>We hope you enjoy the new features and improvements in Argo CD 2.14. As always, we appreciate your feedback on any bugs or issues you encounter.</p><p>Now, let’s dive into the details.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9ANBGyCAjfUW5J_v6cm8SA.png\" /></figure><h4><strong>Global Sync Timeout for Applications</strong></h4><p>The global sync timeout feature addresses issues where the sync process gets stuck indefinitely, often due to resources failing to start properly and continuously retrying. Now, a global timeout can be configured on the Argo CD Controller to timeout long-running sync operations thanks to <a href=\"https://github.com/andrii-korotkov-verkada\">Andrii Korotkov</a> (Verkada)!</p><p>You can configure the timeout by updating controller.sync.timeout.seconds in the <a href=\"https://argo-cd.readthedocs.io/en/release-2.14/operator-manual/argocd-cmd-params-cm-yaml/\">argocd-cmd-params-cm configmap</a>.</p><h4><strong>Upgrading Helm to 3.16.2 and adding skipSchemaValidation Flag</strong></h4><p>Helm 3.16 exposes the--skip-schema-validation flag for the helm template command which is now available via the <a href=\"https://argo-cd.readthedocs.io/en/latest/user-guide/helm/#helm-skip-schema-validation\">argocd cli and Application spec.</a> --skip-schema-validation allows users to bypass schema validation—a crucial feature for offline clusters where external schemas are inaccessible. Additionally, Istio 1.24 requires Helm 3.16 or higher.</p><p>Contributed by dmosesson!</p><h4>Application Resource Deletion Protection</h4><p>New <a href=\"https://argo-cd.readthedocs.io/en/release-2.14/user-guide/sync-options/#resource-pruning-with-confirmation\">sync options</a> are now available to help prevent accidental resource deletion. This functionality is particularly useful when Argo CD is used to manage critical resources such as namespaces, volumes, or ingresses in a production environment. Accidental deletion of such resources can lead to data loss or service downtime, necessitating human approval. To enable this functionality, apply the argocd.argoproj.io/sync-options: Prune=confirm annotation to the desired Kubernetes resource. Once the annotation is in place, Argo CD will require manual approval before pruning the resource during application synchronization. Similarly, the argocd.argoproj.io/sync-options: Delete=confirm annotation alters the application deletion process. When this annotation is applied, Argo CD will prompt for confirmation before performing a cascading deletion of the application.</p><p>Thanks to <a href=\"https://github.com/alexmt\">Alexander Matyushentsev</a> (Akuity)!</p><h4><strong>Disable Server Side Apply on individual resources</strong></h4><p>Argo CD introduced server-side apply in v2.10, enhancing how resource changes are managed by leveraging Kubernetes’ native capabilities for conflict resolution and declarative updates. Now, it supports disabling server-side apply at the individual resource level, providing greater flexibility and control over specific resource configurations. Added by <a href=\"https://github.com/pasha-codefresh\">Pasha Kostohrys</a> (Codefresh)!</p><h4><strong>Disable writing K8s Events</strong></h4><p>In environments with many applications or high application churn, Argo CD can cause load on the Kubernetes API server and etcd with the number of events it produces. Operators can now disable the writing of Kubernetes events or tune the ones Argo CD produces.</p><p>Introduced by <a href=\"https://github.com/Jack-R-lantern\">Jack-R-lantern</a>!</p><h4>Faster Application Refreshes</h4><p>When Argo CD manages a cluster with many resources, like tens of thousands of pods and replicasets, it is slow to process changes across the resources. The Argo CD UI becomes particularly slow.</p><p>Thanks to <a href=\"https://github.com/mpelekh\">Mykola Pelekh</a>, you can now configure batches that reduce lock contention and increase the refresh speed! Both controller.cluster.cache.batch.events.processing and controller.cluster.cache.events.processing.interval can be configured in the <a href=\"https://argo-cd.readthedocs.io/en/release-2.14/operator-manual/argocd-cmd-params-cm-yaml/\">argocd-cmd-params-cm configmap</a> to enable and tune the feature</p><h3>Other Notable Changes</h3><p><a href=\"https://github.com/argoproj/argo-cd/pull/19963\">Display SHA’s revision in history</a> — <a href=\"https://github.com/Tchoupinax\">Tchoupinax</a></p><p>Add <a href=\"https://github.com/argoproj/argo-cd/pull/18703\">cache layer</a> for Argo Projects — <a href=\"https://github.com/dacofr\">Daco</a></p><p>Globally <a href=\"https://github.com/argoproj/argo-cd/pull/20064\">parameterize</a> requeue time for applicationsets — <a href=\"https://github.com/rumstead\">rumstead</a></p><p><a href=\"https://github.com/argoproj/argo-cd/pull/20275\">Exponential backoff</a> for self heal — <a href=\"https://github.com/alexmt\">Alexander Matyushentsev</a></p><p><a href=\"https://github.com/argoproj/argo-cd/pull/20462\">Add ignore-healthcheck </a>annotation — <a href=\"https://github.com/CefBoud\">ABBOUD Moncef</a></p><p>Support Istio <a href=\"https://github.com/argoproj/argo-cd/pull/20273\">ServiceEntry</a> network node — <a href=\"https://github.com/zapkub\">Rungsikorn Rungsikavarnich</a></p><p>Enable <a href=\"https://github.com/argoproj/argo-cd/pull/20299\">word wrap in the manifest panel</a> — <a href=\"https://github.com/linghaoSu\">Linghao Su</a></p><h3>Where Can I Get the New Release?</h3><p>For more details and installation instructions, check the <a href=\"https://github.com/argoproj/argo-cd/releases/tag/v2.14.0-rc2\">release notes</a>, and stay tuned for <a href=\"https://argo-cd.readthedocs.io/en/stable/operator-manual/upgrading/overview/\">upgrade instructions</a>. Please try the release and share your feedback. Thanks to all Argo Community contributors and users for their contributions, feedback, and help to test the release!</p><img alt=\"\" height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=57a664791e2a\" width=\"1\" /><hr /><p><a href=\"https://blog.argoproj.io/argo-cd-v2-14-release-candidate-57a664791e2a\">Argo CD v2.14 Release Candidate</a> was originally published in <a href=\"https://blog.argoproj.io\">Argo Project</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>",
      "timestamp": 1761396318.698987,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "ISTIO-SECURITY-2025-002",
      "link": "https://istio.io/latest/news/security/istio-security-2025-002/",
      "published": "Mon, 20 Oct 2025 00:00:00 +0000",
      "summary": "<table>\n    <thead>\n        <tr>\n            <th colspan=\"2\">Disclosure Details</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>CVE(s)</td>\n            <td>\n                \n                    <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-55162\">CVE-2025-55162</a><br />\n                \n                    <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-54588\">CVE-2025-54588</a><br />\n                \n            </td>\n        </tr>\n        <tr>\n            <td>CVSS Impact Score</td>\n            <td>6.6 <a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS%3a3.1%2fAV%3aN%2fAC%3aL%2fPR%3aL%2fUI%3aN%2fS%3aU%2fC%3aN%2fI%3aN%2fA%3aH&amp;version=3.1\">CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H</a></td>\n        </tr>\n        <tr>\n            <td>Affected Releases</td>\n            <td>\n                \n                    1.27.0 to 1.27.1<br />\n                \n                    1.26.0 to 1.26.5<br />\n                \n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<h2 id=\"cve\">CVE</h2>\n<h3 id=\"envoy-cves\">Envoy CVEs</h3>\n<ul>\n<li><strong><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-62504\">CVE-2025-62504</a></strong>: (CVSS score 6.5, Medium): Lua modified large enough response body will cause Envoy to crash.</li>\n<li><strong><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2025-62409\">CVE-2025-62409</a></strong>: (CVSS score 6.6, Medium): Large requests and responses can cause TCP connection pool crash.</li>\n</ul>\n<h2 id=\"am-i-impacted\">Am I Impacted?</h2>\n<p>You are impacted if you use Lua via <code>EnvoyFilter</code> that returns an oversized response body exceeding the <code>per_connection_buffer_limit_bytes</code> (default 1MB) or where you have large requests\nand responses where a connection can be closed but data from upstream is still being sent.</p>",
      "timestamp": 1761396324.622553,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.27.3",
      "link": "https://istio.io/latest/news/releases/1.27.x/announcing-1.27.3/",
      "published": "Mon, 20 Oct 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.27.2 and 1.27.3.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n    \n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.27.x/announcing-1.27/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n                \n                    \n                \n            \n\n            <a class=\"entry\" href=\"https://istio.io/docs/setup/additional-setup/download-istio-release/\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n\n    <a class=\"entry\" href=\"https://istio.io/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.27.2...1.27.3\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"security-update\">Security Update</h2>\n<p>This release implements the security updates described in our 20th of October post, <a href=\"https://istio.io/news/security/istio-security-2025-002/\"><code>ISTIO-SECURITY-2025-002</code></a>.</p>\n<h2 id=\"changes\">Changes</h2>\n<p>There are no other changes introduced in this release outside of the above mentioned security updates.</p>",
      "timestamp": 1761396324.6225584,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.26.6",
      "link": "https://istio.io/latest/news/releases/1.26.x/announcing-1.26.6/",
      "published": "Mon, 20 Oct 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.26.5 and Istio 1.26.6.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.26.x/announcing-1.26/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n\n            <a class=\"entry\" href=\"https://github.com/istio/istio/releases/tag/1.26.6\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n        \n    \n\n    <a class=\"entry\" href=\"https://archive.istio.io/v1.26/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.26.5...1.26.6\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"security-update\">Security Update</h2>\n<p>This release implements the security updates described in our 20th of October post, <a href=\"https://istio.io/news/security/istio-security-2025-002/\"><code>ISTIO-SECURITY-2025-002</code></a>.</p>\n<h2 id=\"changes\">Changes</h2>\n<p>There are no other changes introduced in this release outside of the above mentioned security updates.</p>",
      "timestamp": 1761396324.622563,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.27.2",
      "link": "https://istio.io/latest/news/releases/1.27.x/announcing-1.27.2/",
      "published": "Mon, 13 Oct 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.27.1 and 1.27.2.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n    \n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.27.x/announcing-1.27/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n            <a class=\"update-notice entry\"\n                data-title='Update Notice'\n                data-downloadhref=\"https://github.com/istio/istio/releases/tag/1.27.2\"\n                data-downloadbuttontext=\"DOWNLOAD 1.27.2\"\n                data-updateadvice='Before you download 1.27.2, you should know that there's a newer patch release with the latest bug fixes and perf improvements.'\n                data-updatebutton='LEARN ABOUT ISTIO 1.27.3'\n                data-updatehref=\"https://istio.io/latest/news/releases/1.27.x/announcing-1.27.3/\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n\n    <a class=\"entry\" href=\"https://istio.io/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.27.1...1.27.2\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"changes\">Changes</h2>\n<ul>\n<li>\n<p><strong>Improved</strong> access to referenced TLS secrets to require both namespace and service accounts to match (previously only the namespace), or to have an explicit <code>ReferenceGrant</code>, for Kubernetes Gateway API gateways. Gateways that use a hostname address remain namespace-only.</p>\n</li>\n<li>\n<p><strong>Fixed</strong> a goroutine leak in multicluster where <code>krt</code> collections with data from remote clusters would stay in memory even after that cluster was removed.\n(<a href=\"https://github.com/istio/istio/issues/57269\">Issue #57269</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> the behavior of istio-cni cleanup when the <code>get daemonset</code> command fails with an error other than &ldquo;not found&rdquo;. It now defaults to not cleaning up the CNI config and binary when it cannot be determined whether an upgrade, deletion, or node reboot is in progress. (<a href=\"https://github.com/istio/istio/issues/57316\">Issue #57316</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> the cluster waypoint <code>correct_originate</code> configuration when <code>PILOT_SKIP_VALIDATE_TRUST_DOMAIN</code> is set.  (<a href=\"https://github.com/istio/istio/issues/56741\">Issue #56741</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an annotation issue where both <code>istio.io/reroute-virtual-interfaces</code> and the deprecated <code>traffic.sidecar.istio.io/kubevirtInterfaces</code> were processed. The newer <code>reroute-virtual-interfaces</code> annotation now correctly takes precedence.  (<a href=\"https://github.com/istio/istio/issues/57662\">Issue #57662</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> <code>ServiceEntry</code> resolution in ztunnel to match port names to pod container ports, aligning behavior with sidecars, when there isn&rsquo;t an explicit <code>targetPort</code> set.\n(<a href=\"https://github.com/istio/istio/issues/57713\">Issue #57713</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> missing gateway reconciliation for MeshConfig changes. (<a href=\"https://github.com/istio/istio/issues/57890\">Issue #57890</a>)</p>\n</li>\n<li>\n<p><strong>Removed</strong> the istioctl installation dependency between pilot and CNI. CNI installation is no longer dependent on pilot being installed first. If the istio-cni configuration exists before installation (which can be the case when using an istio-owned CNI config), pilot installation will not fail while waiting for CNI readiness since CNI installation is no longer dependent on pilot.  (<a href=\"https://github.com/istio/istio/issues/57600\">Issue #57600</a>)</p>\n</li>\n</ul>",
      "timestamp": 1761396324.6225672,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.26.5",
      "link": "https://istio.io/latest/news/releases/1.26.x/announcing-1.26.5/",
      "published": "Mon, 13 Oct 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.26.4 and Istio 1.26.5.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.26.x/announcing-1.26/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n            <a class=\"update-notice entry\"\n                data-title='Update Notice'\n                data-downloadhref=\"https://github.com/istio/istio/releases/tag/1.26.5\"\n                data-downloadbuttontext=\"DOWNLOAD 1.26.5\"\n                data-updateadvice='Before you download 1.26.5, you should know that there's a newer patch release with the latest bug fixes and perf improvements.'\n                data-updatebutton='LEARN ABOUT ISTIO 1.26.6'\n                data-updatehref=\"https://istio.io/latest/news/releases/1.26.x/announcing-1.26.6/\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n        \n    \n\n    <a class=\"entry\" href=\"https://archive.istio.io/v1.26/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.26.4...1.26.5\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"changes\">Changes</h2>\n<ul>\n<li>\n<p><strong>Improved</strong> access to referenced TLS secrets to require both namespace and service accounts to match (previously only the namespace), or to have an explicit <code>ReferenceGrant</code>, for Kubernetes Gateway API gateways. Gateways that use a hostname address remain namespace-only.</p>\n</li>\n<li>\n<p><strong>Added</strong> the ability to turn off associating pods to proxies by IP address if association by name and namespace fails.\nThis is on by default, matching the old behavior, and can be disabled with <code>ENABLE_PROXY_FIND_POD_BY_IP=off</code>.\nFuture versions have this off by default.</p>\n</li>\n<li>\n<p><strong>Fixed</strong> the cluster waypoint <code>correct_originate</code> configuration when <code>PILOT_SKIP_VALIDATE_TRUST_DOMAIN</code> is set. (<a href=\"https://github.com/istio/istio/issues/56741\">Issue #56741</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an annotation issue where both <code>istio.io/reroute-virtual-interfaces</code> and the deprecated <code>traffic.sidecar.istio.io/kubevirtInterfaces</code> were processed. The newer <code>reroute-virtual-interfaces</code> annotation now correctly takes precedence. (<a href=\"https://github.com/istio/istio/issues/57662\">Issue #57662</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> <code>ServiceEntry</code> resolution in ztunnel to match port names to pod container ports, aligning behavior with sidecars, when there isn&rsquo;t an explicit <code>targetPort</code> set.\n(<a href=\"https://github.com/istio/istio/issues/57713\">Issue #57713</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> missing gateway reconciliation for MeshConfig changes. (<a href=\"https://github.com/istio/istio/issues/57890\">Issue #57890</a>)</p>\n</li>\n<li>\n<p><strong>Removed</strong> the istioctl installation dependency between pilot and CNI. CNI installation is no longer dependent on pilot being installed first. If the istio-cni configuration exists before installation (which can be the case when using an istio-owned CNI config), pilot installation will not fail while waiting for CNI readiness since CNI installation is no longer dependent on pilot. (<a href=\"https://github.com/istio/istio/issues/57600\">Issue #57600</a>)</p>\n</li>\n</ul>",
      "timestamp": 1761396324.622571,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Support for Istio 1.25 has ended",
      "link": "https://istio.io/latest/news/support/announcing-1.25-eol-final/",
      "published": "Tue, 30 Sep 2025 00:00:00 +0000",
      "summary": "<p>As <a href=\"https://istio.io/news/support/announcing-1.25-eol/\">previously announced</a>, support for Istio 1.25 has now officially ended.</p>\n<p>At this point we will no longer back-port fixes for security issues and critical bugs to 1.25. We highly recommend that\nyou upgrade to the latest version of Istio (1.27.3) if you haven&rsquo;t already.</p>",
      "timestamp": 1761396324.6225746,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "ISTIO-SECURITY-2025-001",
      "link": "https://istio.io/latest/news/security/istio-security-2025-001/",
      "published": "Wed, 03 Sep 2025 00:00:00 +0000",
      "summary": "<table>\n    <thead>\n        <tr>\n            <th colspan=\"2\">Disclosure Details</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>CVE(s)</td>\n            <td>\n                \n                    <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-55162\">CVE-2025-55162</a><br />\n                \n                    <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-54588\">CVE-2025-54588</a><br />\n                \n            </td>\n        </tr>\n        <tr>\n            <td>CVSS Impact Score</td>\n            <td>7.5 <a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV%3aN%2fAC%3aL%2fPR%3aN%2fUI%3aN%2fS%3aU%2fC%3aN%2fI%3aN%2fA%3aH&amp;version=3.1\">AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H</a></td>\n        </tr>\n        <tr>\n            <td>Affected Releases</td>\n            <td>\n                \n                    1.27.0<br />\n                \n                    1.26.0 to 1.26.3<br />\n                \n                    1.25.0 to 1.25.4<br />\n                \n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<h2 id=\"cve\">CVE</h2>\n<h3 id=\"envoy-cves\">Envoy CVEs</h3>\n<ul>\n<li><strong><a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-95j4-hw7f-v2rh\">CVE-2025-55162</a></strong>: (CVSS score 6.3, Moderate): OAuth2 Filter Signout route will not clear cookies because of missing &ldquo;secure;&rdquo; flag</li>\n<li><strong><a href=\"https://github.com/envoyproxy/envoy/security/advisories/GHSA-g9vw-6pvx-7gmw\">CVE-2025-54588</a></strong>: (CVSS score 7.5, High): Use after free in DNS cache</li>\n</ul>\n<h2 id=\"am-i-impacted\">Am I Impacted?</h2>\n<p>You are impacted if you are using Istio 1.27.0, 1.26.0 to 1.26.3, or 1.25.0 to 1.25.4, and you use cookies named with prefix <code>__Secure-</code> or <code>__Host-</code>, or you are using <code>EnvoyFilter</code> with <code>dynamic_forward_proxy</code>.</p>",
      "timestamp": 1761396324.6225784,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.27.1",
      "link": "https://istio.io/latest/news/releases/1.27.x/announcing-1.27.1/",
      "published": "Wed, 03 Sep 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.27.0 and 1.27.1.</p>\n<p>This release implements the security updates described in our 3rd of September post, <a href=\"https://istio.io/news/security/istio-security-2025-001/\"><code>ISTIO-SECURITY-2025-001</code></a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n    \n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.27.x/announcing-1.27/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n            <a class=\"update-notice entry\"\n                data-title='Update Notice'\n                data-downloadhref=\"https://github.com/istio/istio/releases/tag/1.27.1\"\n                data-downloadbuttontext=\"DOWNLOAD 1.27.1\"\n                data-updateadvice='Before you download 1.27.1, you should know that there's a newer patch release with the latest bug fixes and perf improvements.'\n                data-updatebutton='LEARN ABOUT ISTIO 1.27.3'\n                data-updatehref=\"https://istio.io/latest/news/releases/1.27.x/announcing-1.27.3/\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n\n    <a class=\"entry\" href=\"https://istio.io/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.27.0...1.27.1\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"changes\">Changes</h2>\n<ul>\n<li>\n<p><strong>Fixed</strong> an issue where <code>istio-iptables</code> would sometimes ignore the IPv4 state in favor of the IPv6 state when deciding whether new iptables rules needed to be applied.\n(<a href=\"https://github.com/istio/istio/issues/56587\">Issue #56587</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> a bug where our tag watcher code didn&rsquo;t consider the default revision to be the same as the default tag. This would cause issues where Kubernetes gateways wouldn&rsquo;t be programmed.\n(<a href=\"https://github.com/istio/istio/issues/56767\">Issue #56767</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an issue causing Gateway chart installation failures with Helm v3.18.5 due to a stricter JSON schema validator. The chart&rsquo;s schema has been updated to be compatible.\n(<a href=\"https://github.com/istio/istio/issues/57354\">Issue #57354</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an issue where the <code>PreserveHeaderCase</code> option was overriding other HTTP/1.x protocol options, such as HTTP/1.0.\n(<a href=\"https://github.com/istio/istio/issues/57528\">Issue #57528</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> a change in output of <code>istioctl proxy-status</code> to be more consistent with previous versions.\n(<a href=\"https://github.com/istio/istio/issues/57339\">Issue #57339</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> iptables detection logic to fall back to <code>iptables-nft</code> when the <code>iptable_nat</code> module is missing.\n(<a href=\"https://github.com/istio/istio/issues/57380\">Issue #57380</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> a bug that incorrectly rejected traffic policies when only <code>retry_budget</code> was set.</p>\n</li>\n</ul>",
      "timestamp": 1761396324.6225824,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.26.4",
      "link": "https://istio.io/latest/news/releases/1.26.x/announcing-1.26.4/",
      "published": "Wed, 03 Sep 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.26.3 and 1.26.4.</p>\n<p>This release implements the security updates described in our 3rd of September post, <a href=\"https://istio.io/news/security/istio-security-2025-001/\"><code>ISTIO-SECURITY-2025-001</code></a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.26.x/announcing-1.26/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n            <a class=\"update-notice entry\"\n                data-title='Update Notice'\n                data-downloadhref=\"https://github.com/istio/istio/releases/tag/1.26.4\"\n                data-downloadbuttontext=\"DOWNLOAD 1.26.4\"\n                data-updateadvice='Before you download 1.26.4, you should know that there's a newer patch release with the latest bug fixes and perf improvements.'\n                data-updatebutton='LEARN ABOUT ISTIO 1.26.6'\n                data-updatehref=\"https://istio.io/latest/news/releases/1.26.x/announcing-1.26.6/\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n        \n    \n\n    <a class=\"entry\" href=\"https://archive.istio.io/v1.26/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.26.3...1.26.4\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"changes\">Changes</h2>\n<ul>\n<li>\n<p><strong>Fixed</strong> an issue where <code>istio-iptables</code> would sometimes ignore the IPv4 state in favor of the IPv6 state when deciding whether new iptables rules needed to be applied.\n(<a href=\"https://github.com/istio/istio/issues/56587\">Issue #56587</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> a bug where our tag watcher code didn&rsquo;t consider the default revision to be the same as the default tag. This would cause issues where Kubernetes gateways wouldn&rsquo;t be programmed.\n(<a href=\"https://github.com/istio/istio/issues/56767\">Issue #56767</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an issue causing Gateway chart installation failures with Helm v3.18.5 due to a stricter JSON schema validator. The chart&rsquo;s schema has been updated to be compatible.\n(<a href=\"https://github.com/istio/istio/issues/57354\">Issue #57354</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an issue where the <code>PreserveHeaderCase</code> option was overriding other HTTP/1.x protocol options, such as HTTP/1.0.\n(<a href=\"https://github.com/istio/istio/issues/57528\">Issue #57528</a>)</p>\n</li>\n</ul>",
      "timestamp": 1761396324.6225863,
      "translated": false
    },
    {
      "feed_name": "Istio Blog",
      "source_language": "en",
      "title": "Announcing Istio 1.25.5",
      "link": "https://istio.io/latest/news/releases/1.25.x/announcing-1.25.5/",
      "published": "Wed, 03 Sep 2025 00:00:00 +0000",
      "summary": "<p>This release contains bug fixes to improve robustness. This release note describes what’s different between Istio 1.25.4 and Istio 1.25.5.</p>\n<p>This release implements the security updates described in our 3rd of September post, <a href=\"https://istio.io/news/security/istio-security-2025-001/\"><code>ISTIO-SECURITY-2025-001</code></a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n                \n                \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n            \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n        \n        \n        \n        \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n\n\n\n\n\n\n\n<div class=\"relnote-actions call-to-action\">\n    \n    \n\n    \n    \n        \n        \n            \n            \n        \n            \n            \n        \n    \n\n    \n        <a class=\"entry\" href=\"https://istio.io/latest/news/releases/1.25.x/announcing-1.25/upgrade-notes/\">\n            <h5>BEFORE YOU UPGRADE</h5>\n            <p>Things to know and prepare before upgrading.</p>\n        </a>\n    \n\n    \n        \n        \n            \n\n            <a class=\"entry\" href=\"https://github.com/istio/istio/releases/tag/1.25.5\">\n                <h5>DOWNLOAD</h5>\n                <p>Download and install this release.</p>\n            </a>\n        \n    \n\n    \n    \n        \n    \n\n    <a class=\"entry\" href=\"https://archive.istio.io/v1.25/docs\">\n        <h5>DOCS</h5>\n        <p>Visit the documentation for this release.</p>\n    </a>\n\n    \n    \n\n    \n        \n        \n\n        <a class=\"entry\" href=\"https://github.com/istio/istio/compare/1.25.4...1.25.5\">\n            <h5>SOURCE CHANGES</h5>\n            <p>Inspect the full set of source code changes.</p>\n        </a>\n    \n</div>\n\n<h2 id=\"changes\">Changes</h2>\n<ul>\n<li>\n<p><strong>Fixed</strong> an issue where <code>istio-iptables</code> would sometimes ignore the IPv4 state in favor of the IPv6 state when deciding whether new iptables rules needed to be applied.\n(<a href=\"https://github.com/istio/istio/issues/56587\">Issue #56587</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> a bug where our tag watcher code didn&rsquo;t consider the default revision to be the same as the default tag. This would cause issues where Kubernetes gateways wouldn&rsquo;t be programmed.\n(<a href=\"https://github.com/istio/istio/issues/56767\">Issue #56767</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an issue causing Gateway chart installation failures with Helm v3.18.5 due to a stricter JSON schema validator. The chart&rsquo;s schema has been updated to be compatible.\n(<a href=\"https://github.com/istio/istio/issues/57354\">Issue #57354</a>)</p>\n</li>\n<li>\n<p><strong>Fixed</strong> an issue where the <code>PreserveHeaderCase</code> option was overriding other HTTP/1.x protocol options, such as HTTP/1.0.\n(<a href=\"https://github.com/istio/istio/issues/57528\">Issue #57528</a>)</p>\n</li>\n</ul>",
      "timestamp": 1761396324.62259,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "release-1.10.4",
      "link": "https://kubevela.io/blog/2025/10/20/release-1.10.4/",
      "published": "Mon, 20 Oct 2025 00:00:00 GMT",
      "summary": "title: KubeVela 1.10.4 Now Available",
      "timestamp": 1761396327.9762368,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "LFX Mentorship: Meeting with the KubeVela Community in Open Source",
      "link": "https://kubevela.io/blog/2023/05/30/lfx-cue-generator/",
      "published": "Tue, 30 May 2023 00:00:00 GMT",
      "summary": "This article describes the experience of participating in the LFX Mentorship program and contributing to the KubeVela community.",
      "timestamp": 1761396327.9762416,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "PromptOps in Application Delivery: Empowering Your Workflow with ChatGPT",
      "link": "https://kubevela.io/blog/2023/04/06/workflow-chat-gpt/",
      "published": "Thu, 06 Apr 2023 00:00:00 GMT",
      "summary": "This article introduces how to use ChatGPT in your KubeVela Workflow",
      "timestamp": 1761396327.9762452,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "Interpreting KubeVela 1.7: Taking Over Your Existing Workloads",
      "link": "https://kubevela.io/blog/2023/03/30/kubevela-1.7/",
      "published": "Thu, 30 Mar 2023 00:00:00 GMT",
      "summary": "This article interprets the release of KubeVela 1.7.",
      "timestamp": 1761396327.9762485,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "KubeVela brings software delivery control plane capabilities to CNCF Incubator",
      "link": "https://kubevela.io/blog/2023/03/06/incubation/",
      "published": "Mon, 06 Mar 2023 00:00:00 GMT",
      "summary": "This article introduces how KubeVela brings software delivery control plane capabilities to CNCF Incubator",
      "timestamp": 1761396327.976252,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "How Does an Open-Source Workflow Engine Support an Enterprise-Level Serverless Architecture?",
      "link": "https://kubevela.io/blog/2023/01/18/workflow-sae/",
      "published": "Wed, 18 Jan 2023 00:00:00 GMT",
      "summary": "This article will focus on KubeVela Workflow and show its enterprise use cases in serverless scenario",
      "timestamp": 1761396327.9762554,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "Unified Application Management under Cloud-Edge Collaboration: A Solution Based on OpenYurt and KubeVela",
      "link": "https://kubevela.io/blog/2023/01/09/kubevela-openyurt-integration/",
      "published": "Mon, 09 Jan 2023 00:00:00 GMT",
      "summary": "This article will focus on KubeVela and OpenYurt (two open-source projects of CNCF) and introduce the solution of cloud-edge collaboration in a practical Helm application delivery scenario.",
      "timestamp": 1761396327.9762588,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "ArgoCD + Kubevela Integration",
      "link": "https://kubevela.io/blog/2023/01/06/kubevela-argocd-integration/",
      "published": "Fri, 06 Jan 2023 00:00:00 GMT",
      "summary": "This document aims to explain the integration of Kubevela and ArgoCD. We have two approaches to integrate this flow. This doc is trying to explain the pros and cons of two different approaches",
      "timestamp": 1761396327.976262,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "A retrospection of KubeVela in 2022",
      "link": "https://kubevela.io/blog/2022/11/29/retro-2022/",
      "published": "Tue, 29 Nov 2022 00:00:00 GMT",
      "summary": "This article gives a comprehensive introduction to KubeVela in 2022.",
      "timestamp": 1761396327.9762654,
      "translated": false
    },
    {
      "feed_name": "KubeVela Blog",
      "source_language": "en",
      "title": "Deploying your OAM applications in the Napptive cloud-native application platform",
      "link": "https://kubevela.io/blog/2022/11/24/napptive-kubevela/",
      "published": "Thu, 24 Nov 2022 00:00:00 GMT",
      "summary": "This article introduces how KubeVela is applied in Napptive to build cloud-native application platform.",
      "timestamp": 1761396327.9762702,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Cloud Logging for Security and Beyond",
      "link": "https://unit42.paloaltonetworks.com/cloud-logging-for-security/",
      "published": "Tue, 22 Jul 2025 21:00:47 +0000",
      "summary": "<p>Cloud logging is essential for security and compliance. Learn best practices when navigating AWS, Azure or GCP for comprehensive visibility into your environment.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/cloud-logging-for-security/\">Cloud Logging for Security and Beyond</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7091796,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Roles Here? Roles There? Roles Anywhere: Exploring the Security of AWS IAM Roles Anywhere",
      "link": "https://unit42.paloaltonetworks.com/aws-roles-anywhere/",
      "published": "Mon, 09 Jun 2025 10:00:08 +0000",
      "summary": "<p>This examination of the Amazon Web Services (AWS) Roles Anywhere service looks at potential risks, analyzed from both defender and attacker perspectives.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/aws-roles-anywhere/\">Roles Here? Roles There? Roles Anywhere: Exploring the Security of AWS IAM Roles Anywhere</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7091844,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Dirty DAG: New Vulnerabilities in Azure Data Factory’s Apache Airflow Integration",
      "link": "https://unit42.paloaltonetworks.com/azure-data-factory-apache-airflow-vulnerabilities/",
      "published": "Mon, 16 Dec 2024 23:00:37 +0000",
      "summary": "<p>Vulnerabilities in Microsoft Azure Data Factory's integration with Apache Airflow can lead to unauthorized access and control over cloud resources. </p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/azure-data-factory-apache-airflow-vulnerabilities/\">Dirty DAG: New Vulnerabilities in Azure Data Factory’s Apache Airflow Integration</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.709188,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "ModeLeak: Privilege Escalation to LLM Model Exfiltration in Vertex AI",
      "link": "https://unit42.paloaltonetworks.com/privilege-escalation-llm-model-exfil-vertex-ai/",
      "published": "Tue, 12 Nov 2024 11:00:11 +0000",
      "summary": "<p>New research reveals two vulnerabilities in Google's Vertex AI that may lead to privilege escalation or data theft  through custom jobs or malicious models.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/privilege-escalation-llm-model-exfil-vertex-ai/\">ModeLeak: Privilege Escalation to LLM Model Exfiltration in Vertex AI</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7091913,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Container Breakouts: Escape Techniques in Cloud Environments",
      "link": "https://unit42.paloaltonetworks.com/container-escape-techniques/",
      "published": "Thu, 18 Jul 2024 10:00:41 +0000",
      "summary": "<p>Unit 42 researchers test container escape methods and possible impacts within a Kubernetes cluster using a containerd container runtime. </p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/container-escape-techniques/\">Container Breakouts: Escape Techniques in Cloud Environments</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7091947,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Dual Privilege Escalation Chain: Exploiting Monitoring and Service Mesh Configurations and Privileges in GKE to Gain Unauthorized Access in Kubernetes",
      "link": "https://unit42.paloaltonetworks.com/google-kubernetes-engine-privilege-escalation-fluentbit-anthos/",
      "published": "Wed, 27 Dec 2023 14:00:57 +0000",
      "summary": "<p>Two issues in Google Kubernetes Engine (GKE) create a privilege escalation chain. We examine second-stage attacks which exploit the container environment.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/google-kubernetes-engine-privilege-escalation-fluentbit-anthos/\">Dual Privilege Escalation Chain: Exploiting Monitoring and Service Mesh Configurations and Privileges in GKE to Gain Unauthorized Access in Kubernetes</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.709198,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Mitigating RBAC-Based Privilege Escalation in Popular Kubernetes Platforms",
      "link": "https://unit42.paloaltonetworks.com/kubernetes-privilege-escalation/",
      "published": "Fri, 27 Jan 2023 14:00:20 +0000",
      "summary": "<p>We recap our research on privilege escalation and powerful permissions in Kubernetes and analyze the ways various platforms have addressed it.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/kubernetes-privilege-escalation/\">Mitigating RBAC-Based Privilege Escalation in Popular Kubernetes Platforms</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7092013,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Gaining Visibility Within Container Clusters",
      "link": "https://unit42.paloaltonetworks.com/visibility-k8s-clusters/",
      "published": "Fri, 15 Apr 2022 13:00:47 +0000",
      "summary": "<p>Service mesh platforms can be used to provide insight into the container processes and their network operations within K8s clusters.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/visibility-k8s-clusters/\">Gaining Visibility Within Container Clusters</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7092047,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Finding Azurescape – Cross-Account Container Takeover in Azure Container Instances",
      "link": "https://unit42.paloaltonetworks.com/azure-container-instances/",
      "published": "Thu, 09 Sep 2021 10:00:37 +0000",
      "summary": "<p>Affecting Azure Container Instances, Azurescape is the first known cross-account container takeover in the public cloud.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/azure-container-instances/\">Finding Azurescape – Cross-Account Container Takeover in Azure Container Instances</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7092083,
      "translated": false
    },
    {
      "feed_name": "Kubernetes Security by Palo Alto Networks",
      "source_language": "en",
      "title": "Microsoft Patched the Issue With Windows Containers That Enabled Siloscape",
      "link": "https://unit42.paloaltonetworks.com/windows-container-escape-patch/",
      "published": "Thu, 05 Aug 2021 15:00:08 +0000",
      "summary": "<p>Microsoft recently added additional security checks that address the Windows container escape that enabled Siloscape.</p>\n<p>The post <a href=\"https://unit42.paloaltonetworks.com/windows-container-escape-patch/\">Microsoft Patched the Issue With Windows Containers That Enabled Siloscape</a> appeared first on <a href=\"https://unit42.paloaltonetworks.com\">Unit 42</a>.</p>",
      "timestamp": 1761396334.7092113,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Security Debt Is Worse Than Tech Debt — and Twice as Invisible",
      "link": "https://securityboulevard.com/2025/05/security-debt-is-worse-than-tech-debt-and-twice-as-invisible/",
      "published": "Thu, 22 May 2025 03:08:01 +0000",
      "summary": "<p>Security Debt Is Worse Than Tech Debt — and Twice as Invisible We talk about tech debt like it’s a necessary evil. Move fast, break things, fix it later. Everyone’s cool with that. But security debt? That’s the quiet killer. It creeps in unnoticed, hides in your TODOs, and doesn’t scream until you’ve got ransomware […]</p>\n<p>The post <a href=\"https://annoyed.engineer/2025/05/21/security-debt-is-worse-than-tech-debt-and-twice-as-invisible/\">Security Debt Is Worse Than Tech Debt — and Twice as Invisible</a> appeared first on <a href=\"https://annoyed.engineer/\">Annoyed Engineer</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2025/05/security-debt-is-worse-than-tech-debt-and-twice-as-invisible/\">Security Debt Is Worse Than Tech Debt — and Twice as Invisible</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078276,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Open Source and foreign influence, should we panic?",
      "link": "https://securityboulevard.com/2025/05/open-source-and-foreign-influence-should-we-panic/",
      "published": "Thu, 15 May 2025 12:00:00 +0000",
      "summary": "<p>Updated 2025-09-08 to add notes about the similar fast-glob package. Wired recently published an article titled Security Researchers Warn a Widely Used Open Source Tool Poses a ‘Persistent’ Risk to the US which paints a dire picture of a popular open source Go package named easyjson. This sounds like it could be a problem if […]</p>\n<p>The post <a href=\"https://anchore.com/blog/easyjson-and-foreign-influence-should-we-panic/\">Open Source and foreign influence, should we panic?</a> appeared first on <a href=\"https://anchore.com/\">Anchore</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2025/05/open-source-and-foreign-influence-should-we-panic/\">Open Source and foreign influence, should we panic?</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078321,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "MCP, OAuth 2.1, PKCE, and the Future of AI Authorization",
      "link": "https://securityboulevard.com/2025/05/mcp-oauth-2-1-pkce-and-the-future-of-ai-authorization/",
      "published": "Wed, 14 May 2025 16:57:27 +0000",
      "summary": "<p><span class=\"span-reading-time rt-reading-time\"><span class=\"rt-label rt-prefix\"></span> <span class=\"rt-time\"> 6</span> <span class=\"rt-label rt-postfix\">min read</span></span>The MCP authorization spec sets a new standard for securing non-human AI agents – with lessons for anyone building autonomous, scalable systems.</p>\n<p>The post <a href=\"https://aembit.io/blog/mcp-oauth-2-1-pkce-and-the-future-of-ai-authorization/\">MCP, OAuth 2.1, PKCE, and the Future of AI Authorization</a> appeared first on <a href=\"https://aembit.io/\">Aembit</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2025/05/mcp-oauth-2-1-pkce-and-the-future-of-ai-authorization/\">MCP, OAuth 2.1, PKCE, and the Future of AI Authorization</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078357,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Kubernetes Ingress-nginx Remote Code Execution Vulnerability (CVE-2025-1974)",
      "link": "https://securityboulevard.com/2025/03/kubernetes-ingress-nginx-remote-code-execution-vulnerability-cve-2025-1974/",
      "published": "Thu, 27 Mar 2025 06:59:49 +0000",
      "summary": "<p>Overview Recently, NSFOCUS CERT detected that Kubernetes issued a security announcement and fixed the Kubernetes Ingress-nginx remote code execution vulnerability (CVE-2025-1974). The Ingress controller deployed in Kubernetes Pod can be accessed through the network without authentication. When the Admission webhook is open, an unauthenticated attacker can remotely inject any nginx configuration by sending a special […]</p>\n<p>The post <a href=\"https://nsfocusglobal.com/kubernetes-ingress-nginx-remote-code-execution-vulnerability-cve-2025-1974/\" rel=\"nofollow\">Kubernetes Ingress-nginx Remote Code Execution Vulnerability (CVE-2025-1974)</a> appeared first on <a href=\"https://nsfocusglobal.com/\" rel=\"nofollow\">NSFOCUS, Inc., a global network and cyber security leader, protects enterprises and carriers from advanced cyber attacks.</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2025/03/kubernetes-ingress-nginx-remote-code-execution-vulnerability-cve-2025-1974/\">Kubernetes Ingress-nginx Remote Code Execution Vulnerability (CVE-2025-1974)</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.407839,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Aembit Non-Human IAM Connects Cloud-Native and VM Environments",
      "link": "https://securityboulevard.com/2025/02/aembit-non-human-iam-connects-cloud-native-and-vm-environments/",
      "published": "Fri, 28 Feb 2025 19:21:04 +0000",
      "summary": "<p><span class=\"span-reading-time rt-reading-time\"><span class=\"rt-label rt-prefix\"></span> <span class=\"rt-time\"> 5</span> <span class=\"rt-label rt-postfix\">min read</span></span>Our latest update enables secure, seamless connectivity for workloads across cloud and Kubernetes, without trust domain restrictions.</p>\n<p>The post <a href=\"https://aembit.io/blog/aembit-non-human-iam-connects-cloud-native-and-vm-environments/\">Aembit Non-Human IAM Connects Cloud-Native and VM Environments</a> appeared first on <a href=\"https://aembit.io/\">Aembit</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2025/02/aembit-non-human-iam-connects-cloud-native-and-vm-environments/\">Aembit Non-Human IAM Connects Cloud-Native and VM Environments</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078424,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "The Role of PKI and Certificate Lifecycle Management in API Security",
      "link": "https://securityboulevard.com/2025/01/the-role-of-pki-and-certificate-lifecycle-management-in-api-security/",
      "published": "Tue, 07 Jan 2025 17:14:13 +0000",
      "summary": "<p>Imagine booking a flight online. You check airline schedules, compare ticket prices, reserve seats, and make payments—all on a single website. This seamless experience is made possible by the power of APIs (Application Programming Interfaces) that enable different applications, like the airline’s booking system, payment gateways, and our email provider, to communicate and work together […]</p>\n<p>The post <a href=\"https://securityboulevard.com/2025/01/the-role-of-pki-and-certificate-lifecycle-management-in-api-security/\">The Role of PKI and Certificate Lifecycle Management in API Security</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078457,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Securing Modern Applications in Amazon EKS with AVX ONE CLM for Kubernetes",
      "link": "https://securityboulevard.com/2024/12/securing-modern-applications-in-amazon-eks-with-avx-one-clm-for-kubernetes/",
      "published": "Fri, 20 Dec 2024 13:03:05 +0000",
      "summary": "<p>Modern applications are increasingly deployed in containers to leverage scalability, availability, and simplified maintenance. Migrating legacy applications to managed Kubernetes services like Amazon Elastic Kubernetes Service (Amazon EKS) provides significant benefits such as automated orchestration, self-healing capabilities, load balancing, and seamless scalability across both cloud and hybrid environments. Amazon EKS allows development teams to focus […]</p>\n<p>The post <a href=\"https://securityboulevard.com/2024/12/securing-modern-applications-in-amazon-eks-with-avx-one-clm-for-kubernetes/\">Securing Modern Applications in Amazon EKS with AVX ONE CLM for Kubernetes</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.407849,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Bulletproof Kubernetes Secrets Management: Common Challenges and Solutions",
      "link": "https://securityboulevard.com/2024/12/bulletproof-kubernetes-secrets-management-common-challenges-and-solutions/",
      "published": "Thu, 19 Dec 2024 19:08:41 +0000",
      "summary": "<p><a href=\"https://www.akeyless.io/blog/bulletproof-kubernetes-secrets-management-common-challenges-and-solutions/\" rel=\"nofollow\" title=\"Bulletproof Kubernetes Secrets Management: Common Challenges and Solutions\"><img alt=\"kubernetes secrets management\" class=\"webfeedsFeaturedVisual wp-post-image\" height=\"535\" src=\"https://akeyless-908832575.imgix.net/wp-content/uploads/2024/12/2508245_Newbloggraphic-BulletproofKubernetesSecrets_02_121024.png?auto=format%2Ccompress&#38;fit=crop&#38;ixlib=php-3.3.0&#38;max-h=535&#38;max-w=1024\" width=\"1024\" /></a></p>\n<p>This blog explores the common challenges of Kubernetes secrets management, including encryption gaps and access control issues, and provides proven solutions to secure sensitive data across multi-cloud environments. Strengthen your Kubernetes security posture today.</p>\n<p>The post <a href=\"https://www.akeyless.io/blog/bulletproof-kubernetes-secrets-management-common-challenges-and-solutions/\">Bulletproof Kubernetes Secrets Management: Common Challenges and Solutions</a> appeared first on <a href=\"https://www.akeyless.io/\">Akeyless</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2024/12/bulletproof-kubernetes-secrets-management-common-challenges-and-solutions/\">Bulletproof Kubernetes Secrets Management: Common Challenges and Solutions</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078522,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "Aembit Launches Prometheus Metrics Support",
      "link": "https://securityboulevard.com/2024/11/aembit-launches-prometheus-metrics-support/",
      "published": "Thu, 21 Nov 2024 00:57:09 +0000",
      "summary": "<p><span class=\"span-reading-time rt-reading-time\"><span class=\"rt-label rt-prefix\"></span> <span class=\"rt-time\"> 3</span> <span class=\"rt-label rt-postfix\">min read</span></span>Enhance visibility into Aembit Edge deployments with metrics for monitoring performance, detecting anomalies, and integrating with your observability stack.</p>\n<p>The post <a href=\"https://aembit.io/blog/aembit-launches-prometheus-metrics-support/\">Aembit Launches Prometheus Metrics Support</a> appeared first on <a href=\"https://aembit.io/\">Aembit</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2024/11/aembit-launches-prometheus-metrics-support/\">Aembit Launches Prometheus Metrics Support</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078555,
      "translated": false
    },
    {
      "feed_name": "Security Boulevard Kubernetes",
      "source_language": "en",
      "title": "A Platform Engineering Guide to Managing Secrets with Akeyless",
      "link": "https://securityboulevard.com/2024/11/a-platform-engineering-guide-to-managing-secrets-with-akeyless/",
      "published": "Wed, 20 Nov 2024 13:00:00 +0000",
      "summary": "<p><a href=\"https://www.akeyless.io/blog/a-platform-engineering-guide-to-managing-secrets-with-akeyless/\" rel=\"nofollow\" title=\"A Platform Engineering Guide to Managing Secrets with Akeyless\"><img alt=\"Akeyless Platform Engineering\" class=\"webfeedsFeaturedVisual wp-post-image\" height=\"576\" src=\"https://akeyless-908832575.imgix.net/wp-content/uploads/2024/11/3.png?auto=format%2Ccompress&#38;fit=crop&#38;ixlib=php-3.3.0&#38;max-h=576&#38;max-w=1024\" width=\"1024\" /></a></p>\n<p>Platform engineering equips development teams with efficient and secure workflows to streamline code deployment at scale. This guide explores the essentials of platform engineering, the value of Internal Developer Platforms (IDPs), and how secrets management plays a crucial role. Learn how Akeyless can simplify secrets management for multi-cloud setups, enhance security with dynamic secrets, and integrate seamlessly into your workflows.</p>\n<p>The post <a href=\"https://www.akeyless.io/blog/a-platform-engineering-guide-to-managing-secrets-with-akeyless/\">A Platform Engineering Guide to Managing Secrets with Akeyless</a> appeared first on <a href=\"https://www.akeyless.io/\">Akeyless</a>.</p>\n<p>The post <a href=\"https://securityboulevard.com/2024/11/a-platform-engineering-guide-to-managing-secrets-with-akeyless/\">A Platform Engineering Guide to Managing Secrets with Akeyless</a> appeared first on <a href=\"https://securityboulevard.com\">Security Boulevard</a>.</p>",
      "timestamp": 1761396335.4078586,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "Google Cloud deprecations",
      "link": "https://keda.sh/blog/2025-09-15-gcp-deprecations/",
      "published": "Mon, 15 Sep 2025 00:00:00 +0000",
      "summary": "One year ago, Google Cloud deprecated its Monitoring Query Language in favor of a PromQL-based API:\nAnnouncement: Starting on October 22, 2024, Monitoring Query Language (MQL) will no longer be a recommended query language for Cloud Monitoring. Certain usability features will be disabled, but you can still run MQL queries in Metrics Explorer, and dashboards and alerting policies that use MQL will continue to work. For more information, see the deprecation notice for MQL.",
      "timestamp": 1761396350.2954724,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "KEDA is graduating to CNCF Graduated project 🎉",
      "link": "https://keda.sh/blog/2023-08-22-keda-cncf-graduation/",
      "published": "Tue, 22 Aug 2023 00:00:00 +0000",
      "summary": "In 2019, KEDA embarked on a mission to make application autoscaling on Kubernetes dead-simple. Our aim was to make sure that every Kubernetes platform can use it to scale applications without having to worry about the underlying autoscaling infrastructure.\nAs part of that mission, we wanted to build a vendor-neutral project that is open to everyone and nicely integrates with other tools. Because of that, the KEDA maintainers decided that the Cloud Native Computing Foundation (CNCF) was a natural fit and got accepted as a sandbox project in 2020.",
      "timestamp": 1761396350.295477,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "Securing autoscaling with the newly improved certificate management in KEDA 2.10",
      "link": "https://keda.sh/blog/2023-05-02-certificate-improvements/",
      "published": "Tue, 16 May 2023 00:00:00 +0000",
      "summary": "Recently, we have release KEDA v2.10 that introduced a key improvement for managing certificates and your autoscaling security:\nEncryption of any communication between KEDA components. Support for providing your own certificates for internal communications. Support for using customs certificate authorities (CA). With these new improvements, we can dramatically improve the security between KEDA components, the Kubernetes API server and scaler sources. Let&rsquo;s take a closer look.\nWhere do we come from?",
      "timestamp": 1761396350.2954803,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "Help shape the future of KEDA with our survey 📝",
      "link": "https://keda.sh/blog/2023-05-04-keda-survey/",
      "published": "Thu, 04 May 2023 00:00:00 +0000",
      "summary": "As maintainers, we are always eager to learn who is using KEDA (become a listed end-user!) and how they are using KEDA to scale their cloud-native workloads.\nOur job is to make sure that your are able to scale the workloads that you run with as less friction as possible, production-grade security, insights on what is going on, etc.\nIn order to be successful, we need to learn how big of KEDA deployments end-users are running, what is causing frustration and what we can improve.",
      "timestamp": 1761396350.2954857,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "Announcing KEDA v2.9 🎉",
      "link": "https://keda.sh/blog/2022-12-12-keda-2.9.0-release/",
      "published": "Mon, 12 Dec 2022 00:00:00 +0000",
      "summary": "We recently completed our most recent release: 2.9.0 🎉!\nHere are some highlights:\nNewly published Deprecations and Breaking Change policy (docs) Introduce new CouchDB, Etcd &amp; Loki scalers Introduce off-the-shelf Grafana dashboard for application autoscaling Introduce improved operational metrics in Prometheus Introduce capability to cache metric values for a scaler during the polling interval (experimental feature) Performance improvements and architecture changes on how metrics are exposed to Kubernetes Azure Key Vault authentication provider now supports pod identities for authentication A ton of new features and fixes for some of our 50+ scalers Potential breaking changes and deprecations include:",
      "timestamp": 1761396350.295489,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "HTTP add-on is looking for contributors by end of November",
      "link": "https://keda.sh/blog/2022-09-27-http-add-on-is-on-hold/",
      "published": "Tue, 27 Sep 2022 00:00:00 +0000",
      "summary": "On Nov 25, 2020, we started the HTTP add-on based on @arschles his initial POC which closed a big gap in KEDA&rsquo;s story - HTTP autoscaling without a dependency on an external system, such as Prometheus.\nTo this day, the autoscaling community has a very high demand for a solution in this area that auto scales and works in the same manner as the KEDA core.\nWith the add-on, we want to cover all traffic patterns ranging from ingress, to service meshes and service-to-service communication and make it super simple to autoscale (and with scale-to-zero support).",
      "timestamp": 1761396350.2954924,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "Announcing KEDA v2.8 🎉",
      "link": "https://keda.sh/blog/2022-08-10-keda-2.8.0-release/",
      "published": "Wed, 10 Aug 2022 00:00:00 +0000",
      "summary": "We recently completed our most recent release: 2.8.0 🎉!\nHere are some highlights:\nIntroduction of new AWS DynomoDB Streams &amp; NATS JetStream scalers. Introduction of new Azure AD Workload Identity authentication provider. Support for specifying minReplicaCount in ScaledJob. Support to customize the HPA name. Support for permission segregation when using Azure AD Pod / Workload Identity Additional features to various scalers such as AWS SQS, Azure Pipelines, CPU, GCP Stackdriver, Kafka, Memory, Prometheus Here are the new deprecation(s) as of this release:",
      "timestamp": 1761396350.2954955,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "How Zapier uses KEDA",
      "link": "https://keda.sh/blog/2022-03-10-how-zapier-uses-keda/",
      "published": "Thu, 10 Mar 2022 00:00:00 +0000",
      "summary": "RabbitMQ is at the heart of Zap processing at Zapier. We enqueue messages to RabbitMQ for each step in a Zap. These messages get consumed by our backend workers, which run on Kubernetes. To keep up with the varying task loads in Zapier we need to scale our workers with our message backlog.\nFor a long time, we scaled with CPU-based autoscaling using Kubernetes native Horizontal Pod Autoscale (HPA), where more tasks led to more processing, increasing CPU usage, and triggering our workers&rsquo; autoscaling.",
      "timestamp": 1761396350.2954988,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "Introducing PredictKube - an AI-based predictive autoscaler for KEDA made by Dysnix",
      "link": "https://keda.sh/blog/2022-02-09-predictkube-scaler/",
      "published": "Mon, 14 Feb 2022 00:00:00 +0000",
      "summary": "Introducing PredictKube—an AI-based predictive autoscaler for KEDA made by Dysnix Dysnix has been working with high-traffic backend systems for a long time, and the efficient scaling demand is what their team comes across each day. The engineers have understood that manually dealing with traffic fluctuations and preparations of infrastructure is inefficient because you need to deploy more resources before the traffic increases, not at the moment the event happens. This strategy is problematic for two reasons: first, because it&rsquo;s often too late to scale when traffic has already arrived and second, resources will be overprovisioned and idle during the times that traffic isn&rsquo;t present.",
      "timestamp": 1761396350.2955022,
      "translated": false
    },
    {
      "feed_name": "KEDA (Kubernetes Event-driven Autoscaling) Blog",
      "source_language": "en",
      "title": "How CAST AI uses KEDA for Kubernetes autoscaling",
      "link": "https://keda.sh/blog/2021-08-04-keda-cast-ai/",
      "published": "Wed, 04 Aug 2021 00:00:00 +0000",
      "summary": "How CAST AI uses KEDA for Kubernetes autoscaling Kubernetes comes with several built-in autoscaling mechanisms - among them the Horizontal Pod Autoscaler (HPA). Scaling is essential for the producer-consumer workflow, a common use case in the IT world today. It’s especially useful for monthly reports and transactions with a huge load where teams need to spin up many workloads to process things faster and cheaper (for example, by using spot instances).",
      "timestamp": 1761396350.2955055,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Cilium Network Policies, from first principles to production",
      "link": "https://veducate.co.uk/cilium-network-policies-from-first-principles-to-production/",
      "published": "Tue, 07 Oct 2025 10:12:00 GMT",
      "summary": "",
      "timestamp": 1761396351.5316072,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Linux Kernel Fundamentals for Effectively Writing Tetragon Tracing Policies",
      "link": "https://cilium.io/blog/2025/09/16/kernel-basics-for-tetragon",
      "published": "Tue, 16 Sep 2025 12:00:00 GMT",
      "summary": "Author: Paul Arah, Isovalent@Cisco When you write Tetragon tracing policies, you’re not writing arbitrary sets of rules; you're programming…",
      "timestamp": 1761396351.5316114,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Cilium at KubeCon + CloudNativeCon and CiliumCon North America 2025",
      "link": "https://cilium.io/blog/2025/08/20/cilium-at-kubecon-na-2025",
      "published": "Wed, 20 Aug 2025 12:00:00 GMT",
      "summary": "Author: Katie Meinders, Isovalent The Cilium community is buzzing to reunite again this November in Atlanta for KubeCon + CloudNativeCon…",
      "timestamp": 1761396351.5316148,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Securing the Node: A Primer on Cilium’s Host Firewall",
      "link": "https://cilium.io/blog/2025/08/15/host-firewall-primer",
      "published": "Fri, 15 Aug 2025 10:00:00 GMT",
      "summary": "July 6th, 2025 Author: Paul Arah, Isovalent@Cisco\n\nWhen discussing Kubernetes network security, much of the attention focuses on pod-to-pod…",
      "timestamp": 1761396351.531618,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Cilium 1.18 – Expanded IPv6 Support, Encrypted Overlay, Ingress Bandwidth Controls, Policy Performance Improvements, and More!",
      "link": "https://isovalent.com/blog/post/cilium-1-18//?utm_source=website-cilium&utm_medium=referral&utm_campaign=cilium-blog",
      "published": "Thu, 07 Aug 2025 12:40:00 GMT",
      "summary": "",
      "timestamp": 1761396351.531622,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Help Us Map The State of Kubernetes Networking",
      "link": "https://isovalent.com/blog/post/state-of-kubernetes-networking/",
      "published": "Mon, 21 Jul 2025 10:12:00 GMT",
      "summary": "",
      "timestamp": 1761396351.5316257,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Installing Cilium on EKS in Overlay(BYOCNI) and CNI Chaining Mode",
      "link": "https://cilium.io/blog/2025/07/08/byonci-overlay-install",
      "published": "Tue, 08 Jul 2025 10:00:00 GMT",
      "summary": "July 6th, 2025 Author: Paul Arah, Isovalent@Cisco\nInstalling Cilium on EKS in Overlay(BYOCNI) and CNI Chaining Mode\n\nIn the first part of…",
      "timestamp": 1761396351.5316293,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Automated Kubernetes Threat Detection with Tetragon and Azure Sentinel",
      "link": "https://medium.com/@saraswathilakshman/automated-kubernetes-threat-detection-with-tetragon-and-azure-sentinel-28c32ee152bc",
      "published": "Thu, 03 Jul 2025 12:40:00 GMT",
      "summary": "",
      "timestamp": 1761396351.5316327,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Explore Our New eCHO Playlist Library",
      "link": "https://cilium.io/blog/2025/16/01/themed-echo-playlists",
      "published": "Tue, 01 Jul 2025 10:00:00 GMT",
      "summary": "July 01st, 2025 Author: Donia Chaiehloudj, Isovalent@Cisco\n\neCHO (“eBPF & Cilium Office Hours”) is our weekly live-stream where maintainers,…",
      "timestamp": 1761396351.531636,
      "translated": false
    },
    {
      "feed_name": "Cilium Blog",
      "source_language": "en",
      "title": "Simplifying Network Management with Cilium’s BGP Auto-Discovery",
      "link": "https://medium.com/@nachyu4/simplifying-network-management-with-ciliums-bgp-auto-discovery-c89e55096078",
      "published": "Wed, 25 Jun 2025 12:00:00 GMT",
      "summary": "",
      "timestamp": 1761396351.5316396,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "eBPF Foundation Announces Community & Advocacy Fellowship Program",
      "link": "https://ebpf.foundation/ebpf-foundation-announces-community-advocacy-fellowship-program/",
      "published": "Thu, 14 Aug 2025 11:52:00 GMT",
      "summary": "The fellowship is a six-month grant for individuals who want to dedicate their time to growing and educating the eBPF community",
      "timestamp": 1761396351.8767152,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "Testing eBPF Program Compatibility Across Kernels with LVH and GitHub Actions",
      "link": "https://ebpfchirp.substack.com/p/testing-ebpf-program-compatibility",
      "published": "Tue, 08 Jul 2025 17:00:00 GMT",
      "summary": "GitHub Actions Meets Little VM Helper and eBPF",
      "timestamp": 1761396351.8767195,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "Breaking Boundaries: Implementing the Enigma Machine in eBPF",
      "link": "https://isovalent.com/blog/post/breaking-boundaries-implementing-the-enigma-machine-in-ebpf/",
      "published": "Mon, 23 Jun 2025 00:00:00 GMT",
      "summary": "André Martins celebrates Alan Turing 113th posthumous birthday by implementing the Enigma machine in eBPF",
      "timestamp": 1761396351.876723,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "Why Does My eBPF Program Work on One Kernel but Fail on Another?",
      "link": "https://ebpfchirp.substack.com/p/why-does-my-ebpf-program-work-on",
      "published": "Tue, 22 Apr 2025 09:55:00 GMT",
      "summary": "Learn how to make eBPF programs portable across different Linux kernels using BPF CO-RE and BTF, and discover techniques for supporting systems without built-in BTF by embedding external BTF data.",
      "timestamp": 1761396351.876726,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "eBPF Announces Support for Tolkien Ring",
      "link": "https://ebpf.io/blog/support-for-tolkien-ring",
      "published": "Tue, 01 Apr 2025 10:00:00 GMT",
      "summary": "eBPF revives Tolkien Ring, proving even ancient networks can be rebuilt better",
      "timestamp": 1761396351.8767292,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "What If CI/CD Pipelines Had Built-in Security and Observability with eBPF?",
      "link": "https://ebpfchirp.substack.com/p/what-if-cicd-pipelines-had-built",
      "published": "Thu, 27 Mar 2025 09:55:00 GMT",
      "summary": "Learn how eBPF can add real-time security and observability to CI/CD pipelines like GitHub Actions, helping detect exploits and optimize workflows execution time.",
      "timestamp": 1761396351.8767326,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "Case Study: Polar Signals Uses eBPF to Monitor Internal Cross-Zone Network Traffic on Kubernetes, Reducing These Operating Costs by 50%",
      "link": "https://ebpf.foundation/case-study-polar-signals-uses-ebpf-to-monitor-internal-cross-zone-network-traffic-on-kubernetes-reducing-these-operating-costs-by-50/",
      "published": "Thu, 16 Jan 2025 09:55:00 GMT",
      "summary": "Polar Signals developed kubezonnet, an open source project designed to monitor and measure cross-zone network traffic in Kubernetes clusters. The solution leverages eBPF to trace network packets and aggregate traffic data.",
      "timestamp": 1761396351.8767357,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "Tracepoints, Kprobes, or Fprobes: Which One Should You Choose?",
      "link": "https://ebpfchirp.substack.com/p/tracepoints-kprobes-or-fprobes-which",
      "published": "Sat, 04 Jan 2025 09:55:00 GMT",
      "summary": "Tracing programs like kprobes, fprobes, and tracepoints are very popular, but their overlapping functionality can make choosing the right one confusing.",
      "timestamp": 1761396351.876739,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "eBPF in 2025 - Bigger Than the CrowdStrike Outage",
      "link": "https://thenewstack.io/ebpf-in-2025-bigger-than-the-crowdstrike-outage/",
      "published": "Wed, 01 Jan 2025 12:33:00 GMT",
      "summary": "In 2025 eBPF adoption will expand rapidly and other predictions",
      "timestamp": 1761396351.8767424,
      "translated": false
    },
    {
      "feed_name": "eBPF Blog",
      "source_language": "en",
      "title": "P99Conf: How eBPF Could Make Faster Database Systems",
      "link": "https://thenewstack.io/p99conf-how-ebpf-could-make-faster-database-systems/",
      "published": "Sun, 27 Oct 2024 17:00:00 GMT",
      "summary": "Learn about BPF-DB, an in-memory key-value data store that can be planted within the OS kernel itself via eBPF, thereby routing around the restrictions and limitations of an OS’s user space, or the space in memory where a program is typically run",
      "timestamp": 1761396351.8767457,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "What’s New in Calico v3.31? eBPF, NFTables, and More",
      "link": "https://www.tigera.io/blog/whats-new-in-calico-v3-31-ebpf-nftables-and-more/",
      "published": "Sat, 25 Oct 2025 01:59:07 +0000",
      "summary": "<p>We’re excited to announce the release of Calico v3.31,  🎉 which brings a wave of new features and improvements. For a quick look, here are the key updates and improvements in this release: Calico NFTables...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/whats-new-in-calico-v3-31-ebpf-nftables-and-more/\">What&#8217;s New in Calico v3.31? eBPF, NFTables, and More</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443345,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "When to Use BGP, VXLAN, or IP-in-IP: A Practical Guide for Kubernetes Networking",
      "link": "https://www.tigera.io/blog/when-to-use-bgp-vxlan-or-ip-in-ip-a-practical-guide-for-kubernetes-networking/",
      "published": "Tue, 21 Oct 2025 19:29:35 +0000",
      "summary": "<p>When deploying a Kubernetes cluster, a critical architectural decision is how pods on different nodes communicate. The choice of networking mode directly impacts performance, scalability, and operational overhead. Selecting the wrong mode for your environment...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/when-to-use-bgp-vxlan-or-ip-in-ip-a-practical-guide-for-kubernetes-networking/\">When to Use BGP, VXLAN, or IP-in-IP: A Practical Guide for Kubernetes Networking</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.44434,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "How NRP Scales Global Scientific Research with Calico",
      "link": "https://www.tigera.io/blog/how-nrp-scales-global-scientific-research-with-calico/",
      "published": "Wed, 15 Oct 2025 15:53:20 +0000",
      "summary": "<p>The National Research Platform (NRP) operates a globally distributed, high-performance computing and networking environment, with an average of 15,000 pods across 450 nodes supporting more than 3,000 scientific project namespaces. With its head node in...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/how-nrp-scales-global-scientific-research-with-calico/\">How NRP Scales Global Scientific Research with Calico</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443436,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "How to Deploy Calico Whisker and Goldmane in Manifest Only Setups",
      "link": "https://www.tigera.io/blog/how-to-deploy-whisker-and-goldmane-in-manifest-only-calico-setups/",
      "published": "Wed, 08 Oct 2025 19:29:00 +0000",
      "summary": "<p>Your Step-by-Step to Observability Without the Operator If you’re running Calico using manifests, you may have found that enabling the observability features introduced in version 3.30, including Calico Whisker and Goldmane, requires a more hands-on...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/how-to-deploy-whisker-and-goldmane-in-manifest-only-calico-setups/\">How to Deploy Calico Whisker and Goldmane in Manifest Only Setups</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.444347,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "SUSE and Tigera: Empowering Secure, Scalable Kubernetes with Calico Enterprise",
      "link": "https://www.tigera.io/blog/suse-and-tigera-empowering-secure-scalable-kubernetes-with-calico-enterprise/",
      "published": "Fri, 03 Oct 2025 23:32:25 +0000",
      "summary": "<p>By Steve Hale, Sr. Director, Software &#38; Services Ecosystem GTM — Co-written by Utpal Bhatt, Chief Marketing Officer, Tigera Modern Workloads Demand Modern Kubernetes Infrastructure As organizations expand Kubernetes adoption—modernizing legacy applications on VMs and...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/suse-and-tigera-empowering-secure-scalable-kubernetes-with-calico-enterprise/\">SUSE and Tigera: Empowering Secure, Scalable Kubernetes with Calico Enterprise</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443502,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "How to Connect Nested KubeVirt Clusters with Calico and BGP Peering",
      "link": "https://www.tigera.io/blog/how-to-connect-nested-kubevirt-clusters-with-calico-and-bgp-peering/",
      "published": "Fri, 03 Oct 2025 18:28:12 +0000",
      "summary": "<p>Running Kubernetes inside Kubernetes isn’t just a fun experiment anymore &#8211; it’s becoming a key pattern for delivering multi-environment platforms at scale. With KubeVirt, a virtualization add-on for Kubernetes that uses QEMU (an open-source machine...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/how-to-connect-nested-kubevirt-clusters-with-calico-and-bgp-peering/\">How to Connect Nested KubeVirt Clusters with Calico and BGP Peering</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443538,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "Kubernetes Observability: Your Q&A Guide to Calico Whisker",
      "link": "https://www.tigera.io/blog/kubernetes-observability-your-qa-guide-to-calico-whisker/",
      "published": "Wed, 24 Sep 2025 20:45:51 +0000",
      "summary": "<p>Calico Whisker is quickly becoming the go-to tool for teams that want granular, real-time visibility into their Kubernetes network traffic and security posture. It provides an intuitive, high-level view of your network, but as with...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/kubernetes-observability-your-qa-guide-to-calico-whisker/\">Kubernetes Observability: Your Q&#038;A Guide to Calico Whisker</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443572,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "Calico Whisker vs. Traditional Observability: Why Context Matters in Kubernetes Networking",
      "link": "https://www.tigera.io/blog/calico-whisker-vs-traditional-observability-why-context-matters-in-kubernetes-networking/",
      "published": "Tue, 16 Sep 2025 19:43:02 +0000",
      "summary": "<p>Are you tired of digging through cryptic logs to understand your Kubernetes network? In today&#8217;s fast-paced cloud environments, clear, real-time visibility isn&#8217;t a luxury, it&#8217;s a necessity. Traditional logging and metrics often fall short, leaving...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/calico-whisker-vs-traditional-observability-why-context-matters-in-kubernetes-networking/\">Calico Whisker vs. Traditional Observability: Why Context Matters in Kubernetes Networking</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443605,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "Securing AI Workloads in Kubernetes: Why Traditional Network Security Isn’t Enough",
      "link": "https://www.tigera.io/blog/securing-ai-workloads-in-kubernetes-why-traditional-network-security-isnt-enough/",
      "published": "Thu, 11 Sep 2025 19:21:53 +0000",
      "summary": "<p>The AI revolution is here, and it&#8217;s running on Kubernetes. From fraud detection systems to generative AI platforms, AI-powered applications are no longer experimental projects; they&#8217;re mission-critical infrastructure. But with great power comes great responsibility,...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/securing-ai-workloads-in-kubernetes-why-traditional-network-security-isnt-enough/\">Securing AI Workloads in Kubernetes: Why Traditional Network Security Isn&#8217;t Enough</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.4443638,
      "translated": false
    },
    {
      "feed_name": "Calico Blog",
      "source_language": "en",
      "title": "Navigating DORA with Calico: Strengthening Kubernetes Operational Resilience in Financial Services",
      "link": "https://www.tigera.io/blog/navigating-dora-with-calico-strengthening-kubernetes-operational-resilience-in-financial-services/",
      "published": "Tue, 09 Sep 2025 17:58:02 +0000",
      "summary": "<p>A single cyberattack or system outage can threaten not just one financial institution, but the stability of a vast portion of the entire financial sector. For today’s financial enterprises, securing dynamic infrastructure like Kubernetes is...</p>\n<p>The post <a href=\"https://www.tigera.io/blog/navigating-dora-with-calico-strengthening-kubernetes-operational-resilience-in-financial-services/\">Navigating DORA with Calico: Strengthening Kubernetes Operational Resilience in Financial Services</a> appeared first on <a href=\"https://www.tigera.io\">Tigera - Creator of Calico</a>.</p>",
      "timestamp": 1761396353.444367,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Most Effective Infrastructure as Code (IaC) Tools",
      "link": "https://www.pulumi.com/blog/infrastructure-as-code-tools/",
      "published": "Thu, 26 Jun 2025 00:00:00 +0000",
      "summary": "<p>Infrastructure as Code (IaC) has evolved beyond simple automation into a fundamental shift toward applying software engineering practices to infrastructure management. In 2025, leading organizations aren&rsquo;t just provisioning infrastructure—they&rsquo;re treating it as software, complete with testing, version control, code reviews, and continuous integration.</p>",
      "timestamp": 1761396359.8927875,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Platform Engineering Buffet at SEITENBAU",
      "link": "https://www.pulumi.com/blog/platform-engineering-buffet/",
      "published": "Tue, 27 May 2025 00:00:00 +0000",
      "summary": "SEITENBAU GmbH faced a unique challenge - building a platform for 20+ independent projects, each with different tech stacks, deployment targets, and operational models. Instead of forcing standardization, they built an infrastructure buffet using Pulumi.",
      "timestamp": 1761396359.8927917,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "AI/ML on Kubernetes: Deploying Models with Pulumi on Google Cloud",
      "link": "https://www.pulumi.com/blog/ai-ml-on-kubernetes-google-cloud-llm-rag/",
      "published": "Mon, 24 Mar 2025 07:32:19 +0000",
      "summary": "<p>Kubernetes has transformed cloud infrastructure by enabling scalable, containerized applications. While it initially gained traction for managing web applications and microservices, its capabilities now extend to AI/ML workloads, making it the go-to platform for data scientists and machine learning engineers.</p>\n<p>Running AI/ML workloads on Kubernetes presents unique challenges, including:</p>\n<ul>\n<li><strong>Specialized hardware</strong> requirements (e.g., GPUs, TPUs)</li>\n<li><strong>Scalability</strong> for model training and inference</li>\n<li><strong>Complex data pipelines</strong> that integrate various cloud services</li>\n<li><strong>Infrastructure automation</strong> for seamless deployment</li>\n</ul>\n<p>Google Cloud Kubernetes (GKE) provides a robust foundation for AI/ML workloads, but managing infrastructure manually can be cumbersome. This is where Pulumi comes in—enabling Infrastructure as Code (IaC) to automate and simplify AI/ML infrastructure on Kubernetes.</p>",
      "timestamp": 1761396359.8927953,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Why Every Cloud Engineer Needs Pulumi ESC for Secrets Management",
      "link": "https://www.pulumi.com/blog/why-every-cloud-engineer-needs-pulumi-esc-secrets-management/",
      "published": "Mon, 17 Mar 2025 07:28:56 +0000",
      "summary": "<p>Managing secrets is one of the most critical responsibilities in cloud engineering. Secrets like API keys, database credentials, and encryption tokens are the backbone of secure and seamless cloud operations. Yet they are so often an afterthought. They get replicated across cloud-specific secrets managers and stuffed in GitHub secrets, compromising security for the sake of simplicity. ¿Por que no los dos? Why can&rsquo;t secrets management be secure and simple?</p>\n<p>Enter <strong>Pulumi ESC (Environments, Secrets, and Configuration)</strong>—a breakthrough in taming secrets sprawl and streamlining configuration management across infrastructure. Let&rsquo;s explore why Pulumi ESC is a necessity for cloud engineers, helping make secrets management secure while keeping it simple.</p>",
      "timestamp": 1761396359.8927987,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Pulumi Kubernetes Operator 2.0 is Now Generally Available!",
      "link": "https://www.pulumi.com/blog/pko-2-0-ga/",
      "published": "Thu, 20 Feb 2025 00:00:00 +0000",
      "summary": "<p>Today marks an exciting milestone as we announce the General Availability (GA) release of the Pulumi Kubernetes Operator 2.0! This release builds upon the foundation we <a href=\"https://www.pulumi.com/blog/pulumi-kubernetes-operator-2-0/\">laid during the beta phase</a>, delivering a production-ready solution that transforms how teams manage their cloud infrastructure.</p>",
      "timestamp": 1761396359.892802,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Kubernetes Best Practices I Wish I Had Known Before",
      "link": "https://www.pulumi.com/blog/kubernetes-best-practices-i-wish-i-had-known-before/",
      "published": "Mon, 20 Jan 2025 00:00:00 +0000",
      "summary": "<p>Kubernetes has undeniably transformed the way we build, ship, and run applications. But let’s be honest, getting started with Kubernetes can feel like climbing Mount Everest in flip-flops.</p>\n<p>As a cloud-native citizen and Kubernetes enthusiast, I’ve learned the hard way that there are a bunch of &ldquo;wish I had known that earlier&rdquo; best practices. They could have saved me time, money, and headaches.</p>",
      "timestamp": 1761396359.8928053,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Master Kubernetes Secrets with Pulumi ESC + Secrets Store CSI Driver",
      "link": "https://www.pulumi.com/blog/master-kubernetes-secrets-with-pulumi-esc-secrets-store-csi-driver/",
      "published": "Wed, 18 Dec 2024 09:58:01 +0100",
      "summary": "<p>Welcome to the second blog post of the <a href=\"https://www.pulumi.com/product/secrets-management/\">Pulumi ESC</a> and Kubernetes secrets series. If you haven&rsquo;t had the chance to read the first blog post, go ahead and read it <a href=\"https://www.pulumi.com/blog/cloud-native-secret-management-with-pulumi-esc-and-external-secrets-operator\">here</a>.</p>\n<p>In the previous blog post, we have learned how to manage secrets with Pulumi ESC and the <a href=\"https://external-secrets.io/latest/\">External Secrets Operator</a>. While the External Secrets Operator is a great tool to manage secrets in a cloud-native way, it still creates Kubernetes secrets in the cluster. Depending on your security requirements, you might want to avoid the use of Kubernetes secrets in your cluster at all. This is the point where you hit the limits of the External Secrets Operator.</p>",
      "timestamp": 1761396359.8928087,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Getting Started with Amazon EKS Auto Mode in Pulumi",
      "link": "https://www.pulumi.com/blog/aws-eks-auto-mode/",
      "published": "Mon, 16 Dec 2024 23:26:21 +0100",
      "summary": "<p>AWS recently announced <a href=\"https://aws.amazon.com/eks/auto-mode/\">Amazon EKS Auto Mode</a>, a significant enhancement to Amazon EKS that streamlines cluster management by automating infrastructure decisions and operations. Today, we are excited to announce that Pulumi fully supports EKS Auto Mode across our AWS provider ecosystem, enabling you to leverage this powerful feature through infrastructure as code.</p>",
      "timestamp": 1761396359.892812,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "Why Every Platform Engineer Should Care About Kubernetes Operators",
      "link": "https://www.pulumi.com/blog/why-every-platform-engineer-should-care-about-kubernetes-operators/",
      "published": "Tue, 10 Dec 2024 09:31:38 +0100",
      "summary": "<p>In one of my recent talks, I mentioned that the foundation of a successful <a href=\"https://www.pulumi.com/kubernetes\">Kubernetes</a>-powered platform is the use of <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\">Kubernetes Operators</a>, as they are a great way to automate operational tasks and the lifecycle of complex applications and services on Kubernetes.</p>",
      "timestamp": 1761396359.8928154,
      "translated": false
    },
    {
      "feed_name": "Pulumi Kubernetes Blog",
      "source_language": "en",
      "title": "105 Ways to Run Containers: The Cloud Container Iceberg",
      "link": "https://www.pulumi.com/blog/cursed-container-iceberg/",
      "published": "Tue, 03 Dec 2024 10:29:54 -0500",
      "summary": "<p>If a computer can be connected to the internet, someone has tried to run a <a href=\"https://www.pulumi.com/containers\">container</a> on it. From quantum computers to smart toasters, from phones in AWS racks to CI pipelines, there&rsquo;s many ways to deploy containers. While most people only know about the mainstream cloud providers at the surface, there&rsquo;s actually a vast world of increasingly unusual and specialized options beneath.</p>\n<p>This guide serves two purposes: to showcase the surprising breadth of container options available today, and to help you understand the full spectrum of choices – from practical to very experimental. Whether you&rsquo;re looking for production-ready solutions or just curious about what&rsquo;s out there in the dark depths, you&rsquo;ll find something interesting here.</p>",
      "timestamp": 1761396359.8928187,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "PromCon is Only One Month Away; See You in Person or via Live Stream!",
      "link": "https://prometheus.io/blog/2025/09/22/promcon-2025/",
      "published": "2025-09-22T00:00:00.000Z",
      "summary": "<p>It's that time of the year again! With just a few weeks to go until <a href=\"https://promcon.io/2025-munich/\">PromCon EU 2025</a>, the Prometheus community is buzzing with excitement, preparations, and passionate conference-driven development. This tenth iteration of the conference dedicated to the CNCF Prometheus monitoring ecosystem continues the tradition of a cozy, community-led, single-track, 2-day intense Prometheus user and developer learning time!</p>\n<p>The conference is taking place on October 21–22 at the Google Office in Munich, with an incredible lineup of talks and discussions you won't want to miss!</p>\n<h2>Content Highlights</h2>\n<p>The schedule is packed with sessions for everyone, from beginners to seasoned veterans. Topics range from:</p>\n<ul>\n<li>Exciting development of Prometheus features and protocols, e.g. OpenMetrics 2.0, downsampling, delta metric, Parquet-based storage.</li>\n<li>Insightful user community case studies and integrations, e.g. agentic AI, OpenTelemetry Schema and Resource Attributes adoption, auto aggregations, operator improvements, Perses novelties and Rust ecosystem updates.</li>\n<li>General best practices and guidelines for navigating complex observability ecosystems, e.g. Prometheus and OpenTelemetry instrumentation, new alerting methodologies, monitoring CPU hardware, and new PromQL aspects.</li>\n</ul>\n<p>...and more!</p>\n<h2>Live Recordings</h2>\n<p>The event tickets have been sold out, but fear not! All talks will be live-streamed for free and available as recordings after the event.</p>\n<p>Feel free to subscribe to the live-stream links below:</p>\n<ul>\n<li><a href=\"https://youtube.com/live/8h99_mfY6U4?feature=share\">Live-stream Day 1</a></li>\n<li><a href=\"https://youtube.com/live/SzSUa5y7Ji0?feature=share\">Live-stream Day 2</a></li>\n</ul>\n<h2>Lightning Talks Form is Now Open</h2>\n<p>Following our tradition, we're offering space for any PromCon in-person participant (capacity limits apply) to deliver a 5-minute talk related to the Prometheus ecosystem.</p>\n<p>If you have a last-minute learning, case study or idea to share with the community, feel free to prepare a few slides and sign up here: <a href=\"https://forms.gle/2JF13tSBGzrcuZD7A\">https://forms.gle/2JF13tSBGzrcuZD7A</a></p>\n<p>The form will be open until the start of the PromCon conference.</p>\n<h2>Credits</h2>\n<p>This conference wouldn't be possible without the hard work of the Prometheus team's core organisers (<a href=\"https://github.com/gouthamve\">Goutham</a>, <a href=\"https://github.com/richiH\">Richi</a> and <a href=\"https://github.com/bastischubert\">Basti</a>), and the amazing <a href=\"https://www.cncf.io/\">CNCF</a> team!</p>\n<p>We wouldn't be able to do it without our sponsors, too:</p>\n<ul>\n<li>Diamond: <a href=\"https://grafana.com/\">Grafana Labs</a> and <a href=\"https://victoriametrics.com/\">VictoriaMetrics</a></li>\n<li>Platinum: <a href=\"https://www.redhat.com/\">Red Hat</a></li>\n<li>Gold: <a href=\"https://www.hudsonrivertrading.com/\">HRT</a> and <a href=\"https://amadeus.com/\">Amadeus</a></li>\n<li>Venue: <a href=\"https://cloud.google.com/stackdriver/docs/managed-prometheus\">Google Cloud</a></li>\n</ul>\n<p>We can't wait to see you there, either in person or online!</p>",
      "timestamp": 1761396361.1720605,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "YACE is joining Prometheus Community",
      "link": "https://prometheus.io/blog/2024/11/19/yace-joining-prometheus-community/",
      "published": "2024-11-19T00:00:00.000Z",
      "summary": "<p><a href=\"https://github.com/prometheus-community/yet-another-cloudwatch-exporter\">Yet Another Cloudwatch Exporter</a> (YACE) has officially joined the Prometheus community! This move will make it more accessible to users and open new opportunities for contributors to enhance and maintain the project. There's also a blog post from <a href=\"https://grafana.com/blog/2024/11/19/yace-moves-to-prometheus-community/\">Cristian Greco's point of view</a>.</p>\n<h2>The early days</h2>\n<p>When I first started YACE, I had no idea it would grow to this scale. At the time, I was working with <a href=\"https://www.ivx.com\">Invision AG</a> (not to be confused with the design app), a company focused on workforce management software. They fully supported me in open-sourcing the tool, and with the help of my teammate <a href=\"https://github.com/kforsthoevel\">Kai Forsthövel</a>, YACE was brought to life.</p>\n<p>Our first commit was back in 2018, with one of our primary goals being to make CloudWatch metrics easy to scale and automatically detect what to measure, all while keeping the user experience simple and intuitive. InVision AG was scaling their infrastructure up and down due to machine learning workloads and we needed something that detects new infrastructure easily. This focus on simplicity has remained a core priority. From that point on, YACE began to find its audience.</p>\n<h2>Yace Gains Momentum</h2>\n<p>As YACE expanded, so did the support around it. One pivotal moment was when <a href=\"https://github.com/cristiangreco\">Cristian Greco</a> from Grafana Labs reached out. I was feeling overwhelmed and hardly keeping up when Cristian stepped in, simply asking where he could help. He quickly became the main releaser and led Grafana Labs' contributions to YACE, a turning point that made a huge impact on the project. Along with an incredible community of contributors from all over the world, they elevated YACE beyond what I could have achieved alone, shaping it into a truly global tool. YACE is no longer just my project or Invision's—it belongs to the community.</p>\n<h2>Gratitude and Future Vision</h2>\n<p>I am immensely grateful to every developer, tester, and user who has contributed to YACE's success. This journey has shown me the power of community and open source collaboration. But we're not done yet.</p>\n<p>It's time to take Yace even further—into the heart of the Prometheus ecosystem. Making Yace as the official Amazon CloudWatch exporter for Prometheus will make it easier and more accessible for everyone. With ongoing support from Grafana Labs and my commitment to refining the user experience, we'll ensure YACE becomes an intuitive tool that anyone can use effortlessly.</p>\n<h2>Try out YACE on your own</h2>\n<p>Try out <strong><a href=\"https://github.com/prometheus-community/yet-another-cloudwatch-exporter\">YACE (Yet Another CloudWatch Exporter)</a></strong> by following our step-by-step <a href=\"https://github.com/prometheus-community/yet-another-cloudwatch-exporter/blob/master/docs/installation.md\">Installation Guide</a>.</p>\n<p>You can explore various configuration examples <a href=\"https://github.com/prometheus-community/yet-another-cloudwatch-exporter/tree/master/examples\">here</a> to get started with monitoring specific AWS services.</p>\n<p>Our goal is to enable easy auto-discovery across all AWS services, making it simple to monitor any dynamic infrastructure.</p>",
      "timestamp": 1761396361.172065,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "Announcing Prometheus 3.0",
      "link": "https://prometheus.io/blog/2024/11/14/prometheus-3-0/",
      "published": "2024-11-14T00:00:00.000Z",
      "summary": "<p>Following the recent release of <a href=\"https://prometheus.io/blog/2024/09/11/prometheus-3-beta/\">Prometheus 3.0 beta</a> at PromCon in Berlin, the Prometheus Team\nis excited to announce the immediate availability of Prometheus Version 3.0!</p>\n<p>This latest version marks a significant milestone as it is the first major release in 7 years. Prometheus has come a long way in that time,\nevolving from a project for early adopters to becoming a standard part of the cloud native monitoring stack. Prometheus 3.0 aims to\ncontinue that journey by adding some exciting new features while largely maintaining stability and compatibility with previous versions.</p>\n<p>The full 3.0 release adds some new features on top of the beta and also introduces a few additional breaking changes that we will describe in this article.</p>\n<h2>What's New</h2>\n<p>Here is a summary of the exciting changes that have been released as part of the beta version, as well as what has been added since:</p>\n<h3>New UI</h3>\n<p>One of the highlights in Prometheus 3.0 is its brand-new UI that is enabled by default:</p>\n<p><img alt=\"New UI query page\" src=\"https://prometheus.io/assets/blog/2024-11-14/blog_post_screenshot_tree_view-s.png\" /></p>\n<p>The UI has been completely rewritten with less clutter, a more modern look and feel, new features like a <a href=\"https://promlens.com/\"><strong>PromLens</strong></a>-style tree view,\nand will make future maintenance easier by using a more modern technical stack.</p>\n<p>Learn more about the new UI in general in <a href=\"https://promlabs.com/blog/2024/09/11/a-look-at-the-new-prometheus-3-0-ui/\">Julius' detailed article on the PromLabs blog</a>.\nUsers can temporarily enable the old UI by using the <code>old-ui</code> feature flag.</p>\n<p>Since the new UI is not battle-tested yet, it is also very possible that there are still bugs. If you find any, please\n<a href=\"https://github.com/prometheus/prometheus/issues/new?assignees=&#x26;labels=&#x26;projects=&#x26;template=bug_report.yml\">report them on GitHub</a>.</p>\n<p>Since the beta, the user interface has been updated to support UTF-8 metric and label names.</p>\n<p><img alt=\"New UTF-8 UI\" src=\"https://prometheus.io/assets/blog/2024-11-14/utf8_ui.png\" /></p>\n<h3>Remote Write 2.0</h3>\n<p>Remote-Write 2.0 iterates on the previous protocol version by adding native support for a host of new elements including metadata, exemplars,\ncreated timestamp and native histograms. It also uses string interning to reduce payload size and CPU usage when compressing and decompressing.\nThere is better handling for partial writes to provide more details to clients when this occurs. More details can be found\n<a href=\"https://prometheus.io/docs/specs/remote_write_spec_2_0/\">here</a>.</p>\n<h3>UTF-8 Support</h3>\n<p>Prometheus now allows all valid UTF-8 characters to be used in metric and label names by default, as well as label values,\nas has been true in version 2.x.</p>\n<p>Users will need to make sure their metrics producers are configured to pass UTF-8 names, and if either side does not support UTF-8,\nmetric names will be escaped using the traditional underscore-replacement method. PromQL queries can be written with the new quoting syntax\nin order to retrieve UTF-8 metrics, or users can specify the <code>__name__</code>  label name manually.</p>\n<p>Currently only the Go client library has been updated to support UTF-8, but support for other languages will be added soon.</p>\n<h3>OTLP Support</h3>\n<p>In alignment with <a href=\"https://prometheus.io/blog/2024/03/14/commitment-to-opentelemetry/\">our commitment to OpenTelemetry</a>, Prometheus 3.0 features\nseveral new features to improve interoperability with OpenTelemetry.</p>\n<h4>OTLP Ingestion</h4>\n<p>Prometheus can be configured as a native receiver for the OTLP Metrics protocol, receiving OTLP metrics on the <code>/api/v1/otlp/v1/metrics</code> endpoint.</p>\n<p>See our <a href=\"https://prometheus.io/docs/guides/opentelemetry\">guide</a> on best practices for consuming OTLP metric traffic into Prometheus.</p>\n<h4>UTF-8 Normalization</h4>\n<p>With Prometheus 3.0, thanks to <a href=\"https://prometheus.io/blog/feed.xml#utf-8-support\">UTF-8 support</a>, users can store and query OpenTelemetry metrics without annoying changes to metric and label names like <a href=\"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/pkg/translator/prometheus\">changing dots to underscores</a>.</p>\n<p>Notably this allows <strong>less confusion</strong> for users and tooling in terms of the discrepancy between what’s defined in OpenTelemetry semantic convention or SDK and what’s actually queryable.</p>\n<p>To achieve this for OTLP ingestion, Prometheus 3.0 has experimental support for different translation strategies. See <a href=\"https://prometheus.io/docs/prometheus/latest/configuration/configuration/#:~:text=Settings%20related%20to%20the%20OTLP%20receiver%20feature\">otlp section in the Prometheus configuration</a> for details.</p>\n<blockquote>\n<p>NOTE: While “NoUTF8EscapingWithSuffixes” strategy allows special characters, it still adds required suffixes for the best experience. See <a href=\"https://github.com/prometheus/proposals/pull/39\">the proposal on the future work to enable no suffixes</a> in Prometheus.</p>\n</blockquote>\n<h3>Native Histograms</h3>\n<p>Native histograms are a Prometheus metric type that offer a higher efficiency and lower cost alternative to Classic Histograms. Rather than having to choose (and potentially have to update) bucket boundaries based on the data set, native histograms have pre-set bucket boundaries based on exponential growth.</p>\n<p>Native Histograms are still experimental and not yet enabled by default, and can be turned on by passing <code>--enable-feature=native-histograms</code>. Some aspects of Native Histograms, like the text format and accessor functions / operators are still under active design.</p>\n<h3>Breaking Changes</h3>\n<p>The Prometheus community strives to <a href=\"https://prometheus.io/docs/prometheus/latest/stability/\">not break existing features within a major release</a>. With a new major release we took the opportunity to clean up a few, but small, long-standing issues. In other words, Prometheus 3.0 contains a few breaking changes. This includes changes to feature flags, configuration files, PromQL, and scrape protocols.</p>\n<p>Please read the <a href=\"https://prometheus.io/docs/prometheus/3.0/migration/\">migration guide</a> to find out if your setup is affected and what actions to take.</p>\n<h2>Performance</h2>\n<p>It’s impressive to see what we have accomplished in the community since Prometheus 2.0. We all love numbers, so let’s celebrate the efficiency improvements we made for both CPU and memory use for the TSDB mode. Below you can see performance numbers between 3 Prometheus versions on the node with 8 CPU and 49 GB allocatable memory.</p>\n<ul>\n<li>2.0.0 (7 years ago)</li>\n<li>2.18.0 (4 years ago)</li>\n<li>3.0.0 (now)</li>\n</ul>\n<p><img alt=\"Memory bytes\" src=\"https://prometheus.io/assets/blog/2024-11-14/memory_bytes_ui.png\" /></p>\n<p><img alt=\"CPU seconds\" src=\"https://prometheus.io/assets/blog/2024-11-14/cpu_seconds_ui.png\" /></p>\n<p>It’s furthermore impressive that those numbers were taken using our <a href=\"https://github.com/prometheus/prometheus/pull/15366\">prombench macrobenchmark</a>\nthat uses the same PromQL queries, configuration and environment–highlighting backward compatibility and stability for the core features, even with 3.0.</p>\n<h2>What's Next</h2>\n<p>There are still tons of exciting features and improvements we can make in Prometheus and the ecosystem. Here is a non-exhaustive list to get you excited and…\nhopefully motivate you to contribute and join us!</p>\n<ul>\n<li>New, more inclusive <strong>governance</strong></li>\n<li>More <strong>OpenTelemetry</strong> compatibility and features</li>\n<li>OpenMetrics 2.0, now under Prometheus governance!</li>\n<li>Native Histograms stability (and with custom buckets!)</li>\n<li>More optimizations!</li>\n<li>UTF-8 support coverage in more SDKs and tools</li>\n</ul>\n<h2>Try It Out!</h2>\n<p>You can try out Prometheus 3.0 by downloading it from our <a href=\"https://prometheus.io/download/#prometheus\">official binaries</a> and <a href=\"https://quay.io/repository/prometheus/prometheus?tab=tags\">container images</a>.</p>\n<p>If you are upgrading from Prometheus 2.x, check out the migration guide for more information on any adjustments you will have to make.\nPlease note that we strongly recommend upgrading to v2.55 before upgrading to v3.0. Rollback is possible from v3.0 to v2.55, but not to earlier versions.</p>\n<p>As always, we welcome feedback and contributions from the community!</p>",
      "timestamp": 1761396361.1720684,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "Prometheus 3.0 Beta Released",
      "link": "https://prometheus.io/blog/2024/09/11/prometheus-3-beta/",
      "published": "2024-09-11T00:00:00.000Z",
      "summary": "<p>The Prometheus Team is proud to announce the availability of Prometheus Version 3.0-beta!\nYou can download it <a href=\"https://github.com/prometheus/prometheus/releases/tag/v3.0.0-beta.0\">here</a>.\nAs is traditional with a beta release, we do <strong>not</strong> recommend users install Prometheus 3.0-beta on critical production systems, but we do want everyone to test it out and find bugs.</p>\n<p>In general, the only breaking changes are the removal of deprecated feature flags. The Prometheus team worked hard to ensure backwards-compatibility and not to break existing installations, so all of the new features described below build on top of existing functionality. Most users should be able to try Prometheus 3.0 out of the box without any configuration changes.</p>\n<h2>What's New</h2>\n<p>With over 7500 commits in the 7 years since Prometheus 2.0 came out there are too many new individual features and fixes to list, but there are some big shiny and breaking changes we wanted to call out. We need everyone in the community to try them out and report any issues you might find.\nThe more feedback we get, the more stable the final 3.0 release can be.</p>\n<h3>New UI</h3>\n<p>One of the highlights in Prometheus 3.0 is its brand new UI that is enabled by default:</p>\n<p><img alt=\"New UI query page\" src=\"https://prometheus.io/assets/blog/2024-09-11/blog_post_screenshot_tree_view-s.png\" /></p>\n<p>The UI has been completely rewritten with less clutter, a more modern look and feel, new features like a <a href=\"https://promlens.com/\"><strong>PromLens</strong></a>-style tree view, and will make future maintenance easier by using a more modern technical stack.</p>\n<p>Learn more about the new UI in general in <a href=\"https://promlabs.com/blog/2024/09/11/a-look-at-the-new-prometheus-3-0-ui/\">Julius' detailed article on the PromLabs blog</a>.\nUsers can temporarily enable the old UI by using the <code>old-ui</code> feature flag.\nSince the new UI is not battle-tested yet, it is also very possible that there are still bugs. If you find any, please <a href=\"https://github.com/prometheus/prometheus/issues/new?assignees=&#x26;labels=&#x26;projects=&#x26;template=bug_report.yml\">report them on GitHub</a>.</p>\n<h3>Remote Write 2.0</h3>\n<p>Remote-Write 2.0 iterates on the previous protocol version by adding native support for a host of new elements including metadata, exemplars, created timestamp and native histograms. It also uses string interning to reduce payload size and CPU usage when compressing and decompressing. More details can be found <a href=\"https://prometheus.io/docs/specs/remote_write_spec_2_0/\">here</a>.</p>\n<h3>OpenTelemetry Support</h3>\n<p>Prometheus intends to be the default choice for storing OpenTelemetry metrics, and 3.0 includes some big new features that makes it even better as a storage backend for OpenTelemetry metrics data.</p>\n<h4>UTF-8</h4>\n<p>By default, Prometheus will allow all valid UTF-8 characters to be used in metric and label names, as well as label values as has been true in version 2.x.</p>\n<p>Users will need to make sure their metrics producers are configured to pass UTF-8 names, and if either side does not support UTF-8, metric names will be escaped using the traditional underscore-replacement method. PromQL queries can be written with the new quoting syntax in order to retrieve UTF-8 metrics, or users can specify the <code>__name__</code>  label name manually.</p>\n<p>Not all language bindings have been updated with support for UTF-8 but the primary Go libraries have been.</p>\n<h4>OTLP Ingestion</h4>\n<p>Prometheus can be configured as a native receiver for the OTLP Metrics protocol, receiving OTLP metrics on the /api/v1/otlp/v1/metrics endpoint.</p>\n<h3>Native Histograms</h3>\n<p>Native histograms are a Prometheus metric type that offer a higher efficiency and lower cost alternative to Classic Histograms. Rather than having to choose (and potentially have to update) bucket boundaries based on the data set, native histograms have pre-set bucket boundaries based on exponential growth.</p>\n<p>Native Histograms are still experimental and not yet enabled by default, and can be turned on by passing <code>--enable-feature=native-histograms</code>.  Some aspects of Native Histograms, like the text format and accessor functions / operators are still under active design.</p>\n<h3>Other Breaking Changes</h3>\n<p>The following feature flags have been removed, being enabled by default instead. References to these flags should be removed from configs, and will be ignored in Prometheus starting with version 3.0</p>\n<ul>\n<li><code>promql-at-modifier</code></li>\n<li><code>promql-negative-offset</code></li>\n<li><code>remote-write-receiver</code></li>\n<li><code>no-scrape-default-port</code></li>\n<li><code>new-service-discovery-manager</code></li>\n</ul>\n<p>Range selections are now <a href=\"https://github.com/prometheus/prometheus/issues/13213\">left-open and right-closed</a>, which will avoid rare occasions that more points than intended are included in operations.</p>\n<p>Agent mode is now stable and has its own config flag instead of a feature flag</p>",
      "timestamp": 1761396361.172072,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "Our commitment to OpenTelemetry",
      "link": "https://prometheus.io/blog/2024/03/14/commitment-to-opentelemetry/",
      "published": "2024-03-13T00:00:00.000Z",
      "summary": "<p><em>The <a href=\"https://opentelemetry.io/\">OpenTelemetry project</a> is an Observability framework and toolkit designed to create and manage telemetry data such as traces, metrics, and logs. It is gaining widespread adoption due to its consistent specification between signals and promise to reduce vendor lock-in which is something that we’re excited about.</em></p>\n<h2>Looking back at 2023</h2>\n<p>Over the past few years, we have collaborated with the OpenTelemetry community to make sure that OpenTelemetry and Prometheus support each other bidirectionally. This led to the drafting of the official specification to convert between the two systems, as well as the implementations that allow you to ingest Prometheus metrics into OpenTelemetry Collector and vice-versa.</p>\n<p>Since then, we have spent a significant amount of time understanding the <a href=\"https://docs.google.com/document/d/1epvoO_R7JhmHYsII-GJ6Yw99Ky91dKOqOtZGqX7Bk0g/edit?usp=sharing\">challenges faced by OpenTelemetry users</a> when storing their metrics in Prometheus and based on those, explored <a href=\"https://docs.google.com/document/d/1NGdKqcmDExynRXgC_u1CDtotz9IUdMrq2yyIq95hl70/edit?usp=sharing\">how we can address them</a>. Some of the changes proposed need careful considerations to avoid breaking either side's operating promises, e.g. supporting both push and pull. At PromCon Berlin 2023, we attempted to summarize our ideas in <a href=\"https://www.youtube.com/watch?v=mcabOH70FqU\">one of the talks</a>.</p>\n<p>At our <a href=\"https://docs.google.com/document/d/11LC3wJcVk00l8w5P3oLQ-m3Y37iom6INAMEu2ZAGIIE/edit#bookmark=id.9kp854ea3sv4\">dev summit in Berlin</a>, we spent the majority of our time discussing these changes and our general stance on OpenTelemetry in depth, and the broad consensus is that we want <a href=\"https://docs.google.com/document/d/11LC3wJcVk00l8w5P3oLQ-m3Y37iom6INAMEu2ZAGIIE/edit#bookmark=id.196i9ij1u7fs\">“to be the default store for OpenTelemetry metrics”</a>!</p>\n<p>We’ve formed a core group of developers to lead this initiative, and we are going to release a Prometheus 3.0 in 2024 with OTel support as one of its more important features. Here’s a sneak peek at what's coming in 2024.</p>\n<h2>The year ahead</h2>\n<h3>OTLP Ingestion GA</h3>\n<p>In <a href=\"https://github.com/prometheus/prometheus/releases/tag/v2.47.0\">Prometheus v2.47.0</a>, released on 6th September 2023, we added experimental support for OTLP ingestion in Prometheus. We’re constantly improving this and we plan to add support for staleness and make it a stable feature. We will also mark our support for out-of-order ingestion as stable. This involves also GA-ing our support for native / exponential histograms.</p>\n<h3>Support UTF-8 metric and label names</h3>\n<p><a href=\"https://github.com/open-telemetry/semantic-conventions/blob/main/docs/http/http-metrics.md\">OpenTelemetry semantic conventions</a> push for <code>“.”</code> to be the namespacing character. For example, <code>http.server.request.duration</code>. However, Prometheus currently requires a <a href=\"https://prometheus.io/docs/instrumenting/writing_exporters/#naming\">more limited character set</a>, which means we convert the metric to <code>http_server_request_duration</code> when ingesting it into Prometheus.</p>\n<p>This causes unnecessary dissonance and we’re working on removing this limitation by adding UTF-8 support for all labels and metric names. The progress is tracked <a href=\"https://github.com/prometheus/prometheus/issues/13095\">here</a>.</p>\n<h3>Native support for resource attributes</h3>\n<p>OpenTelemetry differentiates between metric attributes (labels to identify the metric itself, like <code>http.status_code</code>) and resource attributes (labels to identify the source of the metrics, like <code>k8s.pod.name</code>), while Prometheus has a more flat label schema. This leads to many usability issues that are detailed <a href=\"https://docs.google.com/document/d/1gG-eTQ4SxmfbGwkrblnUk97fWQA93umvXHEzQn2Nv7E/edit?usp=sharing\">here</a>.</p>\n<p>We’re <a href=\"https://docs.google.com/document/d/1FgHxOzCQ1Rom-PjHXsgujK8x5Xx3GTiwyG__U3Gd9Tw/edit\">exploring several solutions</a> to this problem from many fronts (Query, UX, storage, etc.), but our goal is to make it quite easy to filter and group on resource attributes. This is a work in progress, and feedback and help are wanted!</p>\n<h3>OTLP export in the ecosystem</h3>\n<p>Prometheus remote write is supported by <a href=\"https://prometheus.io/docs/operating/integrations/#remote-endpoints-and-storage\">most of the leading Observability projects and vendors</a> already. However, OpenTelemetry Protocol (OTLP) is gaining prominence and we would like to support it across the Prometheus ecosystem.</p>\n<p>We would like to add support for it to the Prometheus server, SDKs and the exporters. This would mean that any service instrumented with the Prometheus SDKs will also be able to <em>push</em> OTLP and it will unlock the rich Prometheus exporter ecosystem for OpenTelemetry users.</p>\n<p>However, we intend to keep and develop the OpenMetrics exposition format as an optimized / simplified format for Prometheus and pull-based use-cases.</p>\n<h3>Delta temporality</h3>\n<p>The OpenTelemetry project also supports <a href=\"https://grafana.com/blog/2023/09/26/opentelemetry-metrics-a-guide-to-delta-vs.-cumulative-temporality-trade-offs/\">Delta temporality</a> which has some use-cases for the Observability ecosystem. We have a lot of Prometheus users still running statsd and using the statsd_exporter for various reasons.</p>\n<p>We would like to support the Delta temporality of OpenTelemetry in the Prometheus server and are <a href=\"https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/30479\">working towards it</a>.</p>\n<h2>Call for contributions!</h2>\n<p>As you can see, a lot of new and exciting things are coming to Prometheus! If working in the intersection between two of the most relevant open-source projects around observability sounds challenging and interesting to you, we'd like to have you on board!</p>\n<p>This year there is also a change of governance in the works that will make the process of becoming a maintainer easier than ever! If you ever wanted to have an impact on Prometheus, now is a great time to get started.</p>\n<p>Our first focus has always been to be as open and transparent as possible on how we are organizing all the work above so that you can also contribute. We are looking for contributors to support this initiative and help implement these features. Check out the <a href=\"https://github.com/orgs/prometheus/projects/9\">Prometheus 3.0 public board</a> and <a href=\"https://github.com/prometheus/prometheus/issues?q=is%3Aopen+is%3Aissue+milestone%3A%22OTEL+Support%22\">Prometheus OTel support milestone</a> to track the progress of the feature development and see ways that you can <a href=\"https://github.com/prometheus/prometheus/blob/main/CONTRIBUTING.md\">contribute</a>.</p>\n<h2>Conclusion</h2>\n<p>Some of the changes proposed are large and invasive or involve a fundamental departure from the original data model of Prometheus. However, we plan to introduce these gracefully so that Prometheus 3.0 will have no major breaking changes and most of the users can upgrade without impact.</p>\n<p>We are excited to embark on this new chapter for Prometheus and would love your feedback on the changes suggested.</p>",
      "timestamp": 1761396361.1720753,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "The Schedule for the PromCon Europe 2023 is Live",
      "link": "https://prometheus.io/blog/2023/09/01/promcon2023-schedule/",
      "published": "2023-09-01T00:00:00.000Z",
      "summary": "<blockquote>\n<p>PromCon Europe is the eighth conference fully dedicated to the Prometheus monitoring system</p>\n</blockquote>\n<p>Berlin, Germany – September 1, 2023 – The CNCF and the Prometheus team, released the two-day schedule for the single-track PromCon Europe 2023 conference happening in Berlin, Germany from September 28 to September 29, 2023. Attendees will be able to choose from 21 full-length (25min) sessions and up to 20 five-minute lightning talk sessions spanning diverse topics related to <a href=\"https://prometheus.io/\">Prometheus</a>.</p>\n<p>Now in its 8th installment, PromCon brings together Prometheus users and developers from around the world to exchange knowledge, best practices, and experience gained through using Prometheus. The program committee reviewed 66 submissions that will provide a fresh and informative look into the most pressing topics around Prometheus today.</p>\n<p>\"We are super excited for PromCon to be coming home to Berlin. Prometheus was started in Berlin at Soundcloud in 2012. The first PromCon was hosted in Berlin and in between moved to Munich. This year we're hosting around 300 attendees at Radialsystem in Friedrichshain, Berlin. Berlin has a vibrant Prometheus community and many of the Prometheus team members live in the neighborhood. It is a great opportunity to network and connect with the Prometheus family who are all passionate about systems and service monitoring,\" said Matthias Loibl, Senior Software Engineer at Polar Signals and Prometheus team member who leads this year's PromCon program committee. \"It will be a great event to learn about the latest developments from the Prometheus team itself and connect to some big-scale users of Prometheus up close.\"</p>\n<p>The community-curated schedule will feature sessions from open source community members, including:</p>\n<ul>\n<li><a href=\"https://promcon.io/2023-berlin/talks/towards-making-prometheus-opentelemetry-native\">Towards making Prometheus OpenTelemetry native</a></li>\n<li><a href=\"https://promcon.io/2023-berlin/talks/how-to-monitor-global-tens-of-thousands-of-kubernetes-clusters-with-thanos-federation\">How to Monitor Global Tens of Thousands of Kubernetes Clusters with Thanos Federation</a></li>\n<li><a href=\"https://promcon.io/2023-berlin/talks/prometheus-java-client\">Prometheus Java Client 1.0.0</a></li>\n<li><a href=\"https://promcon.io/2023-berlin/talks/perses\">Perses</a></li>\n<li><a href=\"https://promcon.io/2023-berlin/talks/where-your-money-going-the-beginners-guide-to-measuring-kubernetes-costs\">Where's your money going? The Beginners Guide To Measuring Kubernetes Costs</a></li>\n</ul>\n<p>For the full PromCon Europe 2023 program, please visit the <a href=\"https://promcon.io/2023-berlin/schedule/\">schedule</a>.</p>\n<h2>Registration</h2>\n<p><a href=\"https://promcon.io/2023-berlin/register/\">Register</a> for the in-person standard pricing of $350 USD through September 25. The venue has space for 300 attendees so don’t wait!</p>\n<h2>Thank You to Our Sponsors</h2>\n<p>PromCon Europe 2023 has been made possible thanks to the amazing community around Prometheus and support from our Diamond Sponsor <a href=\"https://grafana.com/\">Grafana Labs</a>, Platinum Sponsor <a href=\"https://www.redhat.com/\">Red Hat</a> as well as many more Gold, and Startup sponsors. This year’s edition is organized by <a href=\"https://www.polarsignals.com/\">Polar Signals</a> and CNCF.</p>\n<h2>Watch the Prometheus Documentary</h2>\n<h2>Contact</h2>\n<p>Jessie Adams-Shore - The Linux Foundation - <a href=\"mailto:pr@cncf.io\">pr@cncf.io</a></p>\n<p>PromCon Organizers - <a href=\"mailto:promcon-organizers@googlegroups.com\">promcon-organizers@googlegroups.com</a></p>",
      "timestamp": 1761396361.1720786,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "FAQ about Prometheus 2.43 String Labels Optimization",
      "link": "https://prometheus.io/blog/2023/03/21/stringlabel/",
      "published": "2023-03-21T00:00:00.000Z",
      "summary": "<p>Prometheus 2.43 has just been released, and it brings some exciting features and\nenhancements. One of the significant improvements is the <code>stringlabels</code> release,\nwhich uses a new data structure for labels. This blog post will answer some\nfrequently asked questions about the 2.43 release and the <code>stringlabels</code>\noptimizations.</p>\n<h2>What is the <code>stringlabels</code> release?</h2>\n<p>The <code>stringlabels</code> release is a Prometheus 2.43 version that uses a new data\nstructure for labels. It stores all the label/values in a single string,\nresulting in a smaller heap size and some speedups in most cases. These\noptimizations are not shipped in the default binaries and require compiling\nPrometheus using the Go tag <code>stringlabels</code>.</p>\n<h2>Why didn't you go for a feature flag that we can toggle?</h2>\n<p>We considered using a feature flag but it would have a memory overhead that was\nnot worth it. Therefore, we decided to provide a separate release with these\noptimizations for those who are interested in testing and measuring the gains on\ntheir production environment.</p>\n<h2>When will these optimizations be generally available?</h2>\n<p>These optimizations will be available in the upcoming Prometheus 2.44 release\nby default.</p>\n<h2>How do I get the 2.43 release?</h2>\n<p>The <a href=\"https://github.com/prometheus/prometheus/releases/tag/v2.43.0\">Prometheus 2.43 release</a> is available on the official Prometheus GitHub\nreleases page, and users can download the binary files directly from there.\nAdditionally, Docker images are also available for those who prefer to use\ncontainers.</p>\n<p>The stringlabels optimization is not included in these default binaries. To use\nthis optimization, users will need to download the <a href=\"https://github.com/prometheus/prometheus/releases/tag/v2.43.0%2Bstringlabels\">2.43.0+stringlabels\nrelease</a>\nbinary or the <a href=\"https://quay.io/repository/prometheus/prometheus?tab=tags\">Docker images tagged\nv2.43.0-stringlabels</a> specifically.</p>\n<h2>Why is the release <code>v2.43.0+stringlabels</code> and the Docker tag <code>v2.43.0-stringlabels</code>?</h2>\n<p>In semantic versioning, the plus sign (+) is used to denote build\nmetadata. Therefore, the Prometheus 2.43 release with the <code>stringlabels</code>\noptimization is named <code>2.43.0+stringlabels</code> to signify that it includes the\nexperimental <code>stringlabels</code> feature. However, Docker tags do not allow the use of\nthe plus sign in their names. Hence, the plus sign has been replaced with a dash\n(-) to make the Docker tag <code>v2.43.0-stringlabels</code>. This allows the Docker tag to\npass the semantic versioning checks of downstream projects such as the\nPrometheus Operator.</p>\n<h2>What are the other noticeable features in the Prometheus 2.43 release?</h2>\n<p>Apart from the <code>stringlabels</code> optimizations, the Prometheus 2.43 release\nbrings several new features and enhancements. Some of the significant additions\ninclude:</p>\n<ul>\n<li>We added support for <code>scrape_config_files</code> to include scrape configs from\ndifferent files. This makes it easier to manage and organize the configuration.</li>\n<li>The HTTP clients now includes two new config options: <code>no_proxy</code> to exclude\nURLs from proxied requests and <code>proxy_from_environment</code> to read proxies from\nenv variables. These features make it easier to manage the HTTP client's\nbehavior in different environments.</li>\n</ul>\n<p>You can learn more about features and bugfixes in the\n<a href=\"https://github.com/prometheus/prometheus/releases/tag/v2.43.0\">full changelog</a>.</p>",
      "timestamp": 1761396361.1720822,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "Introducing Prometheus Agent Mode, an Efficient and Cloud-Native Way for Metric Forwarding",
      "link": "https://prometheus.io/blog/2021/11/16/agent/",
      "published": "2021-11-16T00:00:00.000Z",
      "summary": "<blockquote>\n<p>Bartek Płotka has been a Prometheus Maintainer since 2019 and Principal Software Engineer at Red Hat. Co-author of the CNCF Thanos project. CNCF Ambassador and tech lead for the CNCF TAG Observability. In his free time, he writes a book titled \"Efficient Go\" with O'Reilly. Opinions are my own!</p>\n</blockquote>\n<p>What I personally love in the Prometheus project, and one of the many reasons why I joined the team, was the laser focus on the project's goals. Prometheus was always about pushing boundaries when it comes to providing pragmatic, reliable, cheap, yet invaluable metric-based monitoring. Prometheus' ultra-stable and robust APIs, query language, and integration protocols (e.g. Remote Write and <a href=\"https://openmetrics.io/\">OpenMetrics</a>) allowed the Cloud Native Computing Foundation (CNCF) metrics ecosystem to grow on those strong foundations. Amazing things happened as a result:</p>\n<ul>\n<li>We can see community exporters for getting metrics about virtually everything e.g. <a href=\"https://github.com/google/cadvisor\">containers</a>, <a href=\"https://github.com/cloudflare/ebpf_exporter\">eBPF</a>, <a href=\"https://github.com/sladkoff/minecraft-prometheus-exporter\">Minecraft server statistics</a> and even <a href=\"https://megamorf.gitlab.io/2019/07/14/monitoring-plant-health-with-prometheus/\">plants' health when gardening</a>.</li>\n<li>Most people nowadays expect cloud-native software to have an HTTP/HTTPS <code>/metrics</code> endpoint that Prometheus can scrape. A concept developed in secret within Google and pioneered globally by the Prometheus project.</li>\n<li>The observability paradigm shifted. We see SREs and developers rely heavily on metrics from day one, which improves software resiliency, debuggability, and data-driven decisions!</li>\n</ul>\n<p>In the end, we hardly see Kubernetes clusters without Prometheus running there.</p>\n<p>The strong focus of the Prometheus community allowed other open-source projects to grow too to extend the Prometheus deployment model beyond single nodes (e.g. <a href=\"https://cortexmetrics.io/\">Cortex</a>, <a href=\"https://thanos.io/\">Thanos</a> and more). Not mentioning cloud vendors adopting Prometheus' API and data model (e.g. <a href=\"https://aws.amazon.com/prometheus/\">Amazon Managed Prometheus</a>, <a href=\"https://cloud.google.com/stackdriver/docs/managed-prometheus\">Google Cloud Managed Prometheus</a>, <a href=\"https://grafana.com/products/cloud/\">Grafana Cloud</a> and more). If you are looking for a single reason why the Prometheus project is so successful, it is this: <strong>Focusing the monitoring community on what matters</strong>.</p>\n<p>In this (lengthy) blog post, I would love to introduce a new operational mode of running Prometheus called \"Agent\". It is built directly into the Prometheus binary. The agent mode disables some of Prometheus' usual features and optimizes the binary for scraping and remote writing to remote locations. Introducing a mode that reduces the number of features enables new usage patters. In this blog post I will explain why it is a game-changer for certain deployments in the CNCF ecosystem. I am super excited about this!</p>\n<h2>History of the Forwarding Use Case</h2>\n<p>The core design of Prometheus has been unchanged for the project's entire lifetime. Inspired by <a href=\"https://sre.google/sre-book/practical-alerting/#the-rise-of-borgmon\">Google's Borgmon monitoring system</a>, you can deploy a Prometheus server alongside the applications you want to monitor, tell Prometheus how to reach them, and allow to scrape the current values of their metrics at regular intervals. Such a collection method, which is often referred to as the \"pull model\", is the core principle that <a href=\"https://prometheus.io/blog/2016/07/23/pull-does-not-scale-or-does-it/\">allows Prometheus to be lightweight and reliable</a>. Furthermore, it enables application instrumentation and exporters to be dead simple, as they only need to provide a simple human-readable HTTP endpoint with the current value of all tracked metrics (in OpenMetrics format). All without complex push infrastructure and non-trivial client libraries. Overall, a simplified typical Prometheus monitoring deployment looks as below:</p>\n<p><img alt=\"Prometheus high-level view\" src=\"https://prometheus.io/assets/blog/2021-11-16/prom.png\" /></p>\n<p>This works great, and we have seen millions of successful deployments like this over the years that process dozens of millions of active series. Some of them for longer time retention, like two years or so. All allow to query, alert, and record metrics useful for both cluster admins and developers.</p>\n<p>However, the cloud-native world is constantly growing and evolving. With the growth of managed Kubernetes solutions and clusters created on-demand within seconds, we are now finally able to treat clusters as \"cattle\", not as \"pets\" (in other words, we care less about individual instances of those). In some cases, solutions do not even have the cluster notion anymore, e.g. <a href=\"https://github.com/kcp-dev/kcp\">kcp</a>, <a href=\"https://aws.amazon.com/fargate/\">Fargate</a> and other platforms.</p>\n<p><img alt=\"Yoda\" src=\"https://prometheus.io/assets/blog/2021-11-16/yoda.gif\" /></p>\n<p>The other interesting use case that emerges is the notion of <strong>Edge</strong> clusters or networks. With industries like telecommunication, automotive and IoT devices adopting cloud-native technologies, we see more and more much smaller clusters with a restricted amount of resources. This is forcing all data (including observability) to be transferred to remote, bigger counterparts as almost nothing can be stored on those remote nodes.</p>\n<p>What does that mean? That means monitoring data has to be somehow aggregated, presented to users and sometimes even stored on the <em>global</em> level. This is often called a <strong>Global-View</strong> feature.</p>\n<p>Naively, we could think about implementing this by either putting Prometheus on that global level and scraping metrics across remote networks or pushing metrics directly from the application to the central location for monitoring purposes. Let me explain why both are generally <em>very</em> bad ideas:</p>\n<p>🔥 Scraping across network boundaries can be a challenge if it adds new unknowns in a monitoring pipeline. The local pull model allows Prometheus to know why exactly the metric target has problems and when. Maybe it's down, misconfigured, restarted, too slow to give us metrics (e.g. CPU saturated), not discoverable by service discovery, we don't have credentials to access or just DNS, network, or the whole cluster is down. By putting our scraper outside of the network, we risk losing some of this information by introducing unreliability into scrapes that is unrelated to an individual target. On top of that, we risk losing important visibility completely if the network is temporarily down. Please don't do it. It's not worth it. (:</p>\n<p>🔥 Pushing metrics directly from the application to some central location is equally bad. Especially when you monitor a larger fleet, you know literally nothing when you don't see metrics from remote applications. Is the application down? Is my receiver pipeline down? Maybe the application failed to authorize? Maybe it failed to get the IP address of my remote cluster? Maybe it's too slow? Maybe the network is down? Worse, you may not even know that the data from some application targets is missing. And you don't even gain a lot as you need to track the state and status of everything that should be sending data. Such a design needs careful analysis as it can be a recipe for a failure too easily.</p>\n<blockquote>\n<p>NOTE: Serverless functions and short-living containers are often cases where we think about push from application as the rescue. At this point however we talk about events or pieces of metrics we might want to aggregate to longer living time series. This topic is discussed <a href=\"https://groups.google.com/g/prometheus-developers/c/FPe0LsTfo2E/m/yS7up2YzAwAJ\">here</a>, feel free to contribute and help us support those cases better!</p>\n</blockquote>\n<p>Prometheus introduced three ways to support the global view case, each with its own pros and cons. Let's briefly go through those. They are shown in orange color in the diagram below:</p>\n<p><img alt=\"Prometheus global view\" src=\"https://prometheus.io/assets/blog/2021-11-16/prom-remote.png\" /></p>\n<ul>\n<li><strong>Federation</strong> was introduced as the first feature for aggregation purposes. It allows a global-level Prometheus server to scrape a subset of metrics from a leaf Prometheus. Such a \"federation\" scrape reduces some unknowns across networks because metrics exposed by federation endpoints include the original samples' timestamps. Yet, it usually suffers from the inability to federate all metrics and not lose data during longer network partitions (minutes).</li>\n<li><strong>Prometheus Remote Read</strong> allows selecting raw metrics from a remote Prometheus server's database without a direct PromQL query. You can deploy Prometheus or other solutions (e.g. Thanos) on the global level to perform PromQL queries on this data while fetching the required metrics from multiple remote locations. This is really powerful as it allows you to store data \"locally\" and access it only when needed. Unfortunately, there are cons too. Without features like <a href=\"https://github.com/thanos-io/thanos/issues/305\">Query Pushdown</a> we are in extreme cases pulling GBs of compressed metric data to answer a single query. Also, if we have a network partition, we are temporarily blind. Last but not least, certain security guidelines are not allowing ingress traffic, only egress one.</li>\n<li>Finally, we have <strong>Prometheus Remote Write</strong>, which seems to be the most popular choice nowadays. Since the agent mode focuses on remote write use cases, let's explain it in more detail.</li>\n</ul>\n<h3>Remote Write</h3>\n<p>The Prometheus Remote Write protocol allows us to forward (stream) all or a subset of metrics collected by Prometheus to the remote location. You can configure Prometheus to forward some metrics (if you want, with all metadata and exemplars!) to one or more locations that support the Remote Write API. In fact, Prometheus supports both ingesting and sending Remote Write, so you can deploy Prometheus on a global level to receive that stream and aggregate data cross-cluster.</p>\n<p>While the official <a href=\"https://docs.google.com/document/d/1LPhVRSFkGNSuU1fBd81ulhsCPR4hkSZyyBj1SZ8fWOM/edit\">Prometheus Remote Write API specification is in review stage</a>, the ecosystem adopted the Remote Write protocol as the default metrics export protocol. For example, Cortex, Thanos, OpenTelemetry, and cloud services like Amazon, Google, Grafana, Logz.io, etc., all support ingesting data via Remote Write.</p>\n<p>The Prometheus project also offers the official compliance tests for its APIs, e.g. <a href=\"https://github.com/prometheus/compliance/tree/main/remote_write_sender\">remote-write sender compliance</a> for solutions that offer Remote Write client capabilities. It's an amazing way to quickly tell if you are correctly implementing this protocol.</p>\n<p>Streaming data from such a scraper enables Global View use cases by allowing you to store metrics data in a centralized location. This also enables separation of concerns, which is useful when applications are managed by different teams than the observability or monitoring pipelines. Furthermore, it is also why Remote Write is chosen by vendors who want to offload as much work from their customers as possible.</p>\n<blockquote>\n<p>Wait for a second, Bartek. You just mentioned before that pushing metrics directly from the application is not the best idea!</p>\n</blockquote>\n<p>Sure, but the amazing part is that, even with Remote Write, Prometheus still uses a pull model to gather metrics from applications, which gives us an understanding of those different failure modes. After that, we batch samples and series and export, replicate (push) data to the Remote Write endpoints, limiting the number of monitoring unknowns that the central point has!</p>\n<p>It's important to note that a reliable and efficient remote-writing implementation is a non-trivial problem to solve. The Prometheus community spent around three years to come up with a stable and scalable implementation. We reimplemented the WAL (write-ahead-log) a few times, added internal queuing, sharding, smart back-offs and more. All of this is hidden from the user, who can enjoy well-performing streaming or large amounts of metrics stored in a centralized location.</p>\n<h3>Hands-on Remote Write Example: Katacoda Tutorial</h3>\n<p>All of this is not new in Prometheus. Many of us already use Prometheus to scrape all required metrics and remote-write all or some of them to remote locations.</p>\n<p>Suppose you would like to try the hands-on experience of remote writing capabilities. In that case, we recommend the <a href=\"https://katacoda.com/thanos/courses/thanos/3-receiver\">Thanos Katacoda tutorial of remote writing metrics from Prometheus</a>, which explains all steps required for Prometheus to forward all metrics to the remote location. It's <strong>free</strong>, just sign up for an account and enjoy the tutorial! 🤗</p>\n<p>Note that this example uses Thanos in receive mode as the remote storage. Nowadays, you can use plenty of other projects that are compatible with the remote write API.</p>\n<p>So if remote writing works fine, why did we add a special Agent mode to Prometheus?</p>\n<h2>Prometheus Agent Mode</h2>\n<p>From Prometheus <code>v2.32.0</code> (next release), everyone will be able to run the Prometheus binary with an experimental <code>--enable-feature=agent</code> flag. If you want to try it before the release, feel free to use <a href=\"https://github.com/prometheus/prometheus/releases/tag/v2.32.0-beta.0\">Prometheus v2.32.0-beta.0</a> or use our <code>quay.io/prometheus/prometheus:v2.32.0-beta.0</code> image.</p>\n<p>The Agent mode optimizes Prometheus for the remote write use case. It disables querying, alerting, and local storage, and replaces it with a customized TSDB WAL. Everything else stays the same: scraping logic, service discovery and related configuration. It can be used as a drop-in replacement for Prometheus if you want to just forward your data to a remote Prometheus server or any other Remote-Write-compliant project. In essence it looks like this:</p>\n<p><img alt=\"Prometheus agent\" src=\"https://prometheus.io/assets/blog/2021-11-16/agent.png\" /></p>\n<p>The best part about Prometheus Agent is that it's built into Prometheus. Same scraping APIs, same semantics, same configuration and discovery mechanism.</p>\n<p>What are the benefits of using the Agent mode if you plan not to query or alert on data locally and stream metrics outside? There are a few:</p>\n<p>First of all, efficiency. Our customized Agent TSDB WAL removes the data immediately after successful writes. If it cannot reach the remote endpoint, it persists the data temporarily on the disk until the remote endpoint is back online. This is currently limited to a two-hour buffer only, similar to non-agent Prometheus, <a href=\"https://github.com/prometheus/prometheus/issues/9607\">hopefully unblocked soon</a>. This means that we don't need to build chunks of data in memory. We don't need to maintain a full index for querying purposes. Essentially the Agent mode uses a fraction of the resources that a normal Prometheus server would use in a similar situation.</p>\n<p>Does this efficiency matter? Yes! As we mentioned, every GB of memory and every CPU core used on edge clusters matters for some deployments. On the other hand, the paradigm of performing monitoring using metrics is quite mature these days. This means that the more relevant metrics with more cardinality you can ship for the same cost - the better.</p>\n<blockquote>\n<p>NOTE: With the introduction of the Agent mode, the original Prometheus server mode still stays as the recommended, stable and maintained mode. Agent mode with remote storage brings additional complexity. Use with care.</p>\n</blockquote>\n<p>Secondly, the benefit of the new Agent mode is that it enables easier horizontal scalability for ingestion. This is something I am excited about the most. Let me explain why.</p>\n<h3>The Dream: Auto-Scalable Metric Ingestion</h3>\n<p>A true auto-scalable solution for scraping would need to be based on the amount of metric targets and the number of metrics they expose. The more data we have to scrape, the more instances of Prometheus we deploy automatically. If the number of targets or their number of metrics goes down, we could scale down and remove a couple of instances. This would remove the manual burden of adjusting the sizing of Prometheus and stop the need for over-allocating Prometheus for situations where the cluster is temporarily small.</p>\n<p>With just Prometheus in server mode, this was hard to achieve. This is because Prometheus in server mode is stateful. Whatever is collected stays as-is in a single place. This means that the scale-down procedure would need to back up the collected data to existing instances before termination. Then we would have the problem of overlapping scrapes, misleading staleness markers etc.</p>\n<p>On top of that, we would need some global view query that is able to aggregate all samples across all instances (e.g. Thanos Query or Promxy). Last but not least, the resource usage of Prometheus in server mode depends on more things than just ingestion. There is alerting, recording, querying, compaction, remote write etc., that might need more or fewer resources independent of the number of metric targets.</p>\n<p>Agent mode essentially moves the discovery, scraping and remote writing to a separate microservice. This allows a focused operational model on ingestion only. As a result, Prometheus in Agent mode is more or less stateless. Yes, to avoid loss of metrics, we need to deploy an HA pair of agents and attach a persistent disk to them. But technically speaking, if we have thousands of metric targets (e.g. containers), we can deploy multiple Prometheus agents and safely change which replica is scraping which targets. This is because, in the end, all samples will be pushed to the same central storage.</p>\n<p>Overall, Prometheus in Agent mode enables easy horizontal auto-scaling capabilities of Prometheus-based scraping that can react to dynamic changes in metric targets. This is definitely something we will look at with the <a href=\"https://github.com/prometheus-operator/prometheus-operator\">Prometheus Kubernetes Operator</a> community going forward.</p>\n<p>Now let's take a look at the currently implemented state of agent mode in Prometheus. Is it ready to use?</p>\n<h3>Agent Mode Was Proven at Scale</h3>\n<p>The next release of Prometheus will include Agent mode as an experimental feature. Flags, APIs and WAL format on disk might change. But the performance of the implementation is already battle-tested thanks to <a href=\"https://grafana.com/\">Grafana Labs'</a> open-source work.</p>\n<p>The initial implementation of our Agent's custom WAL was inspired by the current Prometheus server's TSDB WAL and created by <a href=\"https://github.com/rfratto\">Robert Fratto</a> in 2019, under the mentorship of <a href=\"https://twitter.com/tom_wilkie\">Tom Wilkie</a>, Prometheus maintainer. It was then used in an open-source <a href=\"https://github.com/grafana/agent\">Grafana Agent</a> project that was since then used by many Grafana Cloud customers and community members. Given the maturity of the solution, it was time to donate the implementation to Prometheus for native integration and bigger adoption. Robert (Grafana Labs), with the help of Srikrishna (Red Hat) and the community, ported the code to the Prometheus codebase, which was merged to <code>main</code> 2 weeks ago!</p>\n<p>The donation process was quite smooth. Since some Prometheus maintainers contributed to this code before within the Grafana Agent, and since the new WAL is inspired by Prometheus' own WAL, it was not hard for the current Prometheus TSDB maintainers to take it under full maintenance! It also really helps that Robert is joining the Prometheus Team as a TSDB maintainer (congratulations!).</p>\n<p>Now, let's explain how you can use it! (:</p>\n<h3>How to Use Agent Mode in Detail</h3>\n<p>From now on, if you show the help output of Prometheus (<code>--help</code> flag), you should see more or less the following:</p>\n<pre><code class=\"language-bash\">usage: prometheus [&#x3c;flags>]\n\nThe Prometheus monitoring server\n\nFlags:\n  -h, --help                     Show context-sensitive help (also try --help-long and --help-man).\n      (... other flags)\n      --storage.tsdb.path=\"data/\"\n                                 Base path for metrics storage. Use with server mode only.\n      --storage.agent.path=\"data-agent/\"\n                                 Base path for metrics storage. Use with agent mode only.\n      (... other flags)\n      --enable-feature= ...      Comma separated feature names to enable. Valid options: agent, exemplar-storage, expand-external-labels, memory-snapshot-on-shutdown, promql-at-modifier, promql-negative-offset, remote-write-receiver,\n                                 extra-scrape-metrics, new-service-discovery-manager. See https://prometheus.io/docs/prometheus/latest/feature_flags/ for more details.\n</code></pre>\n<p>Since the Agent mode is behind a feature flag, as mentioned previously, use the <code>--enable-feature=agent</code> flag to run Prometheus in the Agent mode. Now, the rest of the flags are either for both server and Agent or only for a specific mode. You can see which flag is for which mode by checking the last sentence of a flag's help string. \"Use with server mode only\" means it's only for server mode. If you don't see any mention like this, it means the flag is shared.</p>\n<p>The Agent mode accepts the same scrape configuration with the same discovery options and remote write options.</p>\n<p>It also exposes a web UI with disabled query capabitilies, but showing build info, configuration, targets and service discovery information as in a normal Prometheus server.</p>\n<h3>Hands-on Prometheus Agent Example: Katacoda Tutorial</h3>\n<p>Similarly to Prometheus remote-write tutorial, if you would like to try the hands-on experience of Prometheus Agent capabilities, we recommend the <a href=\"https://katacoda.com/thanos/courses/thanos/4-receiver-agent\">Thanos Katacoda tutorial of Prometheus Agent</a>, which explains how easy it is to run Prometheus Agent.</p>\n<h2>Summary</h2>\n<p>I hope you found this interesting! In this post, we walked through the new cases that emerged like:</p>\n<ul>\n<li>edge clusters</li>\n<li>limited access networks</li>\n<li>large number of clusters</li>\n<li>ephemeral and dynamic clusters</li>\n</ul>\n<p>We then explained the new Prometheus Agent mode that allows efficiently forwarding scraped metrics to the remote write endpoints.</p>\n<p>As always, if you have any issues or feedback, feel free to <a href=\"https://prometheus.io/community/\">submit a ticket on GitHub or ask questions on the mailing list</a>.</p>\n<blockquote>\n<p>This blog post is part of a coordinated release between CNCF, Grafana, and Prometheus. Feel free to also read the <a href=\"https://www.cncf.io/blog/\">CNCF announcement</a> and the angle on the <a href=\"https://grafana.com/blog/2021/11/16/why-we-created-a-prometheus-agent-mode-from-the-grafana-agent\">Grafana Agent which underlies the Prometheus Agent</a>.</p>\n</blockquote>",
      "timestamp": 1761396361.1720855,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "Prometheus Conformance Program: First round of results",
      "link": "https://prometheus.io/blog/2021/10/14/prometheus-conformance-results/",
      "published": "2021-10-14T00:00:00.000Z",
      "summary": "<p>Today, we're launching the <a href=\"https://prometheus.io/blog/2021/05/03/introducing-prometheus-conformance-program/\">Prometheus Conformance Program</a> with the goal of ensuring interoperability between different projects and vendors in the Prometheus monitoring space. While the legal paperwork still needs to be finalized, we ran tests, and we consider the below our first round of results. As part of this launch <a href=\"https://promlabs.com/blog/2021/10/14/promql-vendor-compatibility-round-three\">Julius Volz updated his PromQL test results</a>.</p>\n<p>As a quick reminder: The program is called Prometheus <strong>Conformance</strong>, software can be <strong>compliant</strong> to specific tests, which result in a <strong>compatibility</strong> rating. The nomenclature might seem complex, but it allows us to speak about this topic without using endless word snakes.</p>\n<h1>Preamble</h1>\n<h2>New Categories</h2>\n<p>We found that it's quite hard to reason about what needs to be applied to what software. To help sort my thoughts, we created <a href=\"https://docs.google.com/document/d/1VGMme9RgpclqF4CF2woNmgFqq0J7nqHn-l72uNmAxhA\">an overview</a>, introducing four new categories we can put software into:</p>\n<ul>\n<li>Metrics Exposers</li>\n<li>Agents/Collectors</li>\n<li>Prometheus Storage Backends</li>\n<li>Full Prometheus Compatibility</li>\n</ul>\n<h2>Call for Action</h2>\n<p>Feedback is very much welcome. Maybe counter-intuitively, we want the community, not just Prometheus-team, to shape this effort. To help with that, we will launch a WG Conformance within Prometheus. As with <a href=\"https://docs.google.com/document/d/1k7_Ya7j5HrIgxXghTCj-26CuwPyGdAbHS0uQf0Ir2tw\">WG Docs</a> and <a href=\"https://docs.google.com/document/d/1HWL-NIfog3_pFxUny0kAHeoxd0grnqhCBcHVPZN4y3Y\">WG Storage</a>, those will be public and we actively invite participation.</p>\n<p>As we <a href=\"https://www.youtube.com/watch?v=CBDZKjgRiew\">alluded to recently</a>, the maintainer/adoption ratio of Prometheus is surprisingly, or shockingly, low. In different words, we hope that the economic incentives around Prometheus Compatibility will entice vendors to assign resources in building out the tests with us. If you always wanted to contribute to Prometheus during work time, this might be the way; and a way that will have you touch a lot of highly relevant aspects of Prometheus. There's a variety of ways to <a href=\"https://prometheus.io/community/\">get in touch</a> with us.</p>\n<h2>Register for being tested</h2>\n<p>You can use the <a href=\"https://prometheus.io/community/\">same communication channels</a> to get in touch with us if you want to register for being tested. Once the paperwork is in place, we will hand contact information and contract operations over to CNCF.</p>\n<h1>Test results</h1>\n<h2>Full Prometheus Compatibility</h2>\n<p>We know what tests we want to build out, but we are not there yet. As announced previously, it would be unfair to hold this against projects or vendors. As such, test shims are defined as being passed. The currently semi-manual nature of e.g. the <a href=\"https://promlabs.com/blog/2021/10/14/promql-vendor-compatibility-round-three\">PromQL tests Julius ran this week</a> mean that Julius tested sending data through Prometheus Remote Write in most cases as part of PromQL testing. We're reusing his results in more than one way here. This will be untangled soon, and more tests from different angles will keep ratcheting up the requirements and thus End User confidence.</p>\n<p>It makes sense to look at projects and aaS offerings in two sets.</p>\n<h3>Projects</h3>\n<h4>Passing</h4>\n<ul>\n<li>Cortex 1.10.0</li>\n<li>M3 1.3.0</li>\n<li>Promscale 0.6.2</li>\n<li>Thanos 0.23.1</li>\n</ul>\n<h4>Not passing</h4>\n<p>VictoriaMetrics 1.67.0 is not passing and <a href=\"https://promlabs.com/blog/2021/10/14/promql-vendor-compatibility-round-three#victoriametrics\">does not intend to pass</a>. In the spirit of End User confidence, we decided to track their results while they position themselves as a drop-in replacement for Prometheus.</p>\n<h3>aaS</h3>\n<h4>Passing</h4>\n<ul>\n<li>Chronosphere</li>\n<li>Grafana Cloud</li>\n</ul>\n<h4>Not passing</h4>\n<ul>\n<li>Amazon Managed Service for Prometheus</li>\n<li>Google Cloud Managed Service for Prometheus</li>\n<li>New Relic</li>\n<li>Sysdig Monitor</li>\n</ul>\n<p>NB: As Amazon Managed Service for Prometheus is based on Cortex just like Grafana Cloud, we expect them to pass after the next update cycle.</p>\n<h2>Agent/Collector</h2>\n<h3>Passing</h3>\n<ul>\n<li>Grafana Agent 0.19.0</li>\n<li>OpenTelemetry Collector 0.37.0</li>\n<li>Prometheus 2.30.3</li>\n</ul>\n<h3>Not passing</h3>\n<ul>\n<li>Telegraf 1.20.2</li>\n<li>Timber Vector 0.16.1</li>\n<li>VictoriaMetrics Agent 1.67.0</li>\n</ul>\n<p>NB: We tested Vector 0.16.1 instead of 0.17.0 because there are no binary downloads for 0.17.0 and our test toolchain currently expects binaries.</p>",
      "timestamp": 1761396361.1720889,
      "translated": false
    },
    {
      "feed_name": "Prometheus Kubernetes Blog",
      "source_language": "en",
      "title": "On Ransomware Naming",
      "link": "https://prometheus.io/blog/2021/06/10/on-ransomware-naming/",
      "published": "2021-06-10T00:00:00.000Z",
      "summary": "<p>As per Oscar Wilde, imitation is the sincerest form of flattery.</p>\n<p>The names \"Prometheus\" and \"Thanos\" have <a href=\"https://cybleinc.com/2021/06/05/prometheus-an-emerging-apt-group-using-thanos-ransomware-to-target-organizations/\">recently been taken up by a ransomware group</a>. There's not much we can do about that except to inform you that this is happening. There's not much you can do either, except be aware that this is happening.</p>\n<p>While we do <em>NOT</em> have reason to believe that this group will try to trick anyone into downloading fake binaries of our projects, we still recommend following common supply chain &#x26; security practices. When deploying software, do it through one of those mechanisms:</p>\n<ul>\n<li>Binary downloads from the official release pages for <a href=\"https://github.com/prometheus/prometheus/releases\">Prometheus</a> and <a href=\"https://github.com/thanos-io/thanos/releases\">Thanos</a>, with verification of checksums provided.</li>\n<li>Docker downloads from official project controlled repositories:\n<ul>\n<li>Prometheus: <a href=\"https://quay.io/repository/prometheus/prometheus\">https://quay.io/repository/prometheus/prometheus</a> and <a href=\"https://hub.docker.com/r/prom/prometheus\">https://hub.docker.com/r/prom/prometheus</a></li>\n<li>Thanos: <a href=\"https://quay.io/repository/thanos/thanos\">https://quay.io/repository/thanos/thanos</a> and <a href=\"https://hub.docker.com/r/thanosio/thanos\">https://hub.docker.com/r/thanosio/thanos</a></li>\n</ul>\n</li>\n<li>Binaries, images, or containers from distributions you trust</li>\n<li>Binaries, images, or containers from your own internal software verification and deployment teams</li>\n<li>Build from source yourself</li>\n</ul>\n<p>Unless you can reasonably trust the specific providence and supply chain, you should not use software.</p>\n<p>As there's a non-zero chance that the ransomware group chose the names deliberately and thus might come across this blog post: Please stop. With both the ransomware and the naming choice.</p>",
      "timestamp": 1761396361.1720922,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Chaos Mesh Q&A at KUBECON EU 2022",
      "link": "https://chaos-mesh.org/blog/chaos-mesh-qa-at-kubecon-eu-2022/",
      "published": "Tue, 07 Jun 2022 00:00:00 GMT",
      "summary": "Chaos Mesh Q&A",
      "timestamp": 1761396367.480612,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Experience as an LFX Mentee for Chaos Mesh",
      "link": "https://chaos-mesh.org/blog/experience-as-a-chaos-mesh-lfx-mentee/",
      "published": "Fri, 14 Jan 2022 00:00:00 GMT",
      "summary": "Experience as an LFX Mentee for Chaos Mesh",
      "timestamp": 1761396367.4806168,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "How to Develop a Daily Reporting System to Track Chaos Testing Results",
      "link": "https://chaos-mesh.org/blog/develop-a-daily-reporting-system/",
      "published": "Tue, 11 Jan 2022 00:00:00 GMT",
      "summary": "How to Develop a Daily Reporting System to Track Chaos Testing Results",
      "timestamp": 1761396367.4806204,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Share your #ChaosMeshStory!",
      "link": "https://chaos-mesh.org/blog/share-your-chaos-mesh-story/",
      "published": "Mon, 27 Dec 2021 00:00:00 GMT",
      "summary": "Share your #ChaosMeshStory!",
      "timestamp": 1761396367.480624,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Deploy Chaos Mesh on KubeSphere",
      "link": "https://chaos-mesh.org/blog/deploy-chaos-mesh-on-kubesphere/",
      "published": "Wed, 22 Dec 2021 00:00:00 GMT",
      "summary": "Deploy Chaos Mesh on KubeSphere",
      "timestamp": 1761396367.4806275,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Chaos Mesh + SkyWalking: Better Observability for Chaos Engineering",
      "link": "https://chaos-mesh.org/blog/better-observability-for-chaos-engineering/",
      "published": "Thu, 16 Dec 2021 00:00:00 GMT",
      "summary": "Chaos Mesh + SkyWalking: Better Observability for Chaos Engineering",
      "timestamp": 1761396367.4806309,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Implementing Chaos Engineering in K8s: Chaos Mesh Principle Analysis and Control Plane Development",
      "link": "https://chaos-mesh.org/blog/implement-chaos-engineering-in-k8s/",
      "published": "Fri, 10 Dec 2021 00:00:00 GMT",
      "summary": "Implementing Chaos Engineering in K8s",
      "timestamp": 1761396367.4806342,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Hacktoberfest 2021: hack with Chaos Mesh!",
      "link": "https://chaos-mesh.org/blog/chaos-mesh-hacktoberfest-2021/",
      "published": "Tue, 28 Sep 2021 00:00:00 GMT",
      "summary": "Chaos Mesh x Hacktoberfest 2021",
      "timestamp": 1761396367.4806376,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "How to run chaos experiments on your physical machine",
      "link": "https://chaos-mesh.org/blog/run-chaos-experiments-on-physical-machines/",
      "published": "Wed, 15 Sep 2021 00:00:00 GMT",
      "summary": "How to run chaos experiments on your physical machine",
      "timestamp": 1761396367.4806404,
      "translated": false
    },
    {
      "feed_name": "Chaos Mesh Blog",
      "source_language": "en",
      "title": "Securing Online Gaming: Combine Chaos Engineering with DevOps Practices",
      "link": "https://chaos-mesh.org/blog/Securing-Online-Gaming-Combine-Chaos-Engineering-with-DevOps-Practices/",
      "published": "Thu, 26 Aug 2021 00:00:00 GMT",
      "summary": "Securing Online Gaming: Combine Chaos Engineering with DevOps Practices",
      "timestamp": 1761396367.4806437,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.2.2",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.2.2",
      "published": "",
      "summary": "<ul>\n<li>Bump to go version 1.23</li>\n<li>Bump to k8s version 1.32.5</li>\n<li>Add  simple Makefile</li>\n<li>Fix missing config on startup error</li>\n<li>Add support for CNI Spec v1.1.0</li>\n<li>Deprecate legacy CNI Spec versions</li>\n</ul>",
      "timestamp": 1761396377.7615628,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.2.1",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.2.1",
      "published": "",
      "summary": "<ul>\n<li>Thick client: mount multus-conf-dir</li>\n<li>Subdirectory CNI chain loading e2e tests</li>\n<li>Functionality for Aux CNI Chain using subdirectory based CNI configuration loading.</li>\n<li>Use cross-compilation for thick plugin build</li>\n<li>Add trivy vulnerability scanner in build step</li>\n<li>Properly structure empty CNI result return</li>\n<li>Bumps to libcni v1.3.0</li>\n</ul>",
      "timestamp": 1761396377.7615678,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.2.0",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.2.0",
      "published": "",
      "summary": "<p>This release is focused on reliability and compatibility updates:</p>\n<ul>\n<li>Supports CNI spec v1.2.0</li>\n<li>Updated network-attachment-definition-client to v1.7.6 (thanks <a class=\"user-mention notranslate\" href=\"https://github.com/Brian-McM\">@Brian-McM</a>! for the fix)</li>\n<li>Handles \"pod not found\" during CNI ADD gracefully\n<ul>\n<li>And tolerates network-status annotation failures on fast-deleted pods (when they're not found)</li>\n</ul>\n</li>\n<li>Adds context + better timeout handling for API server calls</li>\n<li>Avoids stale cache issues with live pod lookups</li>\n<li>(And there's fixes for e2e config and runtimeConfig API versions)</li>\n</ul>",
      "timestamp": 1761396377.761572,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.1.4",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.1.4",
      "published": "",
      "summary": "<p>Updates to use go version 1.22 at a minimum, to address concerns in <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24790\" rel=\"nofollow\">CVE-2024-24790</a></p>\n<p>See related details in <a class=\"issue-link js-issue-link\" href=\"https://github.com/k8snetworkplumbingwg/multus-cni/issues/1354\">#1354</a></p>",
      "timestamp": 1761396377.7615755,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.1.3",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.1.3",
      "published": "",
      "summary": "<p>Updates net-attach-def client library to 1.7.5</p>\n<p>From the release notes:</p>\n<blockquote>\n<p>This release contains a fix related to the determination of the default interface, e.g. setting the default parameter to true in the network-status annotation based on the presence of a gateway in the CNI ADD success result ips.gateway and makes the determination of the default based on the first interface that has an associated value of gateway (using the interface index in the ips element in the CNI ADD success result).</p>\n</blockquote>\n<blockquote>\n<p>This provides flexibility especially in CRI-O which uses the first interface and IP addresses for the pod.IP in Kubernetes, therefore. Containerd functionality is unchanged in that it uses the value for the IP addresses specifically</p>\n</blockquote>\n<blockquote>\n<p>It's worth noting that CNI ADD success results which do not contain any interfaces will be discarded in this determination of the default, therefore it's recommended to set one with an associated gateway if aiming to have it be noted as the default.</p>\n</blockquote>\n<p>See also:<br />\n<a href=\"https://github.com/k8snetworkplumbingwg/network-attachment-definition-client/releases/tag/v1.7.5\">https://github.com/k8snetworkplumbingwg/network-attachment-definition-client/releases/tag/v1.7.5</a> <a class=\"issue-link js-issue-link\" href=\"https://github.com/k8snetworkplumbingwg/network-attachment-definition-client/pull/73\">k8snetworkplumbingwg/network-attachment-definition-client#73</a></p>",
      "timestamp": 1761396377.7615793,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.1.2",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.1.2",
      "published": "",
      "summary": "<p>Updates net-attach-def client for improvements backwards compatibility for network-status in latest updates to the client library, especially related to Calico.</p>\n<p>See also: <a class=\"issue-link js-issue-link\" href=\"https://github.com/k8snetworkplumbingwg/network-attachment-definition-client/pull/72\">k8snetworkplumbingwg/network-attachment-definition-client#72</a></p>",
      "timestamp": 1761396377.761583,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.1.1",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.1.1",
      "published": "",
      "summary": "<p>Updates net-attach-def client to v1.7.3 to account for fixes relative to the Network Plumbing Working Group specification, especially how CNI results are handled when the CNI result contains more than one container-side interface in the return.</p>",
      "timestamp": 1761396377.7615867,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.1.0",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.1.0",
      "published": "",
      "summary": "<p>Primarily a maintenance release after some time, but, does include some notable features:</p>\n<ul>\n<li>Initial implementation for DRA (dynamic resource allocation)</li>\n<li>Updated net-attach-def-client library with fixes for multiple interfaces in CNI results</li>\n<li>Includes fixes for parity with configuration options from Multus 3.x</li>\n<li>Improved API handling using informers</li>\n</ul>",
      "timestamp": 1761396377.7615905,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.0.2",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.0.2",
      "published": "",
      "summary": "<p>Includes additional CNI DEL error ignored in <a class=\"issue-link js-issue-link\" href=\"https://github.com/k8snetworkplumbingwg/multus-cni/pull/1084\">#1084</a></p>",
      "timestamp": 1761396377.761594,
      "translated": false
    },
    {
      "feed_name": "Multus CNI Blog",
      "source_language": "en",
      "title": "v4.0.1",
      "link": "https://github.com/k8snetworkplumbingwg/multus-cni/releases/tag/v4.0.1",
      "published": "",
      "summary": "No content.",
      "timestamp": 1761396377.7615979,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.27.4",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.27.4",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>firewall: add option to disable fully-random mode for MASQUERADE by <a class=\"user-mention notranslate\" href=\"https://github.com/gilgameshfreedom\">@gilgameshfreedom</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2281\">#2281</a></li>\n<li>OWNERS: remove philips by <a class=\"user-mention notranslate\" href=\"https://github.com/philips\">@philips</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2286\">#2286</a></li>\n<li>Fix: recreate VXLAN device (flannel.*) when external interface is deleted and re-added by <a class=\"user-mention notranslate\" href=\"https://github.com/pratikjagrut\">@pratikjagrut</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2272\">#2272</a></li>\n<li>Fix interface IP address lookup in dual-stack mode by <a class=\"user-mention notranslate\" href=\"https://github.com/np-13\">@np-13</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2283\">#2283</a></li>\n<li>Prepare Flannel to v0.27.4 updated CNI image and OWNERS by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2287\">#2287</a></li>\n<li>Removed PodSecurityPolicy manifest creation by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2288\">#2288</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/gilgameshfreedom\">@gilgameshfreedom</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2281\">#2281</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/np-13\">@np-13</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2283\">#2283</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.27.3...v0.27.4\"><tt>v0.27.3...v0.27.4</tt></a></p>",
      "timestamp": 1761396378.0808334,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.27.3",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.27.3",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>Bump the etcd group with 4 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2268\">#2268</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2269\">#2269</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2271\">#2271</a></li>\n<li>Bump golang.org/x/sys from 0.34.0 to 0.35.0 in the other-go-modules group by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2274\">#2274</a></li>\n<li>Bump github.com/coreos/go-systemd/v22 from 22.5.0 to 22.6.0 in the other-go-modules group by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2275\">#2275</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2276\">#2276</a></li>\n<li>Prepare for release v0.27.3 by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2278\">#2278</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.27.2...v0.27.3\"><tt>v0.27.2...v0.27.3</tt></a></p>",
      "timestamp": 1761396378.080838,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.27.2",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.27.2",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>Bump the other-go-modules group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2260\">#2260</a></li>\n<li>Bump the etcd group with 4 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2238\">#2238</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2257\">#2257</a></li>\n<li>Optimize Dockerfile by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2261\">#2261</a></li>\n<li>Bump k8s libs and test version by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2262\">#2262</a></li>\n<li>Bump etcd version in tests by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2263\">#2263</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a>[bot] in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2265\">#2265</a></li>\n<li>Prepare release v0.27.2 by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2266\">#2266</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.27.1...v0.27.2\"><tt>v0.27.1...v0.27.2</tt></a></p>",
      "timestamp": 1761396378.0808418,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.27.1",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.27.1",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>doc: document flag --iptables-forward-rules by <a class=\"user-mention notranslate\" href=\"https://github.com/pratikjagrut\">@pratikjagrut</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2249\">#2249</a></li>\n<li>capture close() err on subnet file save by <a class=\"user-mention notranslate\" href=\"https://github.com/ahmetb\">@ahmetb</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2248\">#2248</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2246\">#2246</a></li>\n<li>enable setting resources in helm chart by <a class=\"user-mention notranslate\" href=\"https://github.com/tyholling\">@tyholling</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2250\">#2250</a></li>\n<li>Fix deadlock in startup for large clusters by <a class=\"user-mention notranslate\" href=\"https://github.com/sudheerv\">@sudheerv</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2251\">#2251</a></li>\n<li>Bump golang.org/x/sync from 0.13.0 to 0.15.0 in the other-go-modules group by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2256\">#2256</a></li>\n<li>Added flag to enable blackhole route locally for Canal by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2258\">#2258</a></li>\n<li>Allow me to designate a nodeSelector in the helm chart by <a class=\"user-mention notranslate\" href=\"https://github.com/apanzerj\">@apanzerj</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2259\">#2259</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/pratikjagrut\">@pratikjagrut</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2249\">#2249</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/ahmetb\">@ahmetb</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2248\">#2248</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/tyholling\">@tyholling</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2250\">#2250</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/sudheerv\">@sudheerv</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2251\">#2251</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/apanzerj\">@apanzerj</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2259\">#2259</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.27.0...v0.27.1\"><tt>v0.27.0...v0.27.1</tt></a></p>",
      "timestamp": 1761396378.0808456,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.27.0",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.27.0",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2229\">#2229</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2231\">#2231</a></li>\n<li>Update to the latest flannel cni-plugins v1.7.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/mgfritch\">@mgfritch</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2236\">#2236</a></li>\n<li>test: fix e2e tests in CI workflows and don't run the workflows on \"push\" events by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2240\">#2240</a></li>\n<li>Bump the other-go-modules group across 1 directory with 3 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2235\">#2235</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2234\">#2234</a></li>\n<li>Bump k8s and sles test version by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2241\">#2241</a></li>\n<li>fix: clean-up rules when starting instead of shutting down by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2239\">#2239</a></li>\n<li>Bump k8s to  1.30 and netlink to v1.3.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2242\">#2242</a></li>\n<li>Prepare for release v0.27.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2243\">#2243</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/mgfritch\">@mgfritch</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2236\">#2236</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.26.7...v0.27.0\"><tt>v0.26.7...v0.27.0</tt></a></p>",
      "timestamp": 1761396378.0808492,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.26.7",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.26.7",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>move to go 1.23.6 and prepare to update to v0.26.7 by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2230\">#2230</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.26.6...v0.26.7\"><tt>v0.26.6...v0.26.7</tt></a></p>",
      "timestamp": 1761396378.080853,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.26.6",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.26.6",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>refactor release.yaml to reduce use of potentially vulnerable GH Actions by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2207\">#2207</a></li>\n<li>Bump golang.org/x/net from 0.34.0 to 0.36.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2202\">#2202</a></li>\n<li>Upload chart archive with the release files by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2209\">#2209</a></li>\n<li>Bump go.etcd.io/etcd/client/v3 from 3.5.18 to 3.5.19 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2197\">#2197</a></li>\n<li>add missing GH_TOKEN env var in release.yaml by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2210\">#2210</a></li>\n<li>Bump github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc from 1.0.1111 to 1.0.1122 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2203\">#2203</a></li>\n<li>Bump go.etcd.io/etcd/tests/v3 from 3.5.18 to 3.5.20 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2212\">#2212</a></li>\n<li>Bump github.com/golang-jwt/jwt/v4 from 4.5.1 to 4.5.2 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2211\">#2211</a></li>\n<li>Pin all GHA to a specific SHA commit by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2214\">#2214</a></li>\n<li>Bump github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common from 1.0.1125 to 1.0.1129 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2213\">#2213</a></li>\n<li>Organize dependabot PR's more clearly by using groups by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2221\">#2221</a></li>\n<li>Bump the tencent group with 2 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2224\">#2224</a></li>\n<li>Bump the etcd group with 4 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2223\">#2223</a></li>\n<li>Bump github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common from 1.0.1138 to 1.0.1139 in the tencent group by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2226\">#2226</a></li>\n<li>Use peer's wireguard port, not our own by <a class=\"user-mention notranslate\" href=\"https://github.com/euank\">@euank</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2200\">#2200</a></li>\n<li>Prepare for release v0.26.6 by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2227\">#2227</a></li>\n<li>Fix release workflow by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2228\">#2228</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/euank\">@euank</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2200\">#2200</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.26.5...v0.26.6\"><tt>v0.26.5...v0.26.6</tt></a></p>",
      "timestamp": 1761396378.0808566,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.26.5",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.26.5",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>Bump github.com/avast/retry-go/v4 from 4.6.0 to 4.6.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2194\">#2194</a></li>\n<li>Bump github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc from 1.0.1090 to 1.0.1111 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2193\">#2193</a></li>\n<li>Added cni file configuration on the chart by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2195\">#2195</a></li>\n<li>enable setting CNI directory paths in helm chart by <a class=\"user-mention notranslate\" href=\"https://github.com/killianmuldoon\">@killianmuldoon</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2191\">#2191</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/killianmuldoon\">@killianmuldoon</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2191\">#2191</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.26.4...v0.26.5\"><tt>v0.26.4...v0.26.5</tt></a></p>",
      "timestamp": 1761396378.0808601,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.26.4",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.26.4",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>Prepare for flannel release v0.26.3 by <a class=\"user-mention notranslate\" href=\"https://github.com/stretched\">@stretched</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2159\">#2159</a></li>\n<li>fix: add missing MY_NODE_NAME environment variable in chart by <a class=\"user-mention notranslate\" href=\"https://github.com/go-bai\">@go-bai</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2148\">#2148</a></li>\n<li>feat: add bool to control CNI config installation using Helm by <a class=\"user-mention notranslate\" href=\"https://github.com/vasrem\">@vasrem</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2150\">#2150</a></li>\n<li>Bump alpine from 20240923 to 20250108 in /images by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2162\">#2162</a></li>\n<li>Bump github.com/containernetworking/plugins from 1.6.1 to 1.6.2 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2165\">#2165</a></li>\n<li>Bump go.etcd.io/etcd/tests/v3 from 3.5.17 to 3.5.18 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2173\">#2173</a></li>\n<li>fix: Fix high CPU usage when losing etcd connection and try to re-est… by <a class=\"user-mention notranslate\" href=\"https://github.com/dhilgarth\">@dhilgarth</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2172\">#2172</a></li>\n<li>Moved to github container registry by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2177\">#2177</a></li>\n<li>Bump github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc from 1.0.1075 to 1.0.1090 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2174\">#2174</a></li>\n<li>Prepare to update to v0.26.4 by <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2178\">#2178</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/stretched\">@stretched</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2159\">#2159</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/go-bai\">@go-bai</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2148\">#2148</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/vasrem\">@vasrem</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2150\">#2150</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.26.3...v0.26.4\"><tt>v0.26.3...v0.26.4</tt></a></p>",
      "timestamp": 1761396378.0808637,
      "translated": false
    },
    {
      "feed_name": "Flannel CNI Blog",
      "source_language": "en",
      "title": "v0.26.3",
      "link": "https://github.com/flannel-io/flannel/releases/tag/v0.26.3",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>Don't panic upon shutdown when running in standalone mode by <a class=\"user-mention notranslate\" href=\"https://github.com/dhilgarth\">@dhilgarth</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2136\">#2136</a></li>\n<li>Bump k8s deps to 0.29.12 by <a class=\"user-mention notranslate\" href=\"https://github.com/thomasferrandiz\">@thomasferrandiz</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2142\">#2142</a></li>\n<li>Bump golang.org/x/net from 0.31.0 to 0.33.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2156\">#2156</a></li>\n<li>Bump github.com/jonboulle/clockwork from 0.4.0 to 0.5.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2153\">#2153</a></li>\n<li>Bump github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/vpc from 1.0.1056 to 1.0.1075 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2154\">#2154</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/dhilgarth\">@dhilgarth</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/flannel-io/flannel/pull/2136\">#2136</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/flannel-io/flannel/compare/v0.26.2...v0.26.3\"><tt>v0.26.2...v0.26.3</tt></a></p>",
      "timestamp": 1761396378.0808675,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "v1.14.11",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/v1.14.11",
      "published": "",
      "summary": "<h2>v1.14.11 (2025-10-11)</h2>\n<ul>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/879c670ea5f5bf9cccefd9b03f64307193c2122f\">879c670ea</a> release v1.14.11</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/f9c8743da113fa2b58988bc12c9b3c9bc1d8b2fb\">f9c8743da</a> fix sometimes e2e metallb err (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5761\">#5761</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/7be12912a92734696a04961d73b58ce3e380747d\">7be12912a</a> bump k8s to v1.32.9 (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5780\">#5780</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/fc113898e1a22ba363917a20aeeec452a4183cdd\">fc113898e</a> change the route offset to increase the priority of dst routes (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5781\">#5781</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/16df110ef996b5562896b56b1a3e35e72cadd457\">16df110ef</a> fix(deps): update golang (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5774\">#5774</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/8921d886444f8749d41df5d130f5a3b96dc652c0\">8921d8864</a> prepare for next release</li>\n</ul>\n<h3>Contributors</h3>\n<ul>\n<li>Mengxin Liu</li>\n<li>changluyi</li>\n<li>renovate[bot]</li>\n<li>张祖建</li>\n</ul>",
      "timestamp": 1761396378.4291496,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "kube-ovn-v1.14.11",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/kube-ovn-v1.14.11",
      "published": "",
      "summary": "<p>release v1.14.11</p>",
      "timestamp": 1761396378.4291544,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "v1.14.10",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/v1.14.10",
      "published": "",
      "summary": "<h2>v1.14.10 (2025-09-29)</h2>\n<ul>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/3b2bee7d02ff49c381d743ac6d6ae1f59ea990d8\">3b2bee7d0</a> release v1.14.10</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/8cb0a7875c07189ce1a5fd4107983dda93ff8d31\">8cb0a7875</a> Increase timeout</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/144b772ae7f780412471ea4338261a354a145b5a\">144b772ae</a> fix gabage u2o openflow (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5757\">#5757</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/74ca5981fbbf63b6d4eedae01a0fe4591c62dca1\">74ca5981f</a> prepare for next release</li>\n</ul>\n<h3>Contributors</h3>\n<ul>\n<li>Mengxin Liu</li>\n<li>changluyi</li>\n</ul>",
      "timestamp": 1761396378.4291584,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "kube-ovn-v1.14.10",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/kube-ovn-v1.14.10",
      "published": "",
      "summary": "<p>release v1.14.10</p>",
      "timestamp": 1761396378.429162,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "v1.14.9",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/v1.14.9",
      "published": "",
      "summary": "<h2>v1.14.9 (2025-09-23)</h2>\n<ul>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/238d0ef8b6dd49992f389bafea4ac378b617f287\">238d0ef8b</a> release v1.14.9</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/244e2826835623c8fbde8ba91b406acf435da9e4\">244e28268</a> check ovn0 mac should be set expected (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5749\">#5749</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/c85a490db05758d5e743915cd95353bbcf625de4\">c85a490db</a> prepare for next release</li>\n</ul>\n<h3>Contributors</h3>\n<ul>\n<li>Mengxin Liu</li>\n<li>changluyi</li>\n</ul>",
      "timestamp": 1761396378.4291658,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "kube-ovn-v1.14.9",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/kube-ovn-v1.14.9",
      "published": "",
      "summary": "<p>release v1.14.9</p>",
      "timestamp": 1761396378.4291694,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "v1.14.8",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/v1.14.8",
      "published": "",
      "summary": "<h2>v1.14.8 (2025-09-22)</h2>\n<ul>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/12c136b8e1ea149e7b73fa64d83a8b7b1412676b\">12c136b8e</a> release v1.14.8</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/75a1eac11164b6e782903bea698728403094a793\">75a1eac11</a> controller: fix lsp not deleted in gc (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5735\">#5735</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/e33b6d3869a45ede9d0b4d00a83e6eb5d3546718\">e33b6d386</a> prepare for next release</li>\n</ul>\n<h3>Contributors</h3>\n<ul>\n<li>Mengxin Liu</li>\n<li>张祖建</li>\n</ul>",
      "timestamp": 1761396378.429173,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "kube-ovn-v1.14.8",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/kube-ovn-v1.14.8",
      "published": "",
      "summary": "<p>release v1.14.8</p>",
      "timestamp": 1761396378.4291768,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "v1.14.7",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/v1.14.7",
      "published": "",
      "summary": "<h2>v1.14.7 (2025-09-18)</h2>\n<ul>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/7f2af0a97f0d0c8fa0ad8f2f1dac4284a98d726d\">7f2af0a97</a> release v1.14.7</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/47f0b30f9e2f10ac3a587daf424f1a825cfc5217\">47f0b30f9</a> ipam: fix allocating from ippool (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5731\">#5731</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/42f70e9d93c33116fc80d127d22f5b06a4d66cd8\">42f70e9d9</a> controller: fix ip allocation from IPPools (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5729\">#5729</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/31c620ca74a661f9095841cd16a8c06fce5735f6\">31c620ca7</a> use arp for ipve network ready check (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5716\">#5716</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/b5dc7251d32b24b8b83d3f0c72b41279a65eee91\">b5dc7251d</a> fix(deps): update module golang.org/x/tools to v0.37.0 (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5714\">#5714</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/96b08d582959ce79799fccebb50ee602bf16c5b8\">96b08d582</a> gc ip by different types (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5702\">#5702</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/8c5e18b529cbeac32b4971ff1786715bbee6e5f9\">8c5e18b52</a> fix(deps): update module golang.org/x/net to v0.44.0 (<a class=\"issue-link js-issue-link\" href=\"https://github.com/kubeovn/kube-ovn/pull/5705\">#5705</a>)</li>\n<li><a href=\"https://github.com/kubeovn/kube-ovn/commit/0343e64b6e04c44ac9bcef29b8b539d2be126ad0\">0343e64b6</a> prepare for next release</li>\n</ul>\n<h3>Contributors</h3>\n<ul>\n<li>Mengxin Liu</li>\n<li>renovate[bot]</li>\n<li>张祖建</li>\n</ul>",
      "timestamp": 1761396378.4291804,
      "translated": false
    },
    {
      "feed_name": "Kube-OVN Blog",
      "source_language": "en",
      "title": "kube-ovn-v1.14.7",
      "link": "https://github.com/kubeovn/kube-ovn/releases/tag/kube-ovn-v1.14.7",
      "published": "",
      "summary": "<p>release v1.14.7</p>",
      "timestamp": 1761396378.4291847,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.6.1",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.6.1",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>Fixes a bug where kube-router would modify ipsets from other system applications. This change removes ipsets that don't belong to kube-router before writing them out for ipset to restore.</p>\n<p>This isn't a new bug, this is the same functionality that kube-router has had for years, but has recently become more problematic with certain applications (like Istio) also attempting to modify ipsets around the same time that kube-router does.</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/92572c75ac5c4fbc0de9faf873e48f16748ab3ba\"><tt>92572c7</tt></a> fix(ipset): ignore non-kube-router ipsets</li>\n</ul>",
      "timestamp": 1761396379.139034,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.6.0",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.6.0",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>It has been more than half a year since our last official kube-router release, so I think we're more than past time to do so. Additionally, there have been quite a few items that have been fixed or upgraded.</p>\n<h3>Highlights &amp; Changed Functionality</h3>\n<ul>\n<li>The Network Services Controller (enabled via <code>--run-service-proxy</code>) now fetches metrics when the metrics URL is hit rather than on the sync period (<code>--ipvs-sync-period</code>). This allows for more fine-grained and up-to-date metrics on IPVS services. (Thanks <a class=\"user-mention notranslate\" href=\"https://github.com/rkojedzinszky\">@rkojedzinszky</a>!)</li>\n<li>Service's <code>externalIP</code> and <code>LoadBalancerIP</code> are now labels on IPVS metrics which can increase cardinality, but also provides better visibility for services. Prior to this, only the <code>ClusterIP</code> or <code>NodePort</code> labels were added to metrics.</li>\n<li>The GoBGP port can be changed or disabled via <code>--gpbgp-admin-port</code> to create more secure / flexible deployments of kube-router</li>\n<li>We converted a lot of exec's  out to <code>iproute2</code> into <code>netlink</code> library calls, making the code more idiomatic, faster, and less fragile to userspace tooling changes</li>\n<li>When both DSR and Maglev is enabled on a service kube-router will automatically enable the kernel option <code>sloppy_tcp</code> for IPVS which allows for greater service routing consistency when transitioning nodes (Thanks <a class=\"user-mention notranslate\" href=\"https://github.com/AnupamGhosh\">@AnupamGhosh</a>!)</li>\n<li>All references to Endpoints has been removed since the API is now fully deprecated and EndpointSlices is now used behind the scenes</li>\n</ul>\n<h3>Fixed Issues</h3>\n<ul>\n<li><a href=\"https://github.com/cloudnativelabs/kube-router/issues/1895\">1895</a> - IPv6 NDP NA/NS dropped when using egress network policy</li>\n<li><a href=\"https://github.com/cloudnativelabs/kube-router/issues/1875\">1875</a> - Collect service statistics real-time</li>\n<li><a href=\"https://github.com/cloudnativelabs/kube-router/issues/1860\">1888</a> - Resilience to TCP SYN Node Loss</li>\n<li><a href=\"https://github.com/cloudnativelabs/kube-router/issues/1816\">1816</a> - support change the default port of GoBGP</li>\n<li><a href=\"https://github.com/cloudnativelabs/kube-router/issues/1614\">1614</a> - Fix CLI Options - --master doesn't work without --kubeconfig</li>\n</ul>\n<h3>Library Updates</h3>\n<ul>\n<li>Go Version: <code>1.23.6</code> -&gt; <code>1.25.1</code></li>\n<li>Alpine Version: <code>3.21</code> -&gt; <code>3.22</code></li>\n<li>Go Releaser Version: <code>v2.5.0</code> -&gt; <code>v2.12.2</code></li>\n<li>GoBGP Version: <code>v3.29.0</code> -&gt; <code>v3.37.0</code></li>\n<li>CNI Plugin Version: <code>v1.6.2</code> -&gt; <code>v1.8.0</code></li>\n<li>Kubernetes Libraries: <code>v1.31.3</code> -&gt; <code>v1.34.1</code></li>\n</ul>\n<h2>Contributions</h2>\n<p>Special thanks to <a class=\"user-mention notranslate\" href=\"https://github.com/rkojedzinszky\">@rkojedzinszky</a>, <a class=\"user-mention notranslate\" href=\"https://github.com/AnupamGhosh\">@AnupamGhosh</a>, <a class=\"user-mention notranslate\" href=\"https://github.com/qbnit0\">@qbnit0</a> for contributing to kube-router and helping make this release possible!</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/8bf2e5630d28439c80a6d57ac1ea71a8793ad4cf\"><tt>8bf2e56</tt></a> - feat(cni): update v1.6.2 -&gt; v1.8.0 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b04463fe4bc4b9b924ade40d14659749a62ae315\"><tt>b04463f</tt></a> - feat(moq): update v0.5.1 -&gt; v0.6.0 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b1b3f93da985161ebc2602b1619672cda80c1b14\"><tt>b1b3f93</tt></a> - feat(goreleaser): update v2.12.2 -&gt; v2.5.0 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a4fb70a095c7e8ab78204901014bcdc842e786f1\"><tt>a4fb70a</tt></a> - feat(lint): update golangci-lint v2.0.2 -&gt; v2.4.0 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ec5c41db1322c1e73d9206025a2ea413413de546\"><tt>ec5c41d</tt></a> - feat(markdown): update linter from 0.39.0 -&gt; 0.45.0 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/727ff28f07978424fa9d3b76946678d79862c53e\"><tt>727ff28</tt></a> - feat(actions): update stale v9 -&gt; v10 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/97138fde600c1f7e5321bd7ce985f9d09c43051b\"><tt>97138fd</tt></a> - feat(actions): update setup-go v5 -&gt; v6 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d691aaa9312b2bbbe065d2b241347fb6c4478efb\"><tt>d691aaa</tt></a> - feat(alpine): update 3.21 -&gt; 3.22 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4d41eb634e3dca71c3cc56ddb6f32751b1838637\"><tt>4d41eb6</tt></a> - feat(go): update go 1.24 -&gt; 1.25 + mods <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/94e72aa8b3e567202cec2abf395f7c0ccbd8283d\"><tt>94e72aa</tt></a> - fix(NPC): allow bi-directional ipv6 network discovery <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bafe94034b8942d25f67347caeb5729fe82d11e2\"><tt>bafe940</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/0855bbea73dd56709700ad86831e76c52a0f53a8\"><tt>0855bbe</tt></a> - build(deps): bump google.golang.org/protobuf from 1.36.6 to 1.36.8 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/16d7e2b0163a39aaf1c50397c15268d28f8bb85d\"><tt>16d7e2b</tt></a> - build(deps): bump the k8s-dependencies group across 1 directory with 4 updates <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/cb3ada2890cb08e428ca4909218bab9e6dfd2de0\"><tt>cb3ada2</tt></a> - build(deps): bump k8s from 0.31.3 -&gt; 0.33.3 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d7214cec4f7b8932f83d42b737173aff4ef50e18\"><tt>d7214ce</tt></a> - feat(Endpoints): convert Endpoints -&gt; EndpointSlices <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bb9835ac1474d20d9c87f9b5bc4cc9a00663ebb2\"><tt>bb9835a</tt></a> - feat(lballoc_test.go): make mock informer satisfy SharedIndexInformer interface <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/21719d28f1135e526fd914e0ce2ff0dfbafc501a\"><tt>21719d2</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/config <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/af1984a9d5d356e6a8700993a086cabb5e227513\"><tt>af1984a</tt></a> - build(deps): bump github.com/spf13/pflag from 1.0.9 to 1.0.10 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a5c94046fecf99200787ebab7869504ebab31ccf\"><tt>a5c9404</tt></a> - build(deps): bump github.com/onsi/gomega from 1.38.0 to 1.38.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/36b6634ae6fe260f7027683a8539cd40a33b5fe1\"><tt>36b6634</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ab81c6e2efcaa65fa2b2ddb694b09bfb04d47473\"><tt>ab81c6e</tt></a> - build(deps): bump github.com/prometheus/client_golang <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/732d7a72dc03f2ab50b0e2acebb7bc02d635f665\"><tt>732d7a7</tt></a> - fix(nsc): add loadbalancer IPs to metrics <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/c2fd6333731a5a67f297e8f970169dfb53d8cad6\"><tt>c2fd633</tt></a> - fix(nsc): sync field name <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b4a9ba70fdc7b004934ccb73decfbdacb5b52389\"><tt>b4a9ba7</tt></a> - fix(nsc): rename network_services_metrics.go <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/7533c183a14640637a38d8b96ea39fa172c05c29\"><tt>7533c18</tt></a> - feat(nsc): getMetricsServiceMap() rebuilds only after services changed <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5efb999169671ebf2304d6f32932331c0a5d6bbc\"><tt>5efb999</tt></a> - feat(nsc): replace unsafe.Pointer with atomic.Pointer <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d0163ab725fdad9130a0c0bb9938dbee95596f70\"><tt>d0163ab</tt></a> - feat(nsc): move part of Collect() to getMetricsServiceMap() <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4e8bb705b5d79266be9c81a3f6a234245f1ead1f\"><tt>4e8bb70</tt></a> - feat(nsc): move metrics logic to separate file <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a224198c89b8189bf38d392e4a5c87438362c6ff\"><tt>a224198</tt></a> - feat(nsc): optimize key in temporary serviceMap <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4ed0cf411713707aede588f411508c2fa3797e02\"><tt>4ed0cf4</tt></a> - feat(nsc): improve Service statistics <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/1b4b6d6b2bab6b7d05aa7c8111b2a256028b187b\"><tt>1b4b6d6</tt></a> - feat(nsc): eliminate nested loops in Collect() <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/766627645e6b4038373c60c2125231feb00727eb\"><tt>7666276</tt></a> - feat(nsc): collect service statistics on demand <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4b4ebec81f0663f63742497f288c185044ccc5eb\"><tt>4b4ebec</tt></a> - feat(nsc): prepare serviceMap to be accessed by collector thread <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/513201509694400612b8cecb8bc7f193195b4901\"><tt>5132015</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/feature/ec2/imds <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4479fd26ad26ddb1fc5c7869fac0c1de2b478f3c\"><tt>4479fd2</tt></a> - build(deps): bump golang.org/x/net from 0.42.0 to 0.43.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/3127ca891dbf48937eaa4c71ade1f0986989dccf\"><tt>3127ca8</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2 from 1.37.1 to 1.38.3 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bca841873e0393e2a545a87b882d9bc1548fda17\"><tt>bca8418</tt></a> - build(deps): bump github.com/aws/smithy-go from 1.22.5 to 1.23.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5d31e35f11747af67a8978f86bb8d7fdab7be3bd\"><tt>5d31e35</tt></a> - build(deps): bump google.golang.org/grpc from 1.74.2 to 1.75.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/9b9402e87b5a1d0794f5db4e61c48ca7f106d0ee\"><tt>9b9402e</tt></a> - build(deps): bump github.com/spf13/pflag from 1.0.7 to 1.0.9 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/90821a18c07da14652498ea1fb1ff4371cd2cab1\"><tt>90821a1</tt></a> - build(deps): bump actions/checkout from 4 to 5 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/97710008e9436d1ca51fd3458b30cd447c26bdcb\"><tt>9771000</tt></a> - build(deps): bump github.com/stretchr/testify from 1.10.0 to 1.11.1 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/02fbeccb0b1a45a5a016c1700b78d89148b34a04\"><tt>02fbecc</tt></a> - build(deps): bump golang.org/x/sys from 0.34.0 to 0.35.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5e397e50e77edf856a796e379f533f689a467c5c\"><tt>5e397e5</tt></a> - fix failed message <code>&lt;Anupam Ghosh&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bbb8f3b0d9416be54b694529d74e809a34190c7c\"><tt>bbb8f3b</tt></a> - disable sloppy_tcp if there is no DSR &amp; Maglev service <code>&lt;Anupam Ghosh&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/98e38e9e66d66b269ce53b32ee4452a404e50dd1\"><tt>98e38e9</tt></a> - get and set with int8 for SysctlConfig <code>&lt;Anupam Ghosh&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/598fc86349d6393f7aa89e05716d07c0256c1d90\"><tt>598fc86</tt></a> - enable sloppy_tcp when DSR and Maglev is enabled <code>&lt;Anupam Ghosh&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/46d7d6209b07e8d75233b389119299a6b4b2da16\"><tt>46d7d62</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/config <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b7a3721e0030b7941bfbe9a4993ec3e17d1eaaf7\"><tt>b7a3721</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d9c471287c7bc0dcd94c0c4a9469aafe622abb63\"><tt>d9c4712</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/feature/ec2/imds <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/cfb91196837642aa341661bd8a6182dd3a8bfa96\"><tt>cfb9119</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/0f4c577bb1bf837c73ba8275d16a76777698ebcd\"><tt>0f4c577</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/c64aed5ac0f6c701762aa2e6f8c7f57e4183f193\"><tt>c64aed5</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/config <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4f31e544dddac172c0ccba45490f8ca1ae3040b7\"><tt>4f31e54</tt></a> - build(deps): bump github.com/onsi/gomega from 1.37.0 to 1.38.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/9bf90c7e52413d7f3bbb50da83bcec3b97f40a62\"><tt>9bf90c7</tt></a> - build(deps): bump google.golang.org/grpc from 1.73.0 to 1.74.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/496ea3b6ded4f0d9e219fd679d882e2c6deab8bf\"><tt>496ea3b</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/716b3de677689bcb330722166299076603dc117a\"><tt>716b3de</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/feature/ec2/imds <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/48e859b05305b651671c0f77a6fc7044534cc3b5\"><tt>48e859b</tt></a> - build(deps): bump github.com/spf13/pflag from 1.0.6 to 1.0.7 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/7adddd4680f676accd8cb6bf859754328cb16d64\"><tt>7adddd4</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/569954a8c3c39a8749b58cc98839027a68678128\"><tt>569954a</tt></a> - build(deps): bump golang.org/x/net from 0.41.0 to 0.42.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b3f5082593a8302c4e5f15ea6072c473f1b38aea\"><tt>b3f5082</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bcaced787ba6de8cf106784a6ea4947617ae9bab\"><tt>bcaced7</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e2f96815cc206bc4cf5c86d4b3db7e3032e12e9f\"><tt>e2f9681</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/700620509f5de5072285aee81be145ac6dd2992b\"><tt>7006205</tt></a> - feat(DSR): disable routing DSR traffic via kube-bridge <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/2ebcac62ecb235ba5be789cd6a4b836a32744758\"><tt>2ebcac6</tt></a> - feat(linux_networking): add some additional logging <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/eb04cbe8fdd2ab397552dcd343a20731a79d5654\"><tt>eb04cbe</tt></a> - fact(linux_tunnels): split SetupOverlayTunnel <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/7a0fca32588a63ac0cfe60daed8048dc4f70bb5a\"><tt>7a0fca3</tt></a> - feat(linux_tunnels): convert to use netlink library <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/8504c52e80560bb4b7724c5c470b8b377ac6e56e\"><tt>8504c52</tt></a> - fix(DSR): setup source routing for all external IPs <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e6edc853fb10c0cba1401bbf75d89a610c292c65\"><tt>e6edc85</tt></a> - fix(ipAddrDel): check to see if IP exists on interface before delete <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/69e58eda047b33fb165d1fb8b39bd6bf95b7e244\"><tt>69e58ed</tt></a> - feat(NSC): add some additional debugging to traffic director <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/94bfc0d9ba1f8c851f621eea1f837f9aaba114aa\"><tt>94bfc0d</tt></a> - fix(ipAddrDel): check for routes before trying to delete <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e29b6a32758ce81a61cf3bfc1ec7fc5703e2bc1b\"><tt>e29b6a3</tt></a> - fix(NSC): pass fwmark to traffic director as an int <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/3c895955f7d507e69864802d0220b65cd1215d9d\"><tt>3c89595</tt></a> - fact(utils): factor out single subnet ip logic <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b070531ec5bb5f3b29f1dd8d8859ad6cc66daea0\"><tt>b070531</tt></a> - fix: add proper nil rule src handling <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f2b0d785a06ecd0c00e2ffa6d75339e96c1267d7\"><tt>f2b0d78</tt></a> - fact: add ip utils library &amp; add unit testing <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4795a07e7c2ea93f14d8f5aafae5a019ffc614a2\"><tt>4795a07</tt></a> - fix(ip rule): use NewRule() for all rule creations <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/56076051f8c8db159711050a6010322fa5b320bf\"><tt>5607605</tt></a> - fix(linux_networking.go): add scope to local routes <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/80328ace670593a7c289e7004cafb1367aec7e06\"><tt>80328ac</tt></a> - fix(linux_networking.go): filter routes to be deleted by table <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/2836065ffe35b2c5c10607eafaaeadcc578c7546\"><tt>2836065</tt></a> - fix(linux_routing.go): choose first rt_tables file <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f59a4f5ae81dac6302861031e5c442748edcecc5\"><tt>f59a4f5</tt></a> - feat: convert execs to ip to netlink calls <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d7e14f73e7417c1521af73d46f3ee1ce78fd5ffc\"><tt>d7e14f7</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e04d62b9b6eb10232460fe16950ba5870253cbe9\"><tt>e04d62b</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/config <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/1f3f5b9e3f2516333cc61d40a40bc62cf81a5735\"><tt>1f3f5b9</tt></a> - pkg/cmd/kube-router: Have gocritic ignore if-else chain <code>&lt;qbnit0&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4b1c95464f6214b3a53c4057e0cf2e2fd58f540a\"><tt>4b1c954</tt></a> - Support in-cluster config with --master <code>&lt;qbnit0&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/2eeab05055acb7d0aa3bd912755b5be17830c970\"><tt>2eeab05</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/46280e0c0e9ac7f6f2ab056565d7ccd6f7371f1d\"><tt>46280e0</tt></a> - build(deps): bump golang.org/x/net from 0.40.0 to 0.41.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ab0d68665069624777bfacdbcd99cfbcd90a730f\"><tt>ab0d686</tt></a> - build(deps): bump google.golang.org/grpc from 1.72.2 to 1.73.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/36120e27f9f4040a3aeec58d7a06f401b9493866\"><tt>36120e2</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/config <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b9d5cb5a932345ed2247ea454a5b4c39beb6a6be\"><tt>b9d5cb5</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d606220b45d89933f9e21b0ee9f36b1bbf1f51ab\"><tt>d606220</tt></a> - build(deps): bump google.golang.org/grpc from 1.72.1 to 1.72.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/82cb7ad1ad5b2e32ecc4bb7477b4d1096745258e\"><tt>82cb7ad</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d6ae8cc4810510a066211514533dd6ff2568868e\"><tt>d6ae8cc</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/14cb61253bfce56427871982db8f80cab76c65b7\"><tt>14cb612</tt></a> - build(deps): bump google.golang.org/grpc from 1.72.0 to 1.72.1 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/aa5117df95c2c4f395c20a1643e102135f565c82\"><tt>aa5117d</tt></a> - build(deps): bump golang.org/x/net from 0.39.0 to 0.40.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f8b691edc1956c4fa064bbc9cc9422b46b339636\"><tt>f8b691e</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/7b990884f3f5b7f223da2058893f7a2c072cf9af\"><tt>7b99088</tt></a> - build(deps): bump github.com/osrg/gobgp/v3 from 3.36.0 to 3.37.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/fc867eb8dc5d169b9d237231bc62fbc6569a95bb\"><tt>fc867eb</tt></a> - build(deps): bump golang.org/x/sys from 0.32.0 to 0.33.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f86e3b02833ca55e98b019d2a423bf0870edbe71\"><tt>f86e3b0</tt></a> - build(deps): bump github.com/vishvananda/netlink from 1.3.0 to 1.3.1 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bb61315637dacf589e9855b8c2e5015c029061d2\"><tt>bb61315</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/81c4a27e3e052132a07d8b415d77061579e8c9d2\"><tt>81c4a27</tt></a> - build(deps): bump golang.org/x/net from 0.38.0 to 0.39.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ab95405823ba54f509f0c368faf4548094f3efc4\"><tt>ab95405</tt></a> - build(deps): bump google.golang.org/grpc from 1.71.0 to 1.72.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/0c495cc9401c8d662277e410f06c0a4bd21a0e5e\"><tt>0c495cc</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/config <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5d221175bab856eab714ec4e12f8633b7d3310ab\"><tt>5d22117</tt></a> - build(deps): bump github.com/prometheus/client_golang <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/9788adac39433e195214cd443520df35ff97e7ef\"><tt>9788ada</tt></a> - build(deps): bump github.com/onsi/gomega from 1.36.2 to 1.37.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5389fe1e472ad6fb40cae07fd944fecb0fd752cc\"><tt>5389fe1</tt></a> - build(deps): bump golang.org/x/sys from 0.31.0 to 0.32.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/df89045c9a63e8c5193a2541f95e8dc375121d31\"><tt>df89045</tt></a> - build(deps): bump github.com/osrg/gobgp/v3 from 3.29.0 to 3.36.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f2b6d6213cafa71901a987a594387a858c6ce9b4\"><tt>f2b6d62</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/43d6dd7d96be8b5ac3c4c7816c31dffe0b832a89\"><tt>43d6dd7</tt></a> - build(deps): bump github.com/aws/aws-sdk-go-v2/service/ec2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/6a1d15c24c4a8c5d291c523a0010d448e5b6757d\"><tt>6a1d15c</tt></a> - Use golangci-lint 2.0.2 <code>&lt;Manuel Rüger&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/16b48c39a4247e4269617642d8c8a32b9263c2a0\"><tt>16b48c3</tt></a> - Build with go 1.24 <code>&lt;Manuel Rüger&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d8cac914ab0b60ad41ed887bccea8ff9272c48cc\"><tt>d8cac91</tt></a> - feat(options): allow disabling GoBGP grpc port <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/de3e2186a181740a222ce0f662168ead58946089\"><tt>de3e218</tt></a> - feat(options): add flag for GoBGP grpc port <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ef09bbd63c7626f32dfed6865716b1b020f7d83f\"><tt>ef09bbd</tt></a> - feat(go): update golang.org dependencies <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ff8d42fd83b71be070cc101a25635ad3dc117538\"><tt>ff8d42f</tt></a> - Update aws-sdk to v2 <code>&lt;Manuel Rüger&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e9a0f5eec0c60cd317e527a643e8fd4e22c6d160\"><tt>e9a0f5e</tt></a> - build(deps): bump google.golang.org/protobuf from 1.36.5 to 1.36.6 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/7e03652fef4acb2bc53a21d1cae9314e09f3fff3\"><tt>7e03652</tt></a> - build(deps): bump github.com/ccoveille/go-safecast from 1.5.0 to 1.6.1 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e0e47b23107df45bc9a70c3666f284f1024bad3b\"><tt>e0e47b2</tt></a> - build(deps): bump google.golang.org/grpc from 1.69.4 to 1.71.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f90cba31d133513d32c4b6a947e6cc2d53a4abf2\"><tt>f90cba3</tt></a> - build(deps): bump github.com/prometheus/client_golang <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/2b783fe35287a619e2350a4c90a8c5356bca09c9\"><tt>2b783fe</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/8f620d8d1dded4a004ace69cee26450f736f867b\"><tt>8f620d8</tt></a> - build(deps): bump google.golang.org/protobuf from 1.36.4 to 1.36.5 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/6be661a23bccb075923f7901c62cc957f5496bdf\"><tt>6be661a</tt></a> - build(deps): bump golang.org/x/net from 0.34.0 to 0.35.0 <code>&lt;dependabot[bot]&gt;</code></li>\n</ul>",
      "timestamp": 1761396379.1390388,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.5.0",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.5.0",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>This update is mainly a dependency and docker image base update. For a long time, kube-router has been stalled on Alpine 3.18 because of a breaking change with the upstream iptables user space. However, this was fixed in <code>iptables-1.8.11</code> which was released in November and then was integrated into Alpine 3.21 early this Month. See <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/issues/1789\">#1789</a> for more information.</p>\n<p>This should make kube-router much more tolerant of iptables / nftables rules added by recent versions of the netfilter userspaces.</p>\n<p>This release does contain a few prominent fixes since the last release of v2.4.1:</p>\n<ul>\n<li><code>ipset.Save()</code> was introduced at the start of the NetworkPolicyController resolving a race condition between the NetworkPolicyController (<code>--run-firewall</code>) and the NetworkServiceController (<code>--run-service-proxy</code>). See <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1806\">#1806</a> (thanks <a class=\"user-mention notranslate\" href=\"https://github.com/alexcriss\">@alexcriss</a> for reporting this and being patient while we tried to reproduce)</li>\n<li>Internal cluster traffic is now properly excluded from NAT conditions which resolves a regression that was introduced in the v2.3 release line. See: <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/issues/1778\">#1778</a> (thanks <a class=\"user-mention notranslate\" href=\"https://github.com/zerkms\">@zerkms</a> for reporting this)</li>\n</ul>\n<p>Other major dependency updates:</p>\n<ul>\n<li>Bundled CNI plugins have been updated from v1.4.0 -&gt; v1.6.2</li>\n<li>Go version has been updated from v1.22.3 -&gt; v1.23.6</li>\n</ul>\n<h2>Contributions</h2>\n<p>Special thanks to <a class=\"user-mention notranslate\" href=\"https://github.com/rbrtbnfgl\">@rbrtbnfgl</a> and <a class=\"user-mention notranslate\" href=\"https://github.com/dsseng\">@dsseng</a> for their contributions to this release!</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/85e429e9c72b2bc7de93b5f1bcce20e7c924386d\"><tt>85e429e</tt></a> - doc(RELEASE.md): update release docs <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b97e2bb45f9a5ab1bdfbf2927ce6d2b0d11994d1\"><tt>b97e2bb</tt></a> - feat(Makefile): update CNI plugins v1.4.0 -&gt; v1.6.2 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/baad5884b65bd905f69a949720a29d277644a3f8\"><tt>baad588</tt></a> - feat(gomoq): update moq version v0.3.4 -&gt; v0.5.1 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5e9cc722f224ae4eb5eafe73d34debbdcb948159\"><tt>5e9cc72</tt></a> - feat(goreleaser): update goreleaser version and syntax <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/16d1f6bc7928fadd1ed60098c7e5933c5c37c726\"><tt>16d1f6b</tt></a> - feat(Makefile): update golangci-lint 1.56.2-&gt;1.63.4 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d8430e21c0b307da64323be8466878fc69f66f05\"><tt>d8430e2</tt></a> - fix(lint): remove nolint for error messages <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/760fcd5c85f3b2cb897fc8ea7981eb2d47fdac10\"><tt>760fcd5</tt></a> - fix(lint): remove non-constant format string (govet) <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/48b631c4eaba66868d2ca37d98734e2af964d3de\"><tt>48b631c</tt></a> - fix(lint): remove unnecessary variable initializations (copyloopvar) <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/858fdf659dbd48aaa2f083fc48e27b5c4d4bf97f\"><tt>858fdf6</tt></a> - fix(lint): prevent against integer overflow errors <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5cdc4170eb2df978297156705b98eee1ad45efb7\"><tt>5cdc417</tt></a> - feat: update to go 1.22.3-&gt;1.23.6 and alpine 3.18-&gt;3.21 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d1982eb29c7750876fe345a1f3b67bd65dac45dd\"><tt>d1982eb</tt></a> - Added ipset.Save at the start of syncNetworkPolicyChains <code>&lt;Roberto Bonafiglia&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e6d72455e488981918bd84654b5efb819afcf710\"><tt>e6d7245</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/1dfd31bd408c061dcff4a6aad0ba06177b1b1515\"><tt>1dfd31b</tt></a> - build(deps): bump github.com/spf13/pflag from 1.0.5 to 1.0.6 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4a2537babff3b29509b01d68ca1f364f0343f468\"><tt>4a2537b</tt></a> - build(deps): bump google.golang.org/protobuf from 1.36.3 to 1.36.4 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/0a4ca09ed1b872972e29e32746db652da01e8b46\"><tt>0a4ca09</tt></a> - build(deps): bump github.com/aws/aws-sdk-go from 1.55.5 to 1.55.6 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/0b7cc95f40cf6ebfdf108f5cb78d2547348e6535\"><tt>0b7cc95</tt></a> - build(deps): bump google.golang.org/protobuf from 1.36.2 to 1.36.3 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bca3227e32a703f73993b81057c36000e95e9d71\"><tt>bca3227</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/70fa746cd72a00694ed82124a1e0d10ca4ae539c\"><tt>70fa746</tt></a> - build(deps): bump google.golang.org/grpc from 1.69.2 to 1.69.4 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/aa7cffb6f039c11d23affddfaea1d57662f4d1af\"><tt>aa7cffb</tt></a> - fix(NSC): only set rp_filter to 2 if it is 1 <code>&lt;Dmitry Sharshakov&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b2e2ef8059a647c668f65702d116fed944fb89ad\"><tt>b2e2ef8</tt></a> - build(deps): bump golang.org/x/net from 0.33.0 to 0.34.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/60566a9576c4a468123ac0ba0cb94419072022ca\"><tt>60566a9</tt></a> - build(deps): bump google.golang.org/protobuf from 1.36.1 to 1.36.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/c067b8328b1bfe7c04bfa671c6a57ec03262838f\"><tt>c067b83</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/cb67baec634d170cea18cfb52fd34ba465bd5ffd\"><tt>cb67bae</tt></a> - build(deps): bump github.com/onsi/gomega from 1.36.1 to 1.36.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/93498fb1acddbecc06fd404e5222071530e69bc3\"><tt>93498fb</tt></a> - build(deps): bump google.golang.org/grpc from 1.69.0 to 1.69.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/970c52d597903c0688c2bd838112758c489068f6\"><tt>970c52d</tt></a> - build(deps): bump google.golang.org/protobuf from 1.35.2 to 1.36.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b7dc040456b81a696b53fcb35df1927ed998eced\"><tt>b7dc040</tt></a> - build(deps): bump golang.org/x/net from 0.32.0 to 0.33.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/955bf54c882794f85793edbedb9804f78fb93efb\"><tt>955bf54</tt></a> - build(deps): bump golang.org/x/net from 0.31.0 to 0.32.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/44f95a661b1922354b47bd629907b1c010f58d6a\"><tt>44f95a6</tt></a> - build(deps): bump github.com/onsi/gomega from 1.36.0 to 1.36.1 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/7ebe51a127cd745f628f8e73cee8269e75917e6b\"><tt>7ebe51a</tt></a> - build(deps): bump google.golang.org/grpc from 1.67.1 to 1.69.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/6ce2c6dbf26fdad9154eb0b4a28c36d659015b66\"><tt>6ce2c6d</tt></a> - fix(NRC): find all node IPs for NAT exclusion <code>&lt;Aaron U'Ren&gt;</code></li>\n</ul>",
      "timestamp": 1761396379.1390429,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.4.1",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.4.1",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>Fixes a bug that was introduced in kube-router v2.3.0 and beyond when some of the code was refactored: <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/issues/1778\">#1778</a></p>\n<p>Primarily affects routing to host services when navigating an IPIP tunnel. Thanks to <a class=\"user-mention notranslate\" href=\"https://github.com/zerkms\">@zerkms</a> for finding and reporting this bug.</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4dafd5c63c02cfc2b1bbfbc7c4eb0e56b3b11b2b\"><tt>4dafd5c</tt></a> fix(NRC): find all node IPs for NAT exclusion</li>\n</ul>",
      "timestamp": 1761396379.1390464,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.4.0",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.4.0",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>.goreleaser.yml: Fix ldflag paths by <a class=\"user-mention notranslate\" href=\"https://github.com/mrueg\">@mrueg</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1770\">#1770</a></li>\n<li>fix: avoid to use http.DefaultServeMux which includes defaults routes inited by go like /debug/pprof by <a class=\"user-mention notranslate\" href=\"https://github.com/morlay\">@morlay</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1771\">#1771</a></li>\n<li>build(deps): bump github.com/onsi/gomega from 1.35.1 to 1.36.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1773\">#1773</a></li>\n<li>build(deps): bump github.com/stretchr/testify from 1.9.0 to 1.10.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1772\">#1772</a></li>\n<li>feat(NSC): change service.local internal traffic policy posture by <a class=\"user-mention notranslate\" href=\"https://github.com/aauren\">@aauren</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1774\">#1774</a></li>\n<li>build(deps): bump golang.org/x/sys from 0.27.0 to 0.28.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1776\">#1776</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/morlay\">@morlay</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1771\">#1771</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/compare/v2.3.0...v2.4.0\"><tt>v2.3.0...v2.4.0</tt></a></p>",
      "timestamp": 1761396379.1390502,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.3.0",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.3.0",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>fix: select ICMP version for common ICMP rules by @qbnit in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1713\">#1713</a></li>\n<li>build(deps): bump golang.org/x/net from 0.27.0 to 0.28.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1717\">#1717</a></li>\n<li>build(deps): bump github.com/onsi/gomega from 1.33.1 to 1.34.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1716\">#1716</a></li>\n<li>build(deps): bump golang.org/x/sys from 0.22.0 to 0.24.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1718\">#1718</a></li>\n<li>build(deps): bump github.com/prometheus/client_golang from 1.19.1 to 1.20.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1722\">#1722</a></li>\n<li>build(deps): bump github.com/docker/docker from 27.1.1+incompatible to 27.1.2+incompatible by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1721\">#1721</a></li>\n<li>build(deps): bump github.com/coreos/go-iptables from 0.7.0 to 0.8.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1727\">#1727</a></li>\n<li>build(deps): bump google.golang.org/grpc from 1.65.0 to 1.66.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1725\">#1725</a></li>\n<li>build(deps): bump github.com/onsi/gomega from 1.34.1 to 1.34.2 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1726\">#1726</a></li>\n<li>build(deps): bump github.com/docker/docker from 27.1.2+incompatible to 27.2.0+incompatible by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1728\">#1728</a></li>\n<li>build(deps): bump github.com/vishvananda/netlink from 1.2.1-beta.2 to 1.3.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1729\">#1729</a></li>\n<li>build(deps): bump github.com/prometheus/client_golang from 1.20.1 to 1.20.2 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1731\">#1731</a></li>\n<li>build(deps): bump golang.org/x/sys from 0.24.0 to 0.25.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1730\">#1730</a></li>\n<li>build(deps): bump github.com/prometheus/client_golang from 1.20.2 to 1.20.3 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1734\">#1734</a></li>\n<li>build(deps): bump golang.org/x/net from 0.28.0 to 0.29.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1733\">#1733</a></li>\n<li>build(deps): bump github.com/docker/docker from 27.2.0+incompatible to 27.2.1+incompatible by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1736\">#1736</a></li>\n<li>build(deps): bump google.golang.org/grpc from 1.66.0 to 1.66.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1735\">#1735</a></li>\n<li>Enhance DSR docs aroung CRI socket mounting by <a class=\"user-mention notranslate\" href=\"https://github.com/jnummelin\">@jnummelin</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1737\">#1737</a></li>\n<li>Refactor: Abstract Node Info by <a class=\"user-mention notranslate\" href=\"https://github.com/aauren\">@aauren</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1739\">#1739</a></li>\n<li>build(deps): bump google.golang.org/grpc from 1.66.1 to 1.67.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1744\">#1744</a></li>\n<li>build(deps): bump github.com/prometheus/client_golang from 1.20.3 to 1.20.4 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1740\">#1740</a></li>\n<li>Remove some unused error fields from test cases by <a class=\"user-mention notranslate\" href=\"https://github.com/twz123\">@twz123</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1747\">#1747</a></li>\n<li>More injectRoute() Preparation Refactors by <a class=\"user-mention notranslate\" href=\"https://github.com/aauren\">@aauren</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1745\">#1745</a></li>\n<li>build(deps): bump golang.org/x/net from 0.29.0 to 0.30.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1753\">#1753</a></li>\n<li>build(deps): bump github.com/docker/docker from 27.2.1+incompatible to 27.3.1+incompatible by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1743\">#1743</a></li>\n<li>Fix various issues with refactors by <a class=\"user-mention notranslate\" href=\"https://github.com/aauren\">@aauren</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1755\">#1755</a></li>\n<li>fix(dsr): change grpc resolver to passthrough by <a class=\"user-mention notranslate\" href=\"https://github.com/aauren\">@aauren</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1756\">#1756</a></li>\n<li>build(deps): bump github.com/prometheus/client_golang from 1.20.4 to 1.20.5 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1757\">#1757</a></li>\n<li>build(deps): bump the k8s-dependencies group across 1 directory with 4 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1758\">#1758</a></li>\n<li>build(deps): bump google.golang.org/protobuf from 1.34.2 to 1.35.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1752\">#1752</a></li>\n<li>build(deps): bump github.com/onsi/gomega from 1.34.2 to 1.35.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1759\">#1759</a></li>\n<li>build(deps): bump github.com/onsi/gomega from 1.35.0 to 1.35.1 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1761\">#1761</a></li>\n<li>Misc Fixes and Updates by <a class=\"user-mention notranslate\" href=\"https://github.com/aauren\">@aauren</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1763\">#1763</a></li>\n<li>build(deps): bump the k8s-dependencies group with 4 updates by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1764\">#1764</a></li>\n<li>build(deps): bump golang.org/x/net from 0.30.0 to 0.31.0 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1766\">#1766</a></li>\n<li>build(deps): bump google.golang.org/protobuf from 1.35.1 to 1.35.2 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1768\">#1768</a></li>\n<li>build(deps): bump github.com/vishvananda/netns from 0.0.4 to 0.0.5 by <a class=\"user-mention notranslate\" href=\"https://github.com/dependabot\">@dependabot</a> in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1769\">#1769</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li>@qbnit made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1713\">#1713</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/jnummelin\">@jnummelin</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1737\">#1737</a></li>\n<li><a class=\"user-mention notranslate\" href=\"https://github.com/twz123\">@twz123</a> made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1747\">#1747</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/compare/v2.2.0...v2.3.0\"><tt>v2.2.0...v2.3.0</tt></a></p>",
      "timestamp": 1761396379.1390538,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.2.2",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.2.2",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>Just a small release that fixes DSR that has been broken on some container runtimes during the v2.X release line. See <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/issues/1754\">#1754</a> for more information.</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5179953b2b016f91fdd5d285d69e6baa81d9b268\"><tt>5179953</tt></a> - fix(dsr): change grpc resolver to passthrough <code>&lt;Aaron U'Ren&gt;</code></li>\n</ul>",
      "timestamp": 1761396379.1390576,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.2.1",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.2.1",
      "published": "",
      "summary": "<h2>What's Changed</h2>\n<ul>\n<li>fix: select ICMP version for common ICMP rules by @qbnit in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1713\">#1713</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li>@qbnit made their first contribution in <a class=\"issue-link js-issue-link\" href=\"https://github.com/cloudnativelabs/kube-router/pull/1713\">#1713</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/compare/v2.2.0...v2.2.1\"><tt>v2.2.0...v2.2.1</tt></a></p>",
      "timestamp": 1761396379.1390612,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.2.0",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.2.0",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>In addition to a whole lot of dependency updates. The major update here is re-adding the missing ip6tables binary that was accidentally removed when we reverted Alpine 3.19 -&gt; Alpine 3.18 as part of the v2.1.X line of releases.</p>\n<p>Additionally, this also fixes a number of issues with IPv6 where there was:</p>\n<ul>\n<li>Some hard-coded <code>/32</code> netmasks still in the code</li>\n<li>Specific <code>IPv4</code> families hard-coded when looking for local interfaces</li>\n<li>Missing allowances for ICMPv6 neighbor discovery when network policies were applied</li>\n<li>An issue where bogus IPv6 routes were being added when service VIPs were added to the kube-dummy-if interface, causing traffic from the same node to no longer be able to route</li>\n</ul>\n<h2>Contributions</h2>\n<p>Thanks <a class=\"user-mention notranslate\" href=\"https://github.com/ncopa\">@ncopa</a> and <a class=\"user-mention notranslate\" href=\"https://github.com/mrueg\">@mrueg</a> for contributing to this release!</p>\n<p>Also a big thanks to <a class=\"user-mention notranslate\" href=\"https://github.com/k6av\">@k6av</a> for reporting some critical issues with IPv6 support.</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5affda2dbfab61a0886da06310d7b3464ad359d0\"><tt>5affda2</tt></a> - feat(goreleaser): update goreleaser-action v5-&gt;v6 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a0442e5abd95c65eccfda4c13c51dae9b4a3b0de\"><tt>a0442e5</tt></a> - fix: allow basic ICMPv6 neighbor discovery <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/eac472c6b0306349ec7c80ef579076d23cab6943\"><tt>eac472c</tt></a> - feat(go.mod): update all deps to latest <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b1a2fbf0258be0cbf638d787c18e585d1bb9f540\"><tt>b1a2fbf</tt></a> - feat(go): update 1.21.7 -&gt; 1.22.3 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/285eb498c03360094ba29efbedec76e27b1fdcf0\"><tt>285eb49</tt></a> - build(deps): bump golang.org/x/net from 0.26.0 to 0.27.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/d09173837c298b59ecd18f09a10c2a76f1615103\"><tt>d091738</tt></a> - build(deps): bump github.com/aws/aws-sdk-go from 1.55.4 to 1.55.5 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/2522b4d1bc159165b6b47a61db63b2a4ade40c04\"><tt>2522b4d</tt></a> - fix(getAllLocalIPs): get IPv6 &amp; IPv4 addresses <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/71072c1de6951726270b3bd89255ee4a3da6fe96\"><tt>71072c1</tt></a> - doc(NSC): add extra comments to setupHandlers call <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b217e7b434f511d0db3f34dfe8b64a7e868e22bb\"><tt>b217e7b</tt></a> - fix(NSC): ensure kube-router owns kube-router-svip <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4f3e706e35cb3205d9221dd6713ebdb9bc9fe8c1\"><tt>4f3e706</tt></a> - build(deps): bump github.com/aws/aws-sdk-go from 1.51.32 to 1.55.4 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/1cb9499fe5126faabb4c21cb82eee78cbb681dc5\"><tt>1cb9499</tt></a> - build(deps): bump github.com/docker/docker <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/bab572558c27beed563d5d567585cbbd2ae7b277\"><tt>bab5725</tt></a> - build(deps): bump golang.org/x/net from 0.25.0 to 0.26.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e8962dd8b2cd83e943262050d4259984b9f745cf\"><tt>e8962dd</tt></a> - fix(linux_networking.go): remove dangling IPv6 routes <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/26b539e830c5e554ddf4133cb745bb589eebbdc8\"><tt>26b539e</tt></a> - fix(feature_request.md): update markdown templating <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/84c3549892375485c5a864625ef3ee192d0f4de6\"><tt>84c3549</tt></a> - fix(bug_report.md): update markdown templating <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/94b17b8fe8ab5da924e3ef6f1093a05c444aa951\"><tt>94b17b8</tt></a> - fix(utils.go): static /32 subnet mask reference <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/787b90691a5e15a5da8c077d63a68e8a4aea070b\"><tt>787b906</tt></a> - build(deps): bump google.golang.org/protobuf from 1.34.0 to 1.34.2 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/af9377956a36ddf1892f1df6f5db00477ad65362\"><tt>af93779</tt></a> - build(deps): bump github.com/onsi/gomega from 1.32.0 to 1.33.1 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/2ed68ace396bd2128d42f31e9cb51073542b6e25\"><tt>2ed68ac</tt></a> - build(deps): bump docker/build-push-action from 5 to 6 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/4013d21d0690a3afb735237f4b3d406fcde786e5\"><tt>4013d21</tt></a> - fact(Dockerfile): fix linter warning for AS <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a2d2e011b480899081bbd75dde078a6a99af6944\"><tt>a2d2e01</tt></a> - fix(Dockerfile): re-add ip6tables binary <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a1125f6e185ca97456b9d280886595e624d24a7a\"><tt>a1125f6</tt></a> - fix: ensure that ipv6 is not disabled in kernel <code>&lt;Natanael Copa&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f042d08fdbb9c75a3fa2b6c201fa400881be2b03\"><tt>f042d08</tt></a> - build(deps): bump github.com/hashicorp/go-version from 1.6.0 to 1.7.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/ab8c810fff1d34c8299079f5581c88150bb03e5b\"><tt>ab8c810</tt></a> - build(deps): bump golang.org/x/net from 0.24.0 to 0.25.0 <code>&lt;dependabot[bot]&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/a6db642d7f052b861070b08d9560836135aa9ea0\"><tt>a6db642</tt></a> - build(deps): bump github.com/prometheus/client_golang <code>&lt;dependabot[bot]&gt;</code></li>\n</ul>",
      "timestamp": 1761396379.1390648,
      "translated": false
    },
    {
      "feed_name": "Kube-router Blog",
      "source_language": "en",
      "title": "v2.1.3",
      "link": "https://github.com/cloudnativelabs/kube-router/releases/tag/v2.1.3",
      "published": "",
      "summary": "<h2>Summary</h2>\n<p>Another bugfix release. This one fixes an issue with TCP MSS clamping (e.g. packet MTU's not being properly negotiated during TCP handshake) and an issue where iptables wasn't properly identifying that rules existed in chains causing iptables definitions to increase with every call to sync NetworkPolicy ending up in linear growth of iptables rule definitions.</p>\n<h2>Contributions</h2>\n<p>Special thanks to <a class=\"user-mention notranslate\" href=\"https://github.com/rkojedzinszky\">@rkojedzinszky</a> for fixing the TCP MSS clamping on DSR services.</p>\n<h2>Other Notes</h2>\n<p>The iptables definition growth was seemingly caused by iptables user-space tooling v1.8.10 which means that this likely only affected users of the kube-router container that was updated to alpine 3.19. User's using kube-router as a daemon outside a container runtime, may want to be wary of updating the iptables user-space to that version.</p>\n<h2>Changelog</h2>\n<ul>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/f6c45f37e42d96f8498aa01e81bb41f25fe11edc\"><tt>f6c45f3</tt></a> - feat(alpine): revert 3.19 -&gt; 3.18 <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/e980a17bddf4525b2f9a9f762e9b3c798b3226f4\"><tt>e980a17</tt></a> - fix(nsc): remove previous TCPMSS rules during setting up DSR <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/defdf64a83b860411e37b09327964efbddcbf2b1\"><tt>defdf64</tt></a> - fix(nsc): remove previous TCPMSS rules <code>&lt;Aaron U'Ren&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/b1070f113f6c0f35673af1d64c5fe58fecd21f76\"><tt>b1070f1</tt></a> - feat(nsc): apply TCPMSS rules on kube-bridge interface only <code>&lt;Richard Kojedzinszky&gt;</code></li>\n<li><a class=\"commit-link\" href=\"https://github.com/cloudnativelabs/kube-router/commit/5fdde0681fa9abd94fcab386ef10677a1a9d6366\"><tt>5fdde06</tt></a> - fix(nsc): TCPMSS rules are created per-service and for reply packets only <code>&lt;Richard Kojedzinszky&gt;</code></li>\n</ul>",
      "timestamp": 1761396379.1390684,
      "translated": false
    }
  ]
}